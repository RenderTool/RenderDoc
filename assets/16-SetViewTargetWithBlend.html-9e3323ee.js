import{_ as c,r as p,o as i,c as l,d as s,w as e,a as n,b as a,e as r}from"./app-6eaee12a.js";const u="/RenderDoc/assets/SetViewTargetWithBlend001-7e4503e4.png",d="/RenderDoc/assets/SetViewTargetWithBlend002-6e57e799.png",k="/RenderDoc/assets/SetViewTargetWithBlend003-e25b7661.png",m={},v=r('<figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="方案1" tabindex="-1"><a class="header-anchor" href="#方案1" aria-hidden="true">#</a> 方案1</h2><ol><li>定义一个接口和一个相机数组</li></ol><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
<span class="token comment">//用于存场景中的相机</span>
<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span> BlueprintReadWrite<span class="token punctuation">,</span> Category <span class="token operator">=</span> Input<span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>AllowPrivateAccess <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
TArray<span class="token operator">&lt;</span>ACameraActor<span class="token operator">*</span><span class="token operator">&gt;</span> CameraArr<span class="token punctuation">;</span>

<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> BlueprintNativeEvent<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;CameraInterface&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">IChangeCamera</span> <span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span><span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>继承并实现</li></ol><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//InterfaceChangeCamera Part1 .h 相机切换函数</span>
<span class="token keyword">void</span> <span class="token function">IChangeCamera_Implementation</span><span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span> <span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token class-name">AInteractiveControllerPawn</span><span class="token double-colon punctuation">::</span><span class="token function">IChangeCamera_Implementation</span><span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span> <span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>PlayerController<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SwitchCameraByID</span><span class="token punctuation">(</span>PlayerController<span class="token punctuation">,</span> CameraArr<span class="token punctuation">,</span> CameraID<span class="token punctuation">,</span> CameraSwitchTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
		GEngine<span class="token operator">-&gt;</span><span class="token function">AddOnScreenDebugMessage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.0f</span><span class="token punctuation">,</span> FColor<span class="token double-colon punctuation">::</span>White<span class="token punctuation">,</span> <span class="token class-name">FString</span><span class="token double-colon punctuation">::</span><span class="token function">SanitizeFloat</span><span class="token punctuation">(</span>CameraID<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		                                 <span class="token function">FVector2D</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//可以将其放入蓝图函数库中</span>
<span class="token keyword">void</span> <span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SwitchCameraByID</span><span class="token punctuation">(</span>APlayerController<span class="token operator">*</span> PlayerController<span class="token punctuation">,</span>
                                                <span class="token keyword">const</span> TArray<span class="token operator">&lt;</span>ACameraActor<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> CameraArr<span class="token punctuation">,</span> int32 CameraID<span class="token punctuation">,</span>
                                                <span class="token keyword">float</span> CameraSwitchTime <span class="token comment">/*= 2.0f*/</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// 检查输入的有效性</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>PlayerController <span class="token operator">||</span> CameraArr<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> CameraID <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> CameraID <span class="token operator">&gt;=</span> CameraArr<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 输入无效，提前返回</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 获取当前相机</span>
	AActor<span class="token operator">*</span> CurrentCamera <span class="token operator">=</span> PlayerController<span class="token operator">-&gt;</span><span class="token function">GetViewTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 检查相机ID是否与当前相机的ID相同</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>CameraArr<span class="token punctuation">[</span>CameraID<span class="token punctuation">]</span> <span class="token operator">==</span> CurrentCamera<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 相机已经处于活动状态，提前返回</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// 尝试将选择的相机角色转换为CameraActor类型</span>
	ACameraActor<span class="token operator">*</span> SelectedCamera <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>ACameraActor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>CameraArr<span class="token punctuation">[</span>CameraID<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>SelectedCamera<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 将新相机设置为视角目标，并应用混合过渡效果</span>
		PlayerController<span class="token operator">-&gt;</span><span class="token function">SetViewTargetWithBlend</span><span class="token punctuation">(</span>SelectedCamera<span class="token punctuation">,</span> CameraSwitchTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 可根据需要调整混合时间</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),b=n("figure",null,[n("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),h=n("h2",{id:"方案2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方案2","aria-hidden":"true"},"#"),a(" 方案2")],-1),g=n("figure",null,[n("img",{src:k,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),C=n("h2",{id:"参考文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文档","aria-hidden":"true"},"#"),a(" 参考文档")],-1),f={href:"https://forums.unrealengine.com/t/how-to-make-smooth-camera-switch-transition/585725/6",target:"_blank",rel:"noopener noreferrer"};function _(w,y){const t=p("chatmessage"),o=p("ExternalLinkIcon");return i(),l("div",null,[s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 基于SetViewTargetWithBlend平滑过度相机的几种方法 ")]),_:1}),v,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 这个方法有个缺点，就是Pawn必须提前放到场景中，然后指定相机。 ")]),_:1}),b,h,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" SetViewTargetWithBlend必须传入相机Actor而不是组件Component,而且这种绑定多相机的操作除非很明确设定，一般应该让蓝图自由发挥。 因此，我们可以添加子Actor来解决，配合之前的接口就可以实现动态切换相机了。 ")]),_:1}),g,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 当然，最好是加入一些延迟锁，防止用户高频操作。 ")]),_:1}),C,n("p",null,[n("a",f,[a("官方论坛"),s(o)])])])}const I=c(m,[["render",_],["__file","16-SetViewTargetWithBlend.html.vue"]]);export{I as default};
