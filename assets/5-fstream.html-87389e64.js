const t=JSON.parse('{"key":"v-905736f2","path":"/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/5-fstream.html","title":"c++5.fstream|文件操作","lang":"zh-CN","frontmatter":{"title":"c++5.fstream|文件操作","order":5,"category":["c++"],"description":"数据类型 描述 ofstream 输出文件流，用于创建文件并向文件写入信息。 ifstream 输入文件流，用于从文件读取信息。 fstream 文件流，同时具有 ofstream 和 ifstream 功能，可以创建文件，向文件写入信息，从文件读取信息。 步骤 操作 代码示例 1 包含头文件 #include &lt;fstream&gt; 2 打开文件（文件输入流） std::ifstream inputFile(\\"input.txt\\"); 3 打开文件（文件输出流） std::ofstream outputFile(\\"output.txt\\"); 4 打开文件（文件输入和输出流） `std::fstream file(\\"data.txt\\", std::ios::in 5 检查文件是否成功打开 if (inputFile.is_open()) { /* 文件成功打开，进行读取操作 */ } 6 读取操作（从文件中读取数据） int value; inputFile &gt;&gt; value; 7 写入操作（向文件中写入数据） outputFile &lt;&lt; \\"Hello, File!\\"; 8 读写操作（文件输入和输出流的读写操作） file &gt;&gt; value; file &lt;&lt; \\"Data\\"; 9 关闭文件流 inputFile.close(); outputFile.close(); file.close();","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/5-fstream.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++5.fstream|文件操作"}],["meta",{"property":"og:description","content":"数据类型 描述 ofstream 输出文件流，用于创建文件并向文件写入信息。 ifstream 输入文件流，用于从文件读取信息。 fstream 文件流，同时具有 ofstream 和 ifstream 功能，可以创建文件，向文件写入信息，从文件读取信息。 步骤 操作 代码示例 1 包含头文件 #include &lt;fstream&gt; 2 打开文件（文件输入流） std::ifstream inputFile(\\"input.txt\\"); 3 打开文件（文件输出流） std::ofstream outputFile(\\"output.txt\\"); 4 打开文件（文件输入和输出流） `std::fstream file(\\"data.txt\\", std::ios::in 5 检查文件是否成功打开 if (inputFile.is_open()) { /* 文件成功打开，进行读取操作 */ } 6 读取操作（从文件中读取数据） int value; inputFile &gt;&gt; value; 7 写入操作（向文件中写入数据） outputFile &lt;&lt; \\"Hello, File!\\"; 8 读写操作（文件输入和输出流的读写操作） file &gt;&gt; value; file &lt;&lt; \\"Data\\"; 9 关闭文件流 inputFile.close(); outputFile.close(); file.close();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-20T12:08:07.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-12-20T12:08:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++5.fstream|文件操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-20T12:08:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[{"level":3,"title":"1. 包含头文件：","slug":"_1-包含头文件","link":"#_1-包含头文件","children":[]},{"level":3,"title":"2. 打开文件：","slug":"_2-打开文件","link":"#_2-打开文件","children":[]},{"level":3,"title":"3. 检查文件是否成功打开：","slug":"_3-检查文件是否成功打开","link":"#_3-检查文件是否成功打开","children":[]},{"level":3,"title":"4. 读取和写入操作：","slug":"_4-读取和写入操作","link":"#_4-读取和写入操作","children":[]},{"level":3,"title":"5. 关闭文件：","slug":"_5-关闭文件","link":"#_5-关闭文件","children":[]},{"level":3,"title":"完整案例","slug":"完整案例","link":"#完整案例","children":[]}]}],"git":{"createdTime":1703074087000,"updatedTime":1703074087000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":3.23,"words":969},"filePathRelative":"language/cpp/stl[标准模板]/5-fstream.md","localizedDate":"2023年12月20日","excerpt":"\\n\\n<table>\\n<thead>\\n<tr>\\n<th>数据类型</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ofstream</td>\\n<td>输出文件流，用于创建文件并向文件写入信息。</td>\\n</tr>\\n<tr>\\n<td>ifstream</td>\\n<td>输入文件流，用于从文件读取信息。</td>\\n</tr>\\n<tr>\\n<td>fstream</td>\\n<td>文件流，同时具有 ofstream 和 ifstream 功能，可以创建文件，向文件写入信息，从文件读取信息。</td>\\n</tr>\\n</tbody>\\n</table>\\n<table>\\n<thead>\\n<tr>\\n<th>步骤</th>\\n<th>操作</th>\\n<th>代码示例</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>包含头文件</td>\\n<td><code>#include &lt;fstream&gt;</code></td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>打开文件（文件输入流）</td>\\n<td><code>std::ifstream inputFile(\\"input.txt\\");</code></td>\\n</tr>\\n<tr>\\n<td>3</td>\\n<td>打开文件（文件输出流）</td>\\n<td><code>std::ofstream outputFile(\\"output.txt\\");</code></td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>打开文件（文件输入和输出流）</td>\\n<td>`std::fstream file(\\"data.txt\\", std::ios::in</td>\\n</tr>\\n<tr>\\n<td>5</td>\\n<td>检查文件是否成功打开</td>\\n<td><code>if (inputFile.is_open()) { /* 文件成功打开，进行读取操作 */ }</code></td>\\n</tr>\\n<tr>\\n<td>6</td>\\n<td>读取操作（从文件中读取数据）</td>\\n<td><code>int value; inputFile &gt;&gt; value;</code></td>\\n</tr>\\n<tr>\\n<td>7</td>\\n<td>写入操作（向文件中写入数据）</td>\\n<td><code>outputFile &lt;&lt; \\"Hello, File!\\";</code></td>\\n</tr>\\n<tr>\\n<td>8</td>\\n<td>读写操作（文件输入和输出流的读写操作）</td>\\n<td><code>file &gt;&gt; value; file &lt;&lt; \\"Data\\";</code></td>\\n</tr>\\n<tr>\\n<td>9</td>\\n<td>关闭文件流</td>\\n<td><code>inputFile.close(); outputFile.close(); file.close();</code></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
