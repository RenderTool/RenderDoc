import{_ as g,r as p,o as k,c as m,d as e,w as s,a as n,b as a,e as l}from"./app-e0ed3b4c.js";const h="/RenderDoc/assets/enhancedimage000-5ae3e143.png",b="/RenderDoc/assets/enhancedimage001-c598a69f.png",v="/RenderDoc/assets/enhancedimage002-41540a1a.png",_="/RenderDoc/assets/enhancedimage003-21122317.png",f="/RenderDoc/assets/enhancedimage004-72c61211.png",y="/RenderDoc/assets/enhancedimage005-20249af3.png",x="/RenderDoc/assets/enhancedimage006-9090948c.png",A="/RenderDoc/assets/enhancedimage007-4f93ec11.png",T="/RenderDoc/assets/enhancedimage008-ecc01ed0.png",E="/RenderDoc/assets/enhancedimage009-be74b3ab.png",I="/RenderDoc/assets/enhancedimage010-20eeb6fb.png",C="/RenderDoc/assets/enhancedimage011-eb6623df.png",u="/RenderDoc/assets/enhancedimage012-31a97503.png",w="/RenderDoc/assets/enhancedimage013-13cc7d9a.png",R="/RenderDoc/assets/enhancedimage014-2fc46185.png",M="/RenderDoc/assets/enhancedimage016-6db71c1b.png",D="/RenderDoc/assets/enhancedimage017-f2dc368e.png",j="/RenderDoc/assets/enhancedimage018-6655b83f.png",W="/RenderDoc/assets/enhancedimage019-a8f66f26.svg",P="/RenderDoc/assets/enhancedimage020-80a50369.jpg",S="/RenderDoc/assets/enhancedimage015-7d5146e4.png",q={},O=n("h3",{id:"导读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#导读","aria-hidden":"true"},"#"),a(" 导读")],-1),L=n("h2",{id:"enhancedinput-增强输入系统",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#enhancedinput-增强输入系统","aria-hidden":"true"},"#"),a(" EnhancedInput|增强输入系统")],-1),U=n("h3",{id:"_1-插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-插件","aria-hidden":"true"},"#"),a(" 1.插件")],-1),N=n("figure",null,[n("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),B=n("h3",{id:"_2-项目设置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-项目设置","aria-hidden":"true"},"#"),a(" 2.项目设置")],-1),z=n("figure",null,[n("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),F=n("h3",{id:"_3-输入动作-input-actions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-输入动作-input-actions","aria-hidden":"true"},"#"),a(" 3.输入动作（Input Actions）")],-1),V=n("figure",null,[n("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Y=n("figure",null,[n("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),G=n("figure",null,[n("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),H=n("h3",{id:"_4-输入映射上下文-input-mapping-contexts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-输入映射上下文-input-mapping-contexts","aria-hidden":"true"},"#"),a(" 4. 输入映射上下文（Input Mapping Contexts）")],-1),X=n("figure",null,[n("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),J=n("figure",null,[n("img",{src:x,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),K=n("h4",{id:"历史问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#历史问题","aria-hidden":"true"},"#"),a(" 历史问题")],-1),Q=n("figure",null,[n("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Z=n("ul",null,[n("li",null,"复杂的输入机制无法满足。"),n("li",null,"过于简陋，例如按住、双击、联合输入等都需要用户自己实现。"),n("li",null,"性能不足，需要自己写切换逻辑，不同情况需要自己判断优先级。")],-1),$=n("h3",{id:"_5-触发状态-trigger-state",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-触发状态-trigger-state","aria-hidden":"true"},"#"),a(" 5. 触发状态（Trigger State）")],-1),nn=n("figure",null,[n("img",{src:T,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),an=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"enum"),a(),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"ETriggerEvent"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token class-name"},"uint8")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token comment"},"// No significant trigger state changes occurred and there are no active device inputs"),a(`
	None		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0x0"),n("span",{class:"token punctuation"},")"),a("		"),n("span",{class:"token function"},"UMETA"),n("span",{class:"token punctuation"},"("),a("Hidden"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`

	`),n("span",{class:"token comment"},"// Triggering occurred after one or more processing ticks"),a(`
	Triggered	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (None -> Triggered, Ongoing -> Triggered, Triggered -> Triggered)"),a(`
	
	`),n("span",{class:"token comment"},"// An event has occurred that has begun Trigger evaluation. Note: Triggered may also occur this frame."),a(`
	Started		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (None -> Ongoing, None -> Triggered)"),a(`

	`),n("span",{class:"token comment"},"// Triggering is still being processed"),a(`
	Ongoing		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Ongoing -> Ongoing)"),a(`

	`),n("span",{class:"token comment"},"// Triggering has been canceled"),a(`
	Canceled	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Ongoing -> None)"),a(`

	`),n("span",{class:"token comment"},"// The trigger state has transitioned from Triggered to None this frame, i.e. Triggering has finished."),a(`
	`),n("span",{class:"token comment"},"// NOTE: Using this event restricts you to one set of triggers for Started/Completed events. You may prefer two actions, each with its own trigger rules."),a(`
	`),n("span",{class:"token comment"},"// TODO: Completed will not fire if any trigger reports Ongoing on the same frame, but both should fire. e.g. Tick 2 of Hold (= Ongoing) + Pressed (= None) combo will raise Ongoing event only."),a(`
	Completed	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Triggered -> None)"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"enum"),a(),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"ETriggerEvent"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token base-clause"},[n("span",{class:"token class-name"},"uint8")]),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token comment"},"// 没有发生显著的触发状态变化，且没有活动的设备输入"),a(`
	None		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0x0"),n("span",{class:"token punctuation"},")"),a("		"),n("span",{class:"token function"},"UMETA"),n("span",{class:"token punctuation"},"("),a("Hidden"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a(`

	`),n("span",{class:"token comment"},"// 在一个或多个处理帧之后触发"),a(`
	Triggered	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (None -> Triggered, Ongoing -> Triggered, Triggered -> Triggered)"),a(`
	
	`),n("span",{class:"token comment"},"// 发生了开始触发器求值的某个事件。注意：本帧也可能发生 Triggered 状态。"),a(`
	Started		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (None -> Ongoing, None -> Triggered)"),a(`

	`),n("span",{class:"token comment"},"// 触发仍在进行处理"),a(`
	Ongoing		`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Ongoing -> Ongoing)"),a(`

	`),n("span",{class:"token comment"},"// 触发已被取消"),a(`
	Canceled	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Ongoing -> None)"),a(`

	`),n("span",{class:"token comment"},"// 触发状态在本帧从 Triggered 转换为 None，即触发已完成。"),a(`
	`),n("span",{class:"token comment"},"// 注意：使用此事件将限制您对于 Started/Completed 事件的触发规则。您可能更喜欢两个动作，每个都有自己的触发规则。"),a(`
	`),n("span",{class:"token comment"},"// TODO: 如果同一帧内任何触发器报告 Ongoing，则 Completed 不会触发，但两者都应触发。例如，Hold（= Ongoing） + Pressed（= None）组合的第 2 帧将仅触发 Ongoing 事件。"),a(`
	Completed	`),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),a(),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),a("	"),n("span",{class:"token comment"},"// ETriggerState (Triggered -> None)"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),en=n("h3",{id:"_6-修饰符-modifiers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-修饰符-modifiers","aria-hidden":"true"},"#"),a(" 6. 修饰符（Modifiers）")],-1),tn=n("figure",null,[n("img",{src:E,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),on=n("blockquote",null,[n("p",null,'增强输入支持来自一维源的输入，例如键盘的方向键或常用的"WASD"键配置；可通过应用正确的输入修饰符来实现此控制方案。 具体而言，使用 负（Negate） 可以将某些键注册为负值， 而使用 交换输入轴值（Swizzle Input Axis Values） 可以将某些键注册为Y轴，而不是默认的X轴值：')],-1),cn=n("figure",null,[n("img",{src:I,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),ln=n("h3",{id:"_7-触发器-triggers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7-触发器-triggers","aria-hidden":"true"},"#"),a(" 7. 触发器（Triggers）")],-1),pn=n("figure",null,[n("img",{src:C,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),rn=n("figure",null,[n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),un=n("h3",{id:"_8-子系统",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-子系统","aria-hidden":"true"},"#"),a(" 8.子系统")],-1),dn=n("figure",null,[n("img",{src:w,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),gn=n("p",null,[a("子系统中的成员函数中有个叫"),n("code",null,"AddMappingContext"),a("成员函数可以将这些数据传递进去注册。")],-1),kn=n("figure",null,[n("img",{src:R,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),mn=n("h2",{id:"快速上手",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快速上手","aria-hidden":"true"},"#"),a(" 快速上手")],-1),hn=n("h3",{id:"_1-插件-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-插件-1","aria-hidden":"true"},"#"),a(" 1. 插件")],-1),bn=l(`<h3 id="_2-build-cs引入模块" tabindex="-1"><a class="header-anchor" href="#_2-build-cs引入模块" aria-hidden="true">#</a> 2. Build.cs引入模块</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>PrivateDependencyModuleNames<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;EnhancedInput&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-准备character" tabindex="-1"><a class="header-anchor" href="#_3-准备character" aria-hidden="true">#</a> 3. 准备Character</h3><blockquote><p>你也可以直接用第三人称模板作为参考，这里主要是康康基本流程为后续源码展开做一个铺垫</p></blockquote><figure><img src="`+M+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-引入头文件" tabindex="-1"><a class="header-anchor" href="#_4-引入头文件" aria-hidden="true">#</a> 4. 引入头文件</h3>',6),vn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"InputActionValue.h"')]),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_n=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"Components/InputComponent.h"')]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"EnhancedInputComponent.h"')]),a(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},'"EnhancedInputSubsystems.h"')]),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("h3",{id:"_5-子系统注册上下文",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-子系统注册上下文","aria-hidden":"true"},"#"),a(" 5.子系统注册上下文")],-1),yn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),a("EditAnywhere"),n("span",{class:"token punctuation"},","),a(" BlueprintReadOnly"),n("span",{class:"token punctuation"},","),a(" Category "),n("span",{class:"token operator"},"="),a(" Input"),n("span",{class:"token punctuation"},","),a(" meta "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),a("AllowPrivateAccess "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"true"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"UInputMappingContext"),n("span",{class:"token operator"},"*"),a(" DefaultMappingContext"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),xn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"BeginPlay"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token comment"},"// Call the base class  "),a(`
	Super`),n("span",{class:"token operator"},":"),n("span",{class:"token base-clause"},[n("span",{class:"token operator"},":"),n("span",{class:"token function"},"BeginPlay"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},";"),a(`

	`),n("span",{class:"token comment"},"//Add Input Mapping Context"),a(`
	`),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("APlayerController"),n("span",{class:"token operator"},"*"),a(" PlayerController "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"Cast"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("APlayerController"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("Controller"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
	`),n("span",{class:"token punctuation"},"{"),a(`
		`),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("UEnhancedInputLocalPlayerSubsystem"),n("span",{class:"token operator"},"*"),a(" Subsystem "),n("span",{class:"token operator"},"="),a(" ULocalPlayer"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"GetSubsystem"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("UEnhancedInputLocalPlayerSubsystem"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("PlayerController"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetLocalPlayer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
		`),n("span",{class:"token punctuation"},"{"),a(`
			Subsystem`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"AddMappingContext"),n("span",{class:"token punctuation"},"("),a("DefaultMappingContext"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
		`),n("span",{class:"token punctuation"},"}"),a(`
	`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),An=n("h3",{id:"_6-绑定inputaction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-绑定inputaction","aria-hidden":"true"},"#"),a(" 6.绑定InputAction")],-1),Tn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[a(`
	`),n("span",{class:"token comment"},"/** Move Input Action */"),a(`
	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),a("EditAnywhere"),n("span",{class:"token punctuation"},","),a(" BlueprintReadOnly"),n("span",{class:"token punctuation"},","),a(" Category "),n("span",{class:"token operator"},"="),a(" Input"),n("span",{class:"token punctuation"},","),a(" meta "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"("),a("AllowPrivateAccess "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token string"},'"true"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(`
	`),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"UInputAction"),n("span",{class:"token operator"},"*"),a(" MoveAction"),n("span",{class:"token punctuation"},";"),a(`
	
`),n("span",{class:"token keyword"},"protected"),n("span",{class:"token operator"},":"),a(`

    `),n("span",{class:"token comment"},"// APawn interface"),a(`
	`),n("span",{class:"token keyword"},"virtual"),a(),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"SetupPlayerInputComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"UInputComponent"),n("span",{class:"token operator"},"*"),a(" PlayerInputComponent"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),a(`
	
	`),n("span",{class:"token comment"},"/** Called for movement input */"),a(`
	`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"Move"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" FInputActionValue"),n("span",{class:"token operator"},"&"),a(" Value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),En=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"//////////////////////////////////////////////////////////////////////////"),a(`
`),n("span",{class:"token comment"},"// Input"),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"SetupPlayerInputComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"UInputComponent"),n("span",{class:"token operator"},"*"),a(" PlayerInputComponent"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token comment"},"// Set up action bindings"),a(`
	`),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("UEnhancedInputComponent"),n("span",{class:"token operator"},"*"),a(" EnhancedInputComponent "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"CastChecked"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("UEnhancedInputComponent"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),a("PlayerInputComponent"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
		
		`),n("span",{class:"token comment"},"//Moving"),a(`
		EnhancedInputComponent`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"BindAction"),n("span",{class:"token punctuation"},"("),a("MoveAction"),n("span",{class:"token punctuation"},","),a(" ETriggerEvent"),n("span",{class:"token double-colon punctuation"},"::"),a("Triggered"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"&"),a("ATP_ThirdPersonCharacter"),n("span",{class:"token double-colon punctuation"},"::"),a("Move"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

	`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Move"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),a(" FInputActionValue"),n("span",{class:"token operator"},"&"),a(" Value"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token comment"},"// input is a Vector2D"),a(`
	FVector2D MovementVector `),n("span",{class:"token operator"},"="),a(" Value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"Get"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("FVector2D"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

	`),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("Controller "),n("span",{class:"token operator"},"!="),a(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),a(`
	`),n("span",{class:"token punctuation"},"{"),a(`
		`),n("span",{class:"token comment"},"// find out which way is forward"),a(`
		`),n("span",{class:"token keyword"},"const"),a(" FRotator Rotation "),n("span",{class:"token operator"},"="),a(" Controller"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetControlRotation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
		`),n("span",{class:"token keyword"},"const"),a(" FRotator "),n("span",{class:"token function"},"YawRotation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(" Rotation"),n("span",{class:"token punctuation"},"."),a("Yaw"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

		`),n("span",{class:"token comment"},"// get forward vector"),a(`
		`),n("span",{class:"token keyword"},"const"),a(" FVector ForwardDirection "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"FRotationMatrix"),n("span",{class:"token punctuation"},"("),a("YawRotation"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetUnitAxis"),n("span",{class:"token punctuation"},"("),a("EAxis"),n("span",{class:"token double-colon punctuation"},"::"),a("X"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
	
		`),n("span",{class:"token comment"},"// get right vector "),a(`
		`),n("span",{class:"token keyword"},"const"),a(" FVector RightDirection "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"FRotationMatrix"),n("span",{class:"token punctuation"},"("),a("YawRotation"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetUnitAxis"),n("span",{class:"token punctuation"},"("),a("EAxis"),n("span",{class:"token double-colon punctuation"},"::"),a("Y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

		`),n("span",{class:"token comment"},"// add movement "),a(`
		`),n("span",{class:"token function"},"AddMovementInput"),n("span",{class:"token punctuation"},"("),a("ForwardDirection"),n("span",{class:"token punctuation"},","),a(" MovementVector"),n("span",{class:"token punctuation"},"."),a("Y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
		`),n("span",{class:"token function"},"AddMovementInput"),n("span",{class:"token punctuation"},"("),a("RightDirection"),n("span",{class:"token punctuation"},","),a(" MovementVector"),n("span",{class:"token punctuation"},"."),a("X"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),In=l(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//Moving</span>
EnhancedInputComponent<span class="token operator">-&gt;</span><span class="token function">BindAction</span><span class="token punctuation">(</span>MoveAction<span class="token punctuation">,</span> ETriggerEvent<span class="token double-colon punctuation">::</span>Triggered<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ATP_ThirdPersonCharacter<span class="token double-colon punctuation">::</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Cn=l(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">/**
* Binds to an object UFUNCTION
*/</span>
FEnhancedInputActionEventBinding<span class="token operator">&amp;</span> <span class="token function">BindAction</span><span class="token punctuation">(</span><span class="token keyword">const</span> UInputAction<span class="token operator">*</span> Action<span class="token punctuation">,</span> ETriggerEvent TriggerEvent<span class="token punctuation">,</span> UObject<span class="token operator">*</span> Object<span class="token punctuation">,</span> FName FunctionName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	TUniquePtr<span class="token operator">&lt;</span>FEnhancedInputActionEventDelegateBinding<span class="token operator">&lt;</span>FEnhancedInputActionHandlerDynamicSignature<span class="token operator">&gt;&gt;</span> AB <span class="token operator">=</span> <span class="token generic-function"><span class="token function">MakeUnique</span><span class="token generic class-name"><span class="token operator">&lt;</span>FEnhancedInputActionEventDelegateBinding<span class="token operator">&lt;</span>FEnhancedInputActionHandlerDynamicSignature<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>Action<span class="token punctuation">,</span> TriggerEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	AB<span class="token operator">-&gt;</span>Delegate<span class="token punctuation">.</span><span class="token function">BindDelegate</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> FunctionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	AB<span class="token operator">-&gt;</span>Delegate<span class="token punctuation">.</span><span class="token function">SetShouldFireWithEditorScriptGuard</span><span class="token punctuation">(</span>bShouldFireDelegatesInEditor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token operator">*</span>EnhancedActionEventBindings<span class="token punctuation">.</span><span class="token function">Add_GetRef</span><span class="token punctuation">(</span><span class="token function">MoveTemp</span><span class="token punctuation">(</span>AB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-triggers是什么" tabindex="-1"><a class="header-anchor" href="#_7-triggers是什么" aria-hidden="true">#</a> 7.Triggers是什么？</h3>`,2),wn=n("blockquote",null,[n("p",null,"先看源码")],-1),Rn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
* Trigger qualifiers. If any trigger qualifiers exist the action will not trigger unless:
* At least one Explicit trigger in this list has been met.
* All Implicit triggers in this list are met.
*/`),a(`
`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),a("EditAnywhere"),n("span",{class:"token punctuation"},","),a(" Instanced"),n("span",{class:"token punctuation"},","),a(" BlueprintReadWrite"),n("span",{class:"token punctuation"},","),a(" Category "),n("span",{class:"token operator"},"="),a(" Action"),n("span",{class:"token punctuation"},")"),a(`
TArray`),n("span",{class:"token operator"},"<"),a("TObjectPtr"),n("span",{class:"token operator"},"<"),a("UInputTrigger"),n("span",{class:"token operator"},">>"),a(" Triggers"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Mn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
* 触发条件修饰符。如果存在任何触发条件修饰符，则该动作只有在以下情况下才会触发：
* 至少一个明确触发条件在此列表中已满足。
* 此列表中的所有隐含触发条件都已满足。
*/`),a(`
 `),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),a("EditAnywhere"),n("span",{class:"token punctuation"},","),a(" Instanced"),n("span",{class:"token punctuation"},","),a(" BlueprintReadWrite"),n("span",{class:"token punctuation"},","),a(" Category "),n("span",{class:"token operator"},"="),a(" Action"),n("span",{class:"token punctuation"},")"),a(`
TArray`),n("span",{class:"token operator"},"<"),a("TObjectPtr"),n("span",{class:"token operator"},"<"),a("UInputTrigger"),n("span",{class:"token operator"},">>"),a(" Triggers"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Dn=n("figure",null,[n("img",{src:D,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),jn=n("figure",null,[n("img",{src:j,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Wn=n("figure",null,[n("img",{src:W,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Pn=n("figure",null,[n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Sn=l('<div class="hint-container note"><p class="hint-container-title">注</p><p>在C++中，关键字 <code>final</code> 用于表示某个类不能被其他类继承。例子中，<code>UInputTriggerDown</code> 类声明为 <code>final</code>，这意味着它是不可继承的，不能再派生出其他类。</p><ol><li><strong>性能优化：</strong> 编译器可以对 <code>final</code> 类进行更多的优化，因为它知道没有其他类会继承它。</li><li><strong>代码安全性：</strong> 防止其他开发者错误地继承并修改该类的行为，从而确保该类的稳定性。</li></ol></div><h3 id="_8-系统流程" tabindex="-1"><a class="header-anchor" href="#_8-系统流程" aria-hidden="true">#</a> 8.系统流程</h3>',2),qn=n("figure",null,[n("img",{src:P,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),On=n("h3",{id:"_8-子系统-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-子系统-1","aria-hidden":"true"},"#"),a(" 8.子系统")],-1),Ln=l(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>UEnhancedInputLocalPlayerSubsystem <span class="token operator">:</span> <span class="token keyword">public</span> ULocalPlayerSubsystem<span class="token punctuation">,</span> <span class="token keyword">public</span> IEnhancedInputSubsystemInterface
UEnhancedInputWorldSubsystem <span class="token operator">:</span> <span class="token keyword">public</span> UWorldSubsystem<span class="token punctuation">,</span> <span class="token keyword">public</span> IEnhancedInputSubsystemInterface
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+S+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>showdebug enhancedinput
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,5),Un={href:"https://blog.csdn.net/weixin_55901138/article/details/130639164",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://docs.unrealengine.com/5.1/zh-CN/enhanced-input-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://www.youtube.com/watch?v=fW1pXOAIviw",target:"_blank",rel:"noopener noreferrer"};function zn(Fn,Vn){const d=p("RouterLink"),t=p("chatmessage"),i=p("CodeTabs"),r=p("ExternalLinkIcon");return k(),m("div",null,[O,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[n("p",null,[a("食用本文建议先了解什么是子系统！"),e(d,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/4-Subsystem.html"},{default:s(()=>[a("直通车")]),_:1})])]),_:1}),L,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 增强输入系统也是一个子系统，这里我们只负责记录一些子系统实践。 ")]),_:1}),U,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 启用插件，UE5.1后已经内置 ")]),_:1}),N,B,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 编辑（Edit）——>项目设置（Project Settings)——>按下图设置 ")]),_:1}),z,F,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 输入动作是系统和你的项目代码之间的连接。 ")]),_:1}),V,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 你这解释有点官腔啊！ ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 没办法官方文档就是这么写的，具体C++部分再来细讲吧，这里你理解成一些行为和动作，比如跑步、走路、开火等。 ")]),_:1}),Y,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 这样，我们就可以在蓝图中找到对应的动作节点了！ ")]),_:1}),G,H,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 有问题！你这里只是一些函数事件啊！按键呢按键去哪了？ ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 问的好，这些确实只是一些函数。我们需要使用Input Mapping Contexts将这些函数绑定到对应的触发按键。 ")]),_:1}),X,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 打开后配置对应的动作和按键就行了！ ")]),_:1}),J,K,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 这和传统的绑定方案有什么区别啊？怎么感觉更复杂了？ ")]),_:1}),Q,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 别急，我们康康传统绑定方法有哪些弱项： ")]),_:1}),Z,$,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 可是你这节点确实多出来好几个！能解释一下具体作用吗？ ")]),_:1}),nn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 触发状态（Trigger State） 表示动作的当前状态，我们还是拿源码解释一下吧 ")]),_:1}),e(i,{id:"87",data:[{id:"原版"},{id:"翻译"}],"tab-id":"language"},{title0:s(({value:o,isActive:c})=>[a("原版")]),title1:s(({value:o,isActive:c})=>[a("翻译")]),tab0:s(({value:o,isActive:c})=>[an]),tab1:s(({value:o,isActive:c})=>[sn]),_:1}),en,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 不对啊！你这里只有一个IA_Move动作，可我明明需要WASD控制上下左右移动啊，难道不应该有4个Input Actions? ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 这里需要引入一个Modifiers的概念，即同个动作在不同修饰函数状态下得到不同的结果。 ")]),_:1}),tn,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 难怪一个IA_Move下有这么多Modifiers修饰的按键。 ")]),_:1}),on,cn,ln,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 我发现除了Modifiers，为什么上面还有一个叫Triggers的东西? ")]),_:1}),pn,e(t,{avatar:"../../assets/emoji/new1.png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 先拿官方的图糊弄你一下！后面源码解析会有详细解释 ")]),_:1}),rn,un,e(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[a(" 哎！我才反应过来！这里只有动作事件和按键上下文绑定啊！我运行后没反应啊！ ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 这些上下文目前来说只是数据，别忘记咱的主角EnhancedInput子系统啊！ ")]),_:1}),dn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[gn]),_:1}),kn,e(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:s(()=>[a(" 看来咱不康康源码是没法再进一步理解了！ ")]),_:1}),mn,hn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 老规矩先把插件开起来 ")]),_:1}),bn,e(i,{id:"165",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:s(({value:o,isActive:c})=>[a("MyCharacter.h")]),title1:s(({value:o,isActive:c})=>[a("MyCharacter.cpp")]),tab0:s(({value:o,isActive:c})=>[vn]),tab1:s(({value:o,isActive:c})=>[_n]),_:1},8,["data"]),e(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:s(()=>[a(" 为什么不在.h中引入全部呢？ ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 原则上除了编译时间以外没有区别，主要是防止交叉引用问题。 ")]),_:1}),fn,e(i,{id:"178",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:s(({value:o,isActive:c})=>[a("MyCharacter.h")]),title1:s(({value:o,isActive:c})=>[a("MyCharacter.cpp")]),tab0:s(({value:o,isActive:c})=>[yn]),tab1:s(({value:o,isActive:c})=>[xn]),_:1},8,["data"]),An,e(i,{id:"189",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:s(({value:o,isActive:c})=>[a("MyCharacter.h")]),title1:s(({value:o,isActive:c})=>[a("MyCharacter.cpp")]),tab0:s(({value:o,isActive:c})=>[Tn]),tab1:s(({value:o,isActive:c})=>[En]),_:1},8,["data"]),e(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:s(()=>[a(" 我怎么感觉绑定的过程像委托呢？ ")]),_:1}),In,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 你的直觉是对的！源码如下： ")]),_:1}),Cn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 还记得之前糊弄你的Triggers图吗？现在给你康康他的庐山真面目。 ")]),_:1}),wn,e(i,{id:"210",data:[{id:"InputAction.h原文"},{id:"InputAction.h 翻译"}],"tab-id":"language"},{title0:s(({value:o,isActive:c})=>[a("InputAction.h原文")]),title1:s(({value:o,isActive:c})=>[a("InputAction.h 翻译")]),tab0:s(({value:o,isActive:c})=>[Rn]),tab1:s(({value:o,isActive:c})=>[Mn]),_:1},8,["data"]),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 从源文件中可以看到ETriggerEvent只是InputTrigger类中的一个枚举。 ")]),_:1}),Dn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 接着配置的具体Trigger是继承自InputTrigger的子类或者孙类。 ")]),_:1}),jn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 这么说可能不够直观，我给你做个类图理解一下 ")]),_:1}),Wn,e(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:s(()=>[a(" 搜嘎！也就是这里的设置trigger其实就是切换不同版本的InputTrigger？ ")]),_:1}),e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 是的，切换到对应的继承版本会有对应的效果。你不看源码根本不能理解这个trigger。 ")]),_:1}),Pn,e(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:s(()=>[a(" 这里为什么有个final关键字？ ")]),_:1}),Sn,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 现在我们大致理解一下执行流程，不要求记住。 ")]),_:1}),qn,On,e(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a(" 最后请出我们的子系统。 ")]),_:1}),Ln,n("p",null,[n("a",Un,[a("UE5学习笔记|增强输入系统EnhancedInput_鹿野明的博客-CSDN博客"),e(r)])]),n("p",null,[n("a",Nn,[a("虚幻引擎中的增强输入 | 虚幻引擎5.1文档(unrealengine.com)"),e(r)])]),n("p",null,[n("a",Bn,[a("UE5 C++ Enhanced Input - 2 - Bind C++ Functions to Input Actions - YouTube"),e(r)])])])}const Gn=g(q,[["render",zn],["__file","4.2-EnhancedInput.html.vue"]]);export{Gn as default};
