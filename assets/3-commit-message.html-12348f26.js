import{_ as p,r as o,o as l,c,a as s,b as n,d as a,w as r,e as t}from"./app-719fbc9a.js";const d={},u=s("h2",{id:"前言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),n(" 前言")],-1),m={href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="规范-commit" tabindex="-1"><a class="header-anchor" href="#规范-commit" aria-hidden="true">#</a> 规范(commit)</h2><p>Commit message 包括三个部分：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>type<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>scope<span class="token operator">&gt;</span><span class="token punctuation">)</span>: <span class="token operator">&lt;</span>subject<span class="token operator">&gt;</span> <span class="token comment"># 必填</span>
<span class="token operator">&lt;</span>BLANK LINE<span class="token operator">&gt;</span> <span class="token comment"># 空一行</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span> <span class="token comment"># 可选</span>
<span class="token operator">&lt;</span>BLANK LINE<span class="token operator">&gt;</span> <span class="token comment"># 空一行</span>
<span class="token operator">&lt;</span>footer<span class="token operator">&gt;</span> <span class="token comment"># 可选</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>type：必填，<code>commit</code> 的类型</p><ul><li>feat：新功能</li><li>fix：修复 bug</li><li>docs：文档修改</li><li>style：格式修改，例如空格、分号等</li><li>refactor：不增加功能也不修复 bug 的代码更改</li><li>perf：性能提升、交互优化</li><li>test：测试相关修改</li><li>build：外部依赖项的修改，如 gulp、npm</li><li>ci：ci 的修改</li><li>chore：关于构建项目相关的修改，非代码和测试</li><li>revert：版本回滚</li></ul></li><li><p>scope：选填，<code>commit</code> 的影响范围，常指定模块或文件名</p></li><li><p>subject：必填，<code>commit</code> 的简短描述</p></li><li><p>body：选填，<code>commit</code> 的详细描述</p></li><li><p>footer：选填，备注信息，通常是破坏性更新或关闭 Issue</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>BREAKING CHANGE: 变动的描述
Close <span class="token comment">#ISSUE_ID</span>
Closes <span class="token comment">#ISSUE_ID, #ISSUE_ID</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_1-模板" tabindex="-1"><a class="header-anchor" href="#_1-模板" aria-hidden="true">#</a> 1. 模板</h3>`,5),h={href:"https://www.npmjs.com/package/commitizen",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i commitizen <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化适配器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx commitizen init cz-conventional-changelog <span class="token parameter variable">--yarn</span> <span class="token parameter variable">--dev</span> <span class="token parameter variable">--exact</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>package.json</code> 中添加 <code>script</code>：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cz&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cz-conventional-changelog&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当执行 <code>yarn run commit</code> 就可以使用提交模板了。</p><h3 id="_2-强制规范" tabindex="-1"><a class="header-anchor" href="#_2-强制规范" aria-hidden="true">#</a> 2. 强制规范</h3>`,7),k={href:"https://github.com/conventional-changelog/commitlint#readme",target:"_blank",rel:"noopener noreferrer"},b=s("strong",null,"husky v5",-1),_={href:"https://typicode.github.io/husky/#/?id=migrate-from-v4-to-v6",target:"_blank",rel:"noopener noreferrer"},f=t(`<p><strong>如何校验：</strong></p><ul><li><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @commitlint/cli @commitlint/config-conventional <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>指定校验模板</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}&quot;</span> <span class="token operator">&gt;</span> commitlint.config.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p><strong>何时校验：</strong></p><p>很明显需要在 <code>git commit</code> 前的生命周期内进行校验。</p><ul><li><p>安装 husky</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i husky <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>拦截 git hook</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Active hooks</span>
npx husky <span class="token function">install</span>

<span class="token comment"># Add hook</span>
npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&quot;npx --no-install commitlint --edit <span class="token variable">$1</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;hello husky&quot;</span>

<span class="token comment"># 拦截</span>
⧗   input: hello husky
✖   subject may not be empty <span class="token punctuation">[</span>subject-empty<span class="token punctuation">]</span>
✖   <span class="token builtin class-name">type</span> may not be empty <span class="token punctuation">[</span>type-empty<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="生成-changelog-日志" tabindex="-1"><a class="header-anchor" href="#生成-changelog-日志" aria-hidden="true">#</a> 生成 (CHANGELOG)日志</h2><p>根据规则生成 CHANGELOG 的前提是 commit 规范化。</p>`,7),q={href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"},y=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i standard-version <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>package.json</code> 中添加 <code>script</code>：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;changelog&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard-version&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>npm run release</code> 得到的效果一般，那么自然希望加点料。</p><h3 id="_1-配置" tabindex="-1"><a class="header-anchor" href="#_1-配置" aria-hidden="true">#</a> 1. 配置</h3>`,5),x={href:"https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.1.0/README.md",target:"_blank",rel:"noopener noreferrer"},j=s("code",null,".versionrc.js",-1),E=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token string">&quot;# CHANGELOG\\n\\n这是一个有趣的 CHANGELOG。\\n\\n&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;feat&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;section&quot;</span><span class="token operator">:</span> <span class="token string">&quot;✨ Features | 新功能&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;section&quot;</span><span class="token operator">:</span> <span class="token string">&quot;🐛 Fixes | Bug 修复&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;perf&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;section&quot;</span><span class="token operator">:</span> <span class="token string">&quot;🔥 Performance Improvements | 性能优化&quot;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-指定版本" tabindex="-1"><a class="header-anchor" href="#_2-指定版本" aria-hidden="true">#</a> 2. 指定版本</h3><p>npm 命令传参需要使用 <code>--</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run changelog -- --release-as <span class="token number">1.6</span>.0
<span class="token comment"># 或</span>
<span class="token function">npm</span> run changelog -- <span class="token parameter variable">-r</span> minor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-hash-链接" tabindex="-1"><a class="header-anchor" href="#_3-hash-链接" aria-hidden="true">#</a> 3. hash 链接</h3><p>这需要为项目添加 <code>git remote</code> 地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:yourname/project.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="代码校验" tabindex="-1"><a class="header-anchor" href="#代码校验" aria-hidden="true">#</a> 代码校验</h2><p>前面已经打好了铺垫，加上代码校验也是顺理成章的事情。</p>`,9),I={href:"https://www.npmjs.com/package/lint-staged",target:"_blank",rel:"noopener noreferrer"},N=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i lint-staged <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着前往 <code>package.json</code> 增加 <code>lint-staged</code> 字段，以 vue-cli 创建的项目示例：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
  <span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;*.{js,jsx,vue,ts,tsx}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;vue-cli-service lint&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;git add&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而 husky 校验同样不在 <code>package.json</code> 中设置了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/pre-commit <span class="token string">&quot;npx --no-install lint-staged&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),C={href:"https://github.com/stylelint/stylelint",target:"_blank",rel:"noopener noreferrer"},A=s("h2",{id:"参考资料",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),n(" 参考资料")],-1),D={href:"https://juejin.cn/post/7138790324494827533",target:"_blank",rel:"noopener noreferrer"};function L(G,w){const e=o("ExternalLinkIcon"),i=o("ChatMessage");return l(),c("div",null,[u,s("p",null,[n("规范的 commit message 有助于团队其它人员 review"),s("a",m,[n("Angular 规范"),a(e)]),n("。")]),v,a(i,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40},{default:r(()=>[n(" 对不起我是真记不住。 ")]),_:1}),s("p",null,[n("提交信息最好在在"),s("a",h,[n("模板"),a(e)]),n("的约束下：")]),g,s("p",null,[n("为了在各种姿势使 commit 符合规范，"),s("a",k,[n("校验"),a(e)]),n("是必要的。注意 "),b,n(" 配置有所"),s("a",_,[n("更改"),a(e)]),n("。")]),f,s("p",null,[n("首先安装"),s("a",q,[n("依赖"),a(e)]),n("，如果之前使用了其他模板，也应寻找对应的依赖。")]),y,s("p",null,[n("新增 "),s("a",x,[j,a(e)]),n(" 文件：")]),E,s("p",null,[n("一般代码校验只希望"),s("a",I,[n("校验更新的文件"),a(e)]),n("：")]),N,s("p",null,[n("如果还想加些什么，可以手动追加，例如 "),s("a",C,[n("stylelint"),a(e)]),n("。")]),A,s("p",null,[s("a",D,[n("Git Commit规范指北"),a(e)])])])}const S=p(d,[["render",L],["__file","3-commit-message.html.vue"]]);export{S as default};
