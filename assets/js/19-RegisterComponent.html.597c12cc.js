"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[2587],{3279:(n,a,e)=>{n.exports=e.p+"assets/img/new animation03.e99cd3d7.png"},66757:(n,a,e)=>{e.r(a),e.d(a,{comp:()=>r,data:()=>u});var t=e(20641),s=e(3279);const o=(0,t.Lk)("h3",{id:"_1-使用cdo",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#_1-使用cdo"},[(0,t.Lk)("span",null,"1.使用CDO：")])],-1),p=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\tSpringArm <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateDefaultSubobject</span><span class="token generic class-name"><span class="token operator">&lt;</span>USpringArmComponent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;SpringArm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tSpringArm<span class="token operator">-&gt;</span><span class="token function">SetupAttachment</span><span class="token punctuation">(</span>RootComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',1),c=(0,t.Fv)('<figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-使用-newobject-和-registercomponent" tabindex="-1"><a class="header-anchor" href="#_2-使用-newobject-和-registercomponent"><span>2.使用 <code>NewObject</code> 和 <code>RegisterComponent</code>：</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// 创建 Actor Component</span>\nUSkeletalMeshComponent<span class="token operator">*</span> SkeletalMeshComponent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">NewObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>USkeletalMeshComponent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;SkeletalMeshComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 注册组件</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">RegisterComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用-addinstancecomponent" tabindex="-1"><a class="header-anchor" href="#_3-使用-addinstancecomponent"><span>3. 使用 <code>AddInstanceComponent</code>：</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>USkeletalMeshComponent<span class="token operator">*</span> SkeletalMeshComponent <span class="token operator">=</span> <span class="token function">AddInstanceComponent</span><span class="token punctuation">(</span><span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;SkeletalMeshComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetRelativeTransform</span><span class="token punctuation">(</span>InStruct<span class="token punctuation">.</span>SkeletalTransform<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',5),l=(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"AddInstanceComponent"),(0,t.eW)(" 是 "),(0,t.Lk)("code",null,"UActorComponent"),(0,t.eW)(" 的一个成员函数，用于在运行时添加一个新的组件实例到 AActor 上。")]),(0,t.Lk)("li",null,[(0,t.eW)("这个方法内部实际上也是使用了 "),(0,t.Lk)("code",null,"NewObject"),(0,t.eW)(" 和 "),(0,t.Lk)("code",null,"RegisterComponent"),(0,t.eW)("，但是提供了更简化的接口，特别是在 AActor 子类中更方便。")])],-1),i={},r=(0,e(66262).A)(i,[["render",function(n,a){const e=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" RegisterComponent的几种方法 ")])),_:1}),o,(0,t.bF)(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 只可在构造函数中创建。 ")])),_:1}),p,(0,t.bF)(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 有时候需要动态创建组件，比如一些组件中挂载其他组件，使用CDO可能会失效。 ")])),_:1}),c,(0,t.bF)(e,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[l])),_:1})])}]]),u=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/19-RegisterComponent.html","title":"F19.RegisterComponent|组件","lang":"zh-CN","frontmatter":{"title":"F19.RegisterComponent|组件","order":19,"category":["u++"],"description":"1.使用CDO： 2.使用 NewObject 和 RegisterComponent： 3. 使用 AddInstanceComponent：","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/19-RegisterComponent.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F19.RegisterComponent|组件"}],["meta",{"property":"og:description","content":"1.使用CDO： 2.使用 NewObject 和 RegisterComponent： 3. 使用 AddInstanceComponent："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T05:45:35.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-02-26T05:45:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F19.RegisterComponent|组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T05:45:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"1.使用CDO：","slug":"_1-使用cdo","link":"#_1-使用cdo","children":[]},{"level":3,"title":"2.使用 NewObject 和 RegisterComponent：","slug":"_2-使用-newobject-和-registercomponent","link":"#_2-使用-newobject-和-registercomponent","children":[]},{"level":3,"title":"3. 使用 AddInstanceComponent：","slug":"_3-使用-addinstancecomponent","link":"#_3-使用-addinstancecomponent","children":[]}],"git":{"createdTime":1708926335000,"updatedTime":1708926335000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"unreal/function[函数]/19-RegisterComponent.md","localizedDate":"2024年2月26日","excerpt":"\\n<h3>1.使用CDO：</h3>\\n\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>\\tSpringArm <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">CreateDefaultSubobject</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>USpringArmComponent<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"SpringArm\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tSpringArm<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">SetupAttachment</span><span class=\\"token punctuation\\">(</span>RootComponent<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);