"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[4170],{87736:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>o,data:()=>c});var t=s(20641);const e=(0,t.Fv)('<h3 id="获取行结构体" tabindex="-1"><a class="header-anchor" href="#获取行结构体"><span>获取行结构体</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>    <span class="token keyword">const</span> T<span class="token operator">*</span> RowData <span class="token operator">=</span> DataTable<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">FindRow</span><span class="token generic class-name"><span class="token operator">&lt;</span>T<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>RowName<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;GetRows&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="获取多行" tabindex="-1"><a class="header-anchor" href="#获取多行"><span>获取多行</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">WITH_EDITOR</span></span>\n        TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> <span class="token function">EditorGetDatatableRowNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>\n    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n    \n    <span class="token comment">/** 存储 DataTable 的引用 */</span>\n    <span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;DataTable&quot;</span><span class="token punctuation">)</span>\n    TObjectPtr<span class="token operator">&lt;</span><span class="token keyword">const</span> UDataTable<span class="token operator">&gt;</span> DataTable<span class="token punctuation">;</span>\n\n    \n    <span class="token comment">/** 存储多个 RowNames */</span>\n    <span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span> BlueprintReadWrite<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;DataTable&quot;</span><span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>GetOptions <span class="token operator">=</span> <span class="token string">&quot;EditorGetDatatableRowNames&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    TSet<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> RowNames<span class="token punctuation">;</span>\n    \n    <span class="token comment">/** 通过 RowNames 批量获取表格行数据 */</span>\n    <span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">&gt;</span>\n    TArray<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">GetRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>\n    <span class="token punctuation">{</span>\n        TArray<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> Result<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>DataTable<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;DataTableMultiRowHandle: DataTable is not set!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> Result<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 遍历所有 RowName，查找对应的行</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> FName<span class="token operator">&amp;</span> RowName <span class="token operator">:</span> RowNames<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> T<span class="token operator">*</span> RowData <span class="token operator">=</span> DataTable<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">FindRow</span><span class="token generic class-name"><span class="token operator">&lt;</span>T<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>RowName<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;GetRows&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>RowData<span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                Result<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">*</span>RowData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">else</span>\n            <span class="token punctuation">{</span>\n                <span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;DataTableMultiRowHandle: Row %s not found in DataTable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span>RowName<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> Result<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),p={},o=(0,s(66262).A)(p,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 开个坑先记录一些Datatable的代码判断 ")])),_:1}),e])}]]),c=JSON.parse('{"path":"/unreal/core_%E6%A0%B8%E5%BF%83_/12-DataTable.html","title":"c12.数据表格|Datatable","lang":"zh-CN","frontmatter":{"title":"c12.数据表格|Datatable","order":1200,"category":["u++"],"description":"获取行结构体 获取多行","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/core_%E6%A0%B8%E5%BF%83_/12-DataTable.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c12.数据表格|Datatable"}],["meta",{"property":"og:description","content":"获取行结构体 获取多行"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-30T18:17:17.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-03-30T18:17:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c12.数据表格|Datatable\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-30T18:17:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"获取行结构体","slug":"获取行结构体","link":"#获取行结构体","children":[]},{"level":3,"title":"获取多行","slug":"获取多行","link":"#获取多行","children":[]}],"git":{"createdTime":1743358376000,"updatedTime":1743358637000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":3}]},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"unreal/core[核心]/12-DataTable.md","localizedDate":"2025年3月30日","excerpt":"\\n<h3>获取行结构体</h3>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>    <span class=\\"token keyword\\">const</span> T<span class=\\"token operator\\">*</span> RowData <span class=\\"token operator\\">=</span> DataTable<span class=\\"token operator\\">-&gt;</span><span class=\\"token generic-function\\"><span class=\\"token function\\">FindRow</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>T<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>RowName<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"GetRows\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);