"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[1678],{59612:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>W,data:()=>x});var t=s(20641);const e=s.p+"assets/img/hotfix031.a5221534.png",p=s.p+"assets/img/hotfix2.8ad7333b.svg",l=s.p+"assets/img/wljg001.81f49032.png",o=(0,t.Lk)("h2",{id:"前情回顾",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#前情回顾"},[(0,t.Lk)("span",null,"前情回顾")])],-1),i=(0,t.Lk)("p",null,"前文中我们已经讨论了两个基础的更新方案，并意识到恶意破坏补丁可能带来的严重问题。本文将继续探讨如何优化和完善我们的方案。",-1),c=(0,t.Lk)("h2",{id:"校验",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#校验"},[(0,t.Lk)("span",null,"校验")])],-1),u=(0,t.Fv)('<h3 id="获取文件md5-hash" tabindex="-1"><a class="header-anchor" href="#获取文件md5-hash"><span>获取文件MD5(HASH)</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>FMD5Hash CurrentPakHash <span class="token operator">=</span> <span class="token class-name">FMD5Hash</span><span class="token double-colon punctuation">::</span><span class="token function">HashFile</span><span class="token punctuation">(</span><span class="token operator">*</span>InFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\nFString CurrentPakHashString <span class="token operator">=</span> <span class="token function">LexToString</span><span class="token punctuation">(</span>CurrentPakHash<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工具函数" tabindex="-1"><a class="header-anchor" href="#工具函数"><span>工具函数</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">USTRUCT</span><span class="token punctuation">(</span>BlueprintType<span class="token punctuation">)</span>\n<span class="token keyword">struct</span> <span class="token class-name">FPakFileInfo</span>\n<span class="token punctuation">{</span>\n\t<span class="token function">GENERATED_USTRUCT_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span><span class="token operator">:</span>\n\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>\n\tFString FileName<span class="token punctuation">;</span>\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>\n\tFString Hash<span class="token punctuation">;</span>\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>\n\tint32 FileSize <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">bool</span> <span class="token class-name">UFlibPatchParserHelper</span><span class="token double-colon punctuation">::</span><span class="token function">GetPakFileInfo</span><span class="token punctuation">(</span><span class="token keyword">const</span> FString<span class="token operator">&amp;</span> InFile<span class="token punctuation">,</span> FPakFileInfo<span class="token operator">&amp;</span> OutFileInfo<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">bool</span> bRunStatus <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">FPaths</span><span class="token double-colon punctuation">::</span><span class="token function">FileExists</span><span class="token punctuation">(</span>InFile<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tFString PathPart<span class="token punctuation">;</span>\n\t\tFString FileNamePart<span class="token punctuation">;</span>\n\t\tFString ExtensionPart<span class="token punctuation">;</span>\n\n\t\t<span class="token class-name">FPaths</span><span class="token double-colon punctuation">::</span><span class="token function">Split</span><span class="token punctuation">(</span>InFile<span class="token punctuation">,</span> PathPart<span class="token punctuation">,</span> FileNamePart<span class="token punctuation">,</span> ExtensionPart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\tFMD5Hash CurrentPakHash <span class="token operator">=</span> <span class="token class-name">FMD5Hash</span><span class="token double-colon punctuation">::</span><span class="token function">HashFile</span><span class="token punctuation">(</span><span class="token operator">*</span>InFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tOutFileInfo<span class="token punctuation">.</span>FileName <span class="token operator">=</span> <span class="token class-name">FString</span><span class="token double-colon punctuation">::</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;%s.%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">*</span>FileNamePart<span class="token punctuation">,</span><span class="token operator">*</span>ExtensionPart<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tOutFileInfo<span class="token punctuation">.</span>Hash <span class="token operator">=</span> <span class="token function">LexToString</span><span class="token punctuation">(</span>CurrentPakHash<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tOutFileInfo<span class="token punctuation">.</span>FileSize <span class="token operator">=</span> <span class="token class-name">IFileManager</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FileSize</span><span class="token punctuation">(</span><span class="token operator">*</span>InFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tbRunStatus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> bRunStatus<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),r=(0,t.Lk)("h3",{id:"独立启动器",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#独立启动器"},[(0,t.Lk)("span",null,"独立启动器")])],-1),d=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),k=(0,t.Lk)("h2",{id:"方案3",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#方案3"},[(0,t.Lk)("span",null,"方案3")])],-1),h=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),v=(0,t.Lk)("h3",{id:"后端服务",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#后端服务"},[(0,t.Lk)("span",null,"后端服务")])],-1),b=(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,"Spring Boot 是一个用于创建 Web 应用和服务的 Java 框架。 Node.js 是一个开源、跨平台的 JavaScript 运行时环境。")],-1),m=(0,t.Lk)("ol",null,[(0,t.Lk)("li",null,[(0,t.Lk)("p",null,"管理和提供版本更新信息服务")]),(0,t.Lk)("li",null,[(0,t.Lk)("p",null,"文件验证和安全性服务")])],-1),g=(0,t.Lk)("h3",{id:"数据库-数据层",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#数据库-数据层"},[(0,t.Lk)("span",null,"数据库|数据层")])],-1),f=(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,"SQL（Structured Query Language，结构化查询语言）是一种用于管理和操作关系型数据库的标准化编程语言。")],-1),F=(0,t.Lk)("h3",{id:"常用架构",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#常用架构"},[(0,t.Lk)("span",null,"常用架构")])],-1),L=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),S={},W=(0,s(66262).A)(S,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[o,i,c,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 前文我们已经意识到验证本地文件的重要性，称之为校验 ")])),_:1}),(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 那具体怎么校验呢？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 如果不考虑分片，每个文件都可以计算出一个MD5值，通过比较本地文件和服务器上的MD5值来验证文件是否一致。 ")])),_:1}),(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" MD5?好像百度网盘上传文件时会计算文件的MD5，如果服务器有则不上传，从而直接实现秒传。 ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 没错，UE5中也有计算MD5的函数，我们可以封装成工具函数。 ")])),_:1}),u,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 现在回想一下某些大厂游戏的更新流程。 ")])),_:1}),r,(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 我发现它们好像不是用游戏本体直接更新的，而是通过一个启动器来更新！ ")])),_:1}),d,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 对，有些游戏的启动器甚至不用登录，只是一个纯粹的游戏下载、展示和修复工具。 ")])),_:1}),k,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 咱们的方案3浮出水面了！ ")])),_:1}),h,v,(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 问题来了！JSON怎么来？我怎么通知客户端更新？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 我们需要一个专门发送更新通知的设备，比如一台云电脑。我们称这个软件部分为后台服务，可以用Node.js或Spring Boot来开发。 ")])),_:1}),b,(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 我靠！岂不是要学习Java? ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 虽说术业有专攻，咱们或多或少得了解一下，至少能走通流程。 ")])),_:1}),(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 我明白了！你这里的服务提供的是远程接口，后台和客户端都可以根据接口来修改规则。 ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 根据咱们的需求分析出咱们至少需要这些服务： ")])),_:1}),m,g,(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 提到文件验证，是不是咱们还需要一个SQL服务去维护咱们的数据？ ")])),_:1}),f,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" SQL一般只存储对应的数据链接，我们还需要专门的空间去存储我们的游戏本体。 比如七牛云空间、阿里OSS、腾讯的COS等服务 ")])),_:1}),(0,t.bF)(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 搜得寺内 ")])),_:1}),F,L])}]]),x=JSON.parse('{"path":"/unreal/hotfix_%E7%83%AD%E6%9B%B4%E6%96%B0_/2-Architecture2.html","title":"HF|热更新02","lang":"zh-CN","frontmatter":{"title":"HF|热更新02","order":2,"category":["unreal"],"description":"前情回顾 前文中我们已经讨论了两个基础的更新方案，并意识到恶意破坏补丁可能带来的严重问题。本文将继续探讨如何优化和完善我们的方案。 校验 获取文件MD5(HASH) 工具函数 独立启动器 方案3 后端服务 Spring Boot 是一个用于创建 Web 应用和服务的 Java 框架。 Node.js 是一个开源、跨平台的 JavaScript 运行时环...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/hotfix_%E7%83%AD%E6%9B%B4%E6%96%B0_/2-Architecture2.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"HF|热更新02"}],["meta",{"property":"og:description","content":"前情回顾 前文中我们已经讨论了两个基础的更新方案，并意识到恶意破坏补丁可能带来的严重问题。本文将继续探讨如何优化和完善我们的方案。 校验 获取文件MD5(HASH) 工具函数 独立启动器 方案3 后端服务 Spring Boot 是一个用于创建 Web 应用和服务的 Java 框架。 Node.js 是一个开源、跨平台的 JavaScript 运行时环..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-01T21:27:55.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-09-01T21:27:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HF|热更新02\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-01T21:27:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"前情回顾","slug":"前情回顾","link":"#前情回顾","children":[]},{"level":2,"title":"校验","slug":"校验","link":"#校验","children":[{"level":3,"title":"获取文件MD5(HASH)","slug":"获取文件md5-hash","link":"#获取文件md5-hash","children":[]},{"level":3,"title":"工具函数","slug":"工具函数","link":"#工具函数","children":[]},{"level":3,"title":"独立启动器","slug":"独立启动器","link":"#独立启动器","children":[]}]},{"level":2,"title":"方案3","slug":"方案3","link":"#方案3","children":[{"level":3,"title":"后端服务","slug":"后端服务","link":"#后端服务","children":[]},{"level":3,"title":"数据库|数据层","slug":"数据库-数据层","link":"#数据库-数据层","children":[]},{"level":3,"title":"常用架构","slug":"常用架构","link":"#常用架构","children":[]}]}],"git":{"createdTime":1723490066000,"updatedTime":1725226075000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":3,"words":899},"filePathRelative":"unreal/hotfix[热更新]/2-Architecture2.md","localizedDate":"2024年8月12日","excerpt":"<h2>前情回顾</h2>\\n<p>前文中我们已经讨论了两个基础的更新方案，并意识到恶意破坏补丁可能带来的严重问题。本文将继续探讨如何优化和完善我们的方案。</p>\\n<h2>校验</h2>\\n\\n\\n\\n\\n\\n<h3>获取文件MD5(HASH)</h3>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>FMD5Hash CurrentPakHash <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">FMD5Hash</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">HashFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>InFile<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nFString CurrentPakHashString <span class=\\"token operator\\">=</span> <span class=\\"token function\\">LexToString</span><span class=\\"token punctuation\\">(</span>CurrentPakHash<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);