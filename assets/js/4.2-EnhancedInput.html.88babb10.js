"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[8117],{73015:(n,e,a)=>{a.r(e),a.d(e,{comp:()=>wn,data:()=>Mn});var s=a(20641);const t=a.p+"assets/img/enhancedimage000.b26b8a29.png",i=a.p+"assets/img/enhancedimage001.c4b82309.png",o=a.p+"assets/img/enhancedimage002.91e3e8d1.png",c=a.p+"assets/img/enhancedimage003.6a7b2bce.png",l=a.p+"assets/img/enhancedimage004.20e154e1.png",p=a.p+"assets/img/enhancedimage005.4c9264be.png",k=a.p+"assets/img/enhancedimage006.6000edbc.png",r=a.p+"assets/img/enhancedimage007.6e7a78d8.png",u=a.p+"assets/img/enhancedimage008.4cde6229.png",d=a.p+"assets/img/enhancedimage009.2acf66e4.png",L=a.p+"assets/img/enhancedimage010.6b6a8bf6.png",g=a.p+"assets/img/enhancedimage011.18e4461f.png",m=a.p+"assets/img/enhancedimage012.b8460ed7.png",b=a.p+"assets/img/enhancedimage013.5c185ecb.png",v=a.p+"assets/img/enhancedimage014.cc97ff9d.png",h=a.p+"assets/img/enhancedimage016.7df75598.png",W=a.p+"assets/img/enhancedimage017.08bcdfcd.png",f=a.p+"assets/img/enhancedimage018.c654496a.png",y=a.p+"assets/img/enhancedimage019.1e04e83f.svg",_=a.p+"assets/img/enhancedimage020.c7efcb2f.jpg",A=a.p+"assets/img/enhancedimage015.9684f2c7.png",x=(0,s.Lk)("h3",{id:"导读",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#导读"},[(0,s.Lk)("span",null,"导读")])],-1),T=(0,s.Lk)("h2",{id:"enhancedinput-增强输入系统",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#enhancedinput-增强输入系统"},[(0,s.Lk)("span",null,"EnhancedInput|增强输入系统")])],-1),I=(0,s.Lk)("h3",{id:"_1-插件",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_1-插件"},[(0,s.Lk)("span",null,"1.插件")])],-1),E=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:t,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),C=(0,s.Lk)("h3",{id:"_2-项目设置",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_2-项目设置"},[(0,s.Lk)("span",null,"2.项目设置")])],-1),F=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),w=(0,s.Lk)("h3",{id:"_3-输入动作-input-actions",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_3-输入动作-input-actions"},[(0,s.Lk)("span",null,"3.输入动作（Input Actions）")])],-1),M=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),S=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),j=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),P=(0,s.Lk)("h3",{id:"_4-输入映射上下文-input-mapping-contexts",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_4-输入映射上下文-input-mapping-contexts"},[(0,s.Lk)("span",null,"4. 输入映射上下文（Input Mapping Contexts）")])],-1),q=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),O=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:k,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),U=(0,s.Lk)("h4",{id:"历史问题",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#历史问题"},[(0,s.Lk)("span",null,"历史问题")])],-1),D=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),R=(0,s.Lk)("ul",null,[(0,s.Lk)("li",null,"复杂的输入机制无法满足。"),(0,s.Lk)("li",null,"过于简陋，例如按住、双击、联合输入等都需要用户自己实现。"),(0,s.Lk)("li",null,"性能不足，需要自己写切换逻辑，不同情况需要自己判断优先级。")],-1),N=(0,s.Lk)("h3",{id:"_5-触发状态-trigger-state",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_5-触发状态-trigger-state"},[(0,s.Lk)("span",null,"5. 触发状态（Trigger State）")])],-1),B=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),z=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token keyword"},"enum"),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"ETriggerEvent"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},":"),(0,s.eW)(),(0,s.Lk)("span",{class:"token base-clause"},[(0,s.Lk)("span",{class:"token class-name"},"uint8")]),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// No significant trigger state changes occurred and there are no active device inputs"),(0,s.eW)("\n\tNone\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"0x0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\t\t"),(0,s.Lk)("span",{class:"token function"},"UMETA"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("Hidden"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// Triggering occurred after one or more processing ticks"),(0,s.eW)("\n\tTriggered\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (None -> Triggered, Ongoing -> Triggered, Triggered -> Triggered)"),(0,s.eW)("\n\t\n\t"),(0,s.Lk)("span",{class:"token comment"},"// An event has occurred that has begun Trigger evaluation. Note: Triggered may also occur this frame."),(0,s.eW)("\n\tStarted\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (None -> Ongoing, None -> Triggered)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// Triggering is still being processed"),(0,s.eW)("\n\tOngoing\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"2"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Ongoing -> Ongoing)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// Triggering has been canceled"),(0,s.eW)("\n\tCanceled\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"3"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Ongoing -> None)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// The trigger state has transitioned from Triggered to None this frame, i.e. Triggering has finished."),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// NOTE: Using this event restricts you to one set of triggers for Started/Completed events. You may prefer two actions, each with its own trigger rules."),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// TODO: Completed will not fire if any trigger reports Ongoing on the same frame, but both should fire. e.g. Tick 2 of Hold (= Ongoing) + Pressed (= None) combo will raise Ongoing event only."),(0,s.eW)("\n\tCompleted\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"4"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Triggered -> None)"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),V=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token keyword"},"enum"),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"ETriggerEvent"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},":"),(0,s.eW)(),(0,s.Lk)("span",{class:"token base-clause"},[(0,s.Lk)("span",{class:"token class-name"},"uint8")]),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 没有发生显著的触发状态变化，且没有活动的设备输入"),(0,s.eW)("\n\tNone\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"0x0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\t\t"),(0,s.Lk)("span",{class:"token function"},"UMETA"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("Hidden"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 在一个或多个处理帧之后触发"),(0,s.eW)("\n\tTriggered\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (None -> Triggered, Ongoing -> Triggered, Triggered -> Triggered)"),(0,s.eW)("\n\t\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 发生了开始触发器求值的某个事件。注意：本帧也可能发生 Triggered 状态。"),(0,s.eW)("\n\tStarted\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (None -> Ongoing, None -> Triggered)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 触发仍在进行处理"),(0,s.eW)("\n\tOngoing\t\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"2"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Ongoing -> Ongoing)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 触发已被取消"),(0,s.eW)("\n\tCanceled\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"3"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Ongoing -> None)"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 触发状态在本帧从 Triggered 转换为 None，即触发已完成。"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// 注意：使用此事件将限制您对于 Started/Completed 事件的触发规则。您可能更喜欢两个动作，每个都有自己的触发规则。"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// TODO: 如果同一帧内任何触发器报告 Ongoing，则 Completed 不会触发，但两者都应触发。例如，Hold（= Ongoing） + Pressed（= None）组合的第 2 帧将仅触发 Ongoing 事件。"),(0,s.eW)("\n\tCompleted\t"),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"1"),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"<<"),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"4"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)("\t"),(0,s.Lk)("span",{class:"token comment"},"// ETriggerState (Triggered -> None)"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),Y=(0,s.Lk)("h3",{id:"_6-修饰符-modifiers",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_6-修饰符-modifiers"},[(0,s.Lk)("span",null,"6. 修饰符（Modifiers）")])],-1),G=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),H=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,'增强输入支持来自一维源的输入，例如键盘的方向键或常用的"WASD"键配置；可通过应用正确的输入修饰符来实现此控制方案。 具体而言，使用 负（Negate） 可以将某些键注册为负值， 而使用 交换输入轴值（Swizzle Input Axis Values） 可以将某些键注册为Y轴，而不是默认的X轴值：')],-1),X=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:L,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),Z=(0,s.Lk)("h3",{id:"_7-触发器-triggers",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_7-触发器-triggers"},[(0,s.Lk)("span",null,"7. 触发器（Triggers）")])],-1),J=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),K=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),Q=(0,s.Lk)("h3",{id:"_8-绑定上下文",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_8-绑定上下文"},[(0,s.Lk)("span",null,"8.绑定上下文")])],-1),$=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),nn=(0,s.Lk)("p",null,[(0,s.eW)("子系统中的成员函数中有个叫"),(0,s.Lk)("code",null,"AddMappingContext"),(0,s.eW)("成员函数可以将这些数据传递进去注册。")],-1),en=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),an=(0,s.Lk)("h2",{id:"快速上手",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#快速上手"},[(0,s.Lk)("span",null,"快速上手")])],-1),sn=(0,s.Lk)("h3",{id:"_1-插件-1",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_1-插件-1"},[(0,s.Lk)("span",null,"1. 插件")])],-1),tn=(0,s.Fv)('<h3 id="_2-build-cs引入模块" tabindex="-1"><a class="header-anchor" href="#_2-build-cs引入模块"><span>2. Build.cs引入模块</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>PrivateDependencyModuleNames<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;EnhancedInput&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-准备character" tabindex="-1"><a class="header-anchor" href="#_3-准备character"><span>3. 准备Character</span></a></h3><blockquote><p>你也可以直接用第三人称模板作为参考，这里主要是康康基本流程为后续源码展开做一个铺垫</p></blockquote><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-引入头文件" tabindex="-1"><a class="header-anchor" href="#_4-引入头文件"><span>4. 引入头文件</span></a></h3>',6),on=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token macro property"},[(0,s.Lk)("span",{class:"token directive-hash"},"#"),(0,s.Lk)("span",{class:"token directive keyword"},"include"),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"InputActionValue.h"')]),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"})])],-1),cn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token macro property"},[(0,s.Lk)("span",{class:"token directive-hash"},"#"),(0,s.Lk)("span",{class:"token directive keyword"},"include"),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"Components/InputComponent.h"')]),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token macro property"},[(0,s.Lk)("span",{class:"token directive-hash"},"#"),(0,s.Lk)("span",{class:"token directive keyword"},"include"),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"EnhancedInputComponent.h"')]),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token macro property"},[(0,s.Lk)("span",{class:"token directive-hash"},"#"),(0,s.Lk)("span",{class:"token directive keyword"},"include"),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"EnhancedInputSubsystems.h"')]),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),ln=(0,s.Lk)("h3",{id:"_5-子系统注册上下文",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_5-子系统注册上下文"},[(0,s.Lk)("span",null,"5.子系统注册上下文")])],-1),pn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token function"},"UPROPERTY"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EditAnywhere"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" BlueprintReadOnly"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Category "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Input"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" meta "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("AllowPrivateAccess "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"true"'),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"UInputMappingContext"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" DefaultMappingContext"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),kn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token keyword"},"void"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.Lk)("span",{class:"token function"},"BeginPlay"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// Call the base class  "),(0,s.eW)("\n\tSuper"),(0,s.Lk)("span",{class:"token operator"},":"),(0,s.Lk)("span",{class:"token base-clause"},[(0,s.Lk)("span",{class:"token operator"},":"),(0,s.Lk)("span",{class:"token function"},"BeginPlay"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token punctuation"},")")]),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token comment"},"//Add Input Mapping Context"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token keyword"},"if"),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("APlayerController"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" PlayerController "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token generic-function"},[(0,s.Lk)("span",{class:"token function"},"Cast"),(0,s.Lk)("span",{class:"token generic class-name"},[(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("APlayerController"),(0,s.Lk)("span",{class:"token operator"},">")])]),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("Controller"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token keyword"},"if"),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("UEnhancedInputLocalPlayerSubsystem"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" Subsystem "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" ULocalPlayer"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.Lk)("span",{class:"token generic-function"},[(0,s.Lk)("span",{class:"token function"},"GetSubsystem"),(0,s.Lk)("span",{class:"token generic class-name"},[(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("UEnhancedInputLocalPlayerSubsystem"),(0,s.Lk)("span",{class:"token operator"},">")])]),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("PlayerController"),(0,s.Lk)("span",{class:"token operator"},"->"),(0,s.Lk)("span",{class:"token function"},"GetLocalPlayer"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t\t\tSubsystem"),(0,s.Lk)("span",{class:"token operator"},"->"),(0,s.Lk)("span",{class:"token function"},"AddMappingContext"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("DefaultMappingContext"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),rn=(0,s.Lk)("h3",{id:"_6-绑定inputaction",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_6-绑定inputaction"},[(0,s.Lk)("span",null,"6.绑定InputAction")])],-1),un=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"/** Move Input Action */"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token function"},"UPROPERTY"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EditAnywhere"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" BlueprintReadOnly"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Category "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Input"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" meta "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("AllowPrivateAccess "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token string"},'"true"'),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"UInputAction"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" MoveAction"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\n"),(0,s.Lk)("span",{class:"token keyword"},"protected"),(0,s.Lk)("span",{class:"token operator"},":"),(0,s.eW)("\n\n    "),(0,s.Lk)("span",{class:"token comment"},"// APawn interface"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token keyword"},"virtual"),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"void"),(0,s.eW)(),(0,s.Lk)("span",{class:"token function"},"SetupPlayerInputComponent"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"UInputComponent"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" PlayerInputComponent"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"override"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\n\t"),(0,s.Lk)("span",{class:"token comment"},"/** Called for movement input */"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token keyword"},"void"),(0,s.eW)(),(0,s.Lk)("span",{class:"token function"},"Move"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FInputActionValue"),(0,s.Lk)("span",{class:"token operator"},"&"),(0,s.eW)(" Value"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),dn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token comment"},"//////////////////////////////////////////////////////////////////////////"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token comment"},"// Input"),(0,s.eW)("\n\n"),(0,s.Lk)("span",{class:"token keyword"},"void"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.Lk)("span",{class:"token function"},"SetupPlayerInputComponent"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token keyword"},"class"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"UInputComponent"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" PlayerInputComponent"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// Set up action bindings"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token keyword"},"if"),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("UEnhancedInputComponent"),(0,s.Lk)("span",{class:"token operator"},"*"),(0,s.eW)(" EnhancedInputComponent "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token generic-function"},[(0,s.Lk)("span",{class:"token function"},"CastChecked"),(0,s.Lk)("span",{class:"token generic class-name"},[(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("UEnhancedInputComponent"),(0,s.Lk)("span",{class:"token operator"},">")])]),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("PlayerInputComponent"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t\t\n\t\t"),(0,s.Lk)("span",{class:"token comment"},"//Moving"),(0,s.eW)("\n\t\tEnhancedInputComponent"),(0,s.Lk)("span",{class:"token operator"},"->"),(0,s.Lk)("span",{class:"token function"},"BindAction"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("MoveAction"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" ETriggerEvent"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.eW)("Triggered"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"this"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(),(0,s.Lk)("span",{class:"token operator"},"&"),(0,s.eW)("ATP_ThirdPersonCharacter"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.eW)("Move"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n\n"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n\n"),(0,s.Lk)("span",{class:"token keyword"},"void"),(0,s.eW)(),(0,s.Lk)("span",{class:"token class-name"},"ATP_ThirdPersonCharacter"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.Lk)("span",{class:"token function"},"Move"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FInputActionValue"),(0,s.Lk)("span",{class:"token operator"},"&"),(0,s.eW)(" Value"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token comment"},"// input is a Vector2D"),(0,s.eW)("\n\tFVector2D MovementVector "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Value"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.Lk)("span",{class:"token generic-function"},[(0,s.Lk)("span",{class:"token function"},"Get"),(0,s.Lk)("span",{class:"token generic class-name"},[(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("FVector2D"),(0,s.Lk)("span",{class:"token operator"},">")])]),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n\t"),(0,s.Lk)("span",{class:"token keyword"},"if"),(0,s.eW)(),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("Controller "),(0,s.Lk)("span",{class:"token operator"},"!="),(0,s.eW)(),(0,s.Lk)("span",{class:"token keyword"},"nullptr"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token punctuation"},"{"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token comment"},"// find out which way is forward"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FRotator Rotation "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Controller"),(0,s.Lk)("span",{class:"token operator"},"->"),(0,s.Lk)("span",{class:"token function"},"GetControlRotation"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FRotator "),(0,s.Lk)("span",{class:"token function"},"YawRotation"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.Lk)("span",{class:"token number"},"0"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Rotation"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.eW)("Yaw"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(),(0,s.Lk)("span",{class:"token number"},"0"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n\t\t"),(0,s.Lk)("span",{class:"token comment"},"// get forward vector"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FVector ForwardDirection "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token function"},"FRotationMatrix"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("YawRotation"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.Lk)("span",{class:"token function"},"GetUnitAxis"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EAxis"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.eW)("X"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\n\t\t"),(0,s.Lk)("span",{class:"token comment"},"// get right vector "),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token keyword"},"const"),(0,s.eW)(" FVector RightDirection "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(),(0,s.Lk)("span",{class:"token function"},"FRotationMatrix"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("YawRotation"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.Lk)("span",{class:"token function"},"GetUnitAxis"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EAxis"),(0,s.Lk)("span",{class:"token double-colon punctuation"},"::"),(0,s.eW)("Y"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\n\t\t"),(0,s.Lk)("span",{class:"token comment"},"// add movement "),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token function"},"AddMovementInput"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("ForwardDirection"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" MovementVector"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.eW)("Y"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t\t"),(0,s.Lk)("span",{class:"token function"},"AddMovementInput"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("RightDirection"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" MovementVector"),(0,s.Lk)("span",{class:"token punctuation"},"."),(0,s.eW)("X"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n\t"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token punctuation"},"}"),(0,s.eW)("\n\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),Ln=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">//Moving</span>\nEnhancedInputComponent<span class="token operator">-&gt;</span><span class="token function">BindAction</span><span class="token punctuation">(</span>MoveAction<span class="token punctuation">,</span> ETriggerEvent<span class="token double-colon punctuation">::</span>Triggered<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ATP_ThirdPersonCharacter<span class="token double-colon punctuation">::</span>Move<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',1),gn=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">/**\n* Binds to an object UFUNCTION\n*/</span>\nFEnhancedInputActionEventBinding<span class="token operator">&amp;</span> <span class="token function">BindAction</span><span class="token punctuation">(</span><span class="token keyword">const</span> UInputAction<span class="token operator">*</span> Action<span class="token punctuation">,</span> ETriggerEvent TriggerEvent<span class="token punctuation">,</span> UObject<span class="token operator">*</span> Object<span class="token punctuation">,</span> FName FunctionName<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tTUniquePtr<span class="token operator">&lt;</span>FEnhancedInputActionEventDelegateBinding<span class="token operator">&lt;</span>FEnhancedInputActionHandlerDynamicSignature<span class="token operator">&gt;&gt;</span> AB <span class="token operator">=</span> <span class="token generic-function"><span class="token function">MakeUnique</span><span class="token generic class-name"><span class="token operator">&lt;</span>FEnhancedInputActionEventDelegateBinding<span class="token operator">&lt;</span>FEnhancedInputActionHandlerDynamicSignature<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>Action<span class="token punctuation">,</span> TriggerEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tAB<span class="token operator">-&gt;</span>Delegate<span class="token punctuation">.</span><span class="token function">BindDelegate</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> FunctionName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tAB<span class="token operator">-&gt;</span>Delegate<span class="token punctuation">.</span><span class="token function">SetShouldFireWithEditorScriptGuard</span><span class="token punctuation">(</span>bShouldFireDelegatesInEditor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> <span class="token operator">*</span>EnhancedActionEventBindings<span class="token punctuation">.</span><span class="token function">Add_GetRef</span><span class="token punctuation">(</span><span class="token function">MoveTemp</span><span class="token punctuation">(</span>AB<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-triggers是什么" tabindex="-1"><a class="header-anchor" href="#_7-triggers是什么"><span>7.Triggers是什么？</span></a></h3>',2),mn=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,"先看源码")],-1),bn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token comment"},"/**\n* Trigger qualifiers. If any trigger qualifiers exist the action will not trigger unless:\n* At least one Explicit trigger in this list has been met.\n* All Implicit triggers in this list are met.\n*/"),(0,s.eW)("\n"),(0,s.Lk)("span",{class:"token function"},"UPROPERTY"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EditAnywhere"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Instanced"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" BlueprintReadWrite"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Category "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Action"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\nTArray"),(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("TObjectPtr"),(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("UInputTrigger"),(0,s.Lk)("span",{class:"token operator"},">>"),(0,s.eW)(" Triggers"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),vn=(0,s.Lk)("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[(0,s.Lk)("pre",{class:"language-cpp"},[(0,s.Lk)("code",null,[(0,s.Lk)("span",{class:"token comment"},"/**\n* 触发条件修饰符。如果存在任何触发条件修饰符，则该动作只有在以下情况下才会触发：\n* 至少一个明确触发条件在此列表中已满足。\n* 此列表中的所有隐含触发条件都已满足。\n*/"),(0,s.eW)("\n "),(0,s.Lk)("span",{class:"token function"},"UPROPERTY"),(0,s.Lk)("span",{class:"token punctuation"},"("),(0,s.eW)("EditAnywhere"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Instanced"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" BlueprintReadWrite"),(0,s.Lk)("span",{class:"token punctuation"},","),(0,s.eW)(" Category "),(0,s.Lk)("span",{class:"token operator"},"="),(0,s.eW)(" Action"),(0,s.Lk)("span",{class:"token punctuation"},")"),(0,s.eW)("\nTArray"),(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("TObjectPtr"),(0,s.Lk)("span",{class:"token operator"},"<"),(0,s.eW)("UInputTrigger"),(0,s.Lk)("span",{class:"token operator"},">>"),(0,s.eW)(" Triggers"),(0,s.Lk)("span",{class:"token punctuation"},";"),(0,s.eW)("\n")])]),(0,s.Lk)("div",{class:"line-numbers","aria-hidden":"true"},[(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"}),(0,s.Lk)("div",{class:"line-number"})])],-1),hn=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:W,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),Wn=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),fn=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),yn=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),_n=(0,s.Fv)('<div class="hint-container note"><p class="hint-container-title">注</p><p>在C++中，关键字 <code>final</code> 用于表示某个类不能被其他类继承。例子中，<code>UInputTriggerDown</code> 类声明为 <code>final</code>，这意味着它是不可继承的，不能再派生出其他类。</p><ol><li><strong>性能优化：</strong> 编译器可以对 <code>final</code> 类进行更多的优化，因为它知道没有其他类会继承它。</li><li><strong>代码安全性：</strong> 防止其他开发者错误地继承并修改该类的行为，从而确保该类的稳定性。</li></ol></div><h3 id="_8-系统流程" tabindex="-1"><a class="header-anchor" href="#_8-系统流程"><span>8.系统流程</span></a></h3>',2),An=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),xn=(0,s.Lk)("h3",{id:"_9-子系统",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_9-子系统"},[(0,s.Lk)("span",null,"9.子系统")])],-1),Tn=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>UEnhancedInputLocalPlayerSubsystem <span class="token operator">:</span> <span class="token keyword">public</span> ULocalPlayerSubsystem<span class="token punctuation">,</span> <span class="token keyword">public</span> IEnhancedInputSubsystemInterface\nUEnhancedInputWorldSubsystem <span class="token operator">:</span> <span class="token keyword">public</span> UWorldSubsystem<span class="token punctuation">,</span> <span class="token keyword">public</span> IEnhancedInputSubsystemInterface\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h2><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>showdebug enhancedinput\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>',5),In={href:"https://blog.csdn.net/weixin_55901138/article/details/130639164",target:"_blank",rel:"noopener noreferrer"},En={href:"https://docs.unrealengine.com/5.1/zh-CN/enhanced-input-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://www.youtube.com/watch?v=fW1pXOAIviw",target:"_blank",rel:"noopener noreferrer"},Fn={},wn=(0,a(66262).A)(Fn,[["render",function(n,e){const a=(0,s.g2)("RouteLink"),t=(0,s.g2)("chatmessage"),i=(0,s.g2)("CodeTabs"),o=(0,s.g2)("ExternalLinkIcon");return(0,s.uX)(),(0,s.CE)("div",null,[x,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.Lk)("p",null,[(0,s.eW)("食用本文建议先了解什么是子系统！"),(0,s.bF)(a,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/4-Subsystem.html"},{default:(0,s.k6)((()=>[(0,s.eW)("直通车")])),_:1})])])),_:1}),T,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 增强输入系统也是一个子系统，这里我们只负责记录一些子系统实践。 ")])),_:1}),I,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 启用插件，UE5.1后已经内置 ")])),_:1}),E,C,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 编辑（Edit）——>项目设置（Project Settings)——>按下图设置 ")])),_:1}),F,w,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 输入动作是系统和你的项目代码之间的连接。 ")])),_:1}),M,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 你这解释有点官腔啊！ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 没办法官方文档就是这么写的，具体C++部分再来细讲吧，这里你理解成一些行为和动作，比如跑步、走路、开火等。 ")])),_:1}),S,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这样，我们就可以在蓝图中找到对应的动作节点了！ ")])),_:1}),j,P,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 有问题！你这里只是一些函数事件啊！按键呢按键去哪了？ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 问的好，这些确实只是一些函数。我们需要使用Input Mapping Contexts将这些函数绑定到对应的触发按键。 ")])),_:1}),q,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 打开后配置对应的动作和按键就行了！ ")])),_:1}),O,U,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 这和传统的绑定方案有什么区别啊？怎么感觉更复杂了？ ")])),_:1}),D,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 别急，我们康康传统绑定方法有哪些弱项： ")])),_:1}),R,N,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 可是你这节点确实多出来好几个！能解释一下具体作用吗？ ")])),_:1}),B,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 触发状态（Trigger State） 表示动作的当前状态，我们还是拿源码解释一下吧 ")])),_:1}),(0,s.bF)(i,{id:"87",data:[{id:"原版"},{id:"翻译"}],"tab-id":"language"},{title0:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("原版")])),title1:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("翻译")])),tab0:(0,s.k6)((({value:n,isActive:e})=>[z])),tab1:(0,s.k6)((({value:n,isActive:e})=>[V])),_:1}),Y,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 不对啊！你这里只有一个IA_Move动作，可我明明需要WASD控制上下左右移动啊，难道不应该有4个Input Actions? ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这里需要引入一个Modifiers的概念，即同个动作在不同修饰函数状态下得到不同的结果。 ")])),_:1}),G,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 难怪一个IA_Move下有这么多Modifiers修饰的按键。 ")])),_:1}),H,X,Z,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 我发现除了Modifiers，为什么上面还有一个叫Triggers的东西? ")])),_:1}),J,(0,s.bF)(t,{avatar:"../../assets/emoji/new1.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 先拿官方的图糊弄你一下！后面源码解析会有详细解释 ")])),_:1}),K,Q,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 哎！我才反应过来！这里只有动作事件和按键上下文绑定啊！我运行后没反应啊！ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这些上下文目前来说只是数据，别忘记咱的主角EnhancedInput子系统啊！ ")])),_:1}),$,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[nn])),_:1}),en,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 看来咱不康康源码是没法再进一步理解了！ ")])),_:1}),an,sn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 老规矩先把插件开起来 ")])),_:1}),tn,(0,s.bF)(i,{id:"165",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.h")])),title1:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.cpp")])),tab0:(0,s.k6)((({value:n,isActive:e})=>[on])),tab1:(0,s.k6)((({value:n,isActive:e})=>[cn])),_:1},8,["data"]),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 为什么不在.h中引入全部呢？ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 原则上除了编译时间以外没有区别，主要是防止交叉引用问题。 ")])),_:1}),ln,(0,s.bF)(i,{id:"178",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.h")])),title1:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.cpp")])),tab0:(0,s.k6)((({value:n,isActive:e})=>[pn])),tab1:(0,s.k6)((({value:n,isActive:e})=>[kn])),_:1},8,["data"]),rn,(0,s.bF)(i,{id:"189",data:[{id:"MyCharacter.h"},{id:"MyCharacter.cpp"}],"tab-id":"language"},{title0:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.h")])),title1:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("MyCharacter.cpp")])),tab0:(0,s.k6)((({value:n,isActive:e})=>[un])),tab1:(0,s.k6)((({value:n,isActive:e})=>[dn])),_:1},8,["data"]),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 我怎么感觉绑定的过程像委托呢？ ")])),_:1}),Ln,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 你的直觉是对的！源码如下： ")])),_:1}),gn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 还记得之前糊弄你的Triggers图吗？现在给你康康他的庐山真面目。 ")])),_:1}),mn,(0,s.bF)(i,{id:"210",data:[{id:"InputAction.h原文"},{id:"InputAction.h 翻译"}],"tab-id":"language"},{title0:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("InputAction.h原文")])),title1:(0,s.k6)((({value:n,isActive:e})=>[(0,s.eW)("InputAction.h 翻译")])),tab0:(0,s.k6)((({value:n,isActive:e})=>[bn])),tab1:(0,s.k6)((({value:n,isActive:e})=>[vn])),_:1},8,["data"]),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 从源文件中可以看到ETriggerEvent只是InputTrigger类中的一个枚举。 ")])),_:1}),hn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 接着配置的具体Trigger是继承自InputTrigger的子类或者孙类。 ")])),_:1}),Wn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这么说可能不够直观，我给你做个类图理解一下 ")])),_:1}),fn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 搜嘎！也就是这里的设置trigger其实就是切换不同版本的InputTrigger？ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 是的，切换到对应的继承版本会有对应的效果。你不看源码根本不能理解这个trigger。 ")])),_:1}),yn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 这里为什么有个final关键字？ ")])),_:1}),_n,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 现在我们大致理解一下执行流程，不要求记住。 ")])),_:1}),An,xn,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 最后请出我们的子系统。 ")])),_:1}),Tn,(0,s.Lk)("p",null,[(0,s.Lk)("a",In,[(0,s.eW)("UE5学习笔记|增强输入系统EnhancedInput_鹿野明的博客-CSDN博客"),(0,s.bF)(o)])]),(0,s.Lk)("p",null,[(0,s.Lk)("a",En,[(0,s.eW)("虚幻引擎中的增强输入 | 虚幻引擎5.1文档(unrealengine.com)"),(0,s.bF)(o)])]),(0,s.Lk)("p",null,[(0,s.Lk)("a",Cn,[(0,s.eW)("UE5 C++ Enhanced Input - 2 - Bind C++ Functions to Input Actions - YouTube"),(0,s.bF)(o)])])])}]]),Mn=JSON.parse('{"path":"/unreal/core_%E6%A0%B8%E5%BF%83_/4.2-EnhancedInput.html","title":"c4.2Subsystem|EnhancedInput","lang":"zh-CN","frontmatter":{"title":"c4.2Subsystem|EnhancedInput","order":402,"category":["u++"],"description":"导读 EnhancedInput|增强输入系统 1.插件 2.项目设置 3.输入动作（Input Actions） 4. 输入映射上下文（Input Mapping Contexts） 历史问题 复杂的输入机制无法满足。 过于简陋，例如按住、双击、联合输入等都需要用户自己实现。 性能不足，需要自己写切换逻辑，不同情况需要自己判断优先级。 5. 触发状态...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/core_%E6%A0%B8%E5%BF%83_/4.2-EnhancedInput.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c4.2Subsystem|EnhancedInput"}],["meta",{"property":"og:description","content":"导读 EnhancedInput|增强输入系统 1.插件 2.项目设置 3.输入动作（Input Actions） 4. 输入映射上下文（Input Mapping Contexts） 历史问题 复杂的输入机制无法满足。 过于简陋，例如按住、双击、联合输入等都需要用户自己实现。 性能不足，需要自己写切换逻辑，不同情况需要自己判断优先级。 5. 触发状态..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T00:40:22.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-02-17T00:40:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c4.2Subsystem|EnhancedInput\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-17T00:40:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"导读","slug":"导读","link":"#导读","children":[]},{"level":2,"title":"EnhancedInput|增强输入系统","slug":"enhancedinput-增强输入系统","link":"#enhancedinput-增强输入系统","children":[{"level":3,"title":"1.插件","slug":"_1-插件","link":"#_1-插件","children":[]},{"level":3,"title":"2.项目设置","slug":"_2-项目设置","link":"#_2-项目设置","children":[]},{"level":3,"title":"3.输入动作（Input Actions）","slug":"_3-输入动作-input-actions","link":"#_3-输入动作-input-actions","children":[]},{"level":3,"title":"4. 输入映射上下文（Input Mapping Contexts）","slug":"_4-输入映射上下文-input-mapping-contexts","link":"#_4-输入映射上下文-input-mapping-contexts","children":[]},{"level":3,"title":"5. 触发状态（Trigger State）","slug":"_5-触发状态-trigger-state","link":"#_5-触发状态-trigger-state","children":[]},{"level":3,"title":"6. 修饰符（Modifiers）","slug":"_6-修饰符-modifiers","link":"#_6-修饰符-modifiers","children":[]},{"level":3,"title":"7. 触发器（Triggers）","slug":"_7-触发器-triggers","link":"#_7-触发器-triggers","children":[]},{"level":3,"title":"8.绑定上下文","slug":"_8-绑定上下文","link":"#_8-绑定上下文","children":[]}]},{"level":2,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[{"level":3,"title":"1. 插件","slug":"_1-插件-1","link":"#_1-插件-1","children":[]},{"level":3,"title":"2. Build.cs引入模块","slug":"_2-build-cs引入模块","link":"#_2-build-cs引入模块","children":[]},{"level":3,"title":"3. 准备Character","slug":"_3-准备character","link":"#_3-准备character","children":[]},{"level":3,"title":"4. 引入头文件","slug":"_4-引入头文件","link":"#_4-引入头文件","children":[]},{"level":3,"title":"5.子系统注册上下文","slug":"_5-子系统注册上下文","link":"#_5-子系统注册上下文","children":[]},{"level":3,"title":"6.绑定InputAction","slug":"_6-绑定inputaction","link":"#_6-绑定inputaction","children":[]},{"level":3,"title":"7.Triggers是什么？","slug":"_7-triggers是什么","link":"#_7-triggers是什么","children":[]},{"level":3,"title":"8.系统流程","slug":"_8-系统流程","link":"#_8-系统流程","children":[]},{"level":3,"title":"9.子系统","slug":"_9-子系统","link":"#_9-子系统","children":[]}]},{"level":2,"title":"Debug","slug":"debug","link":"#debug","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1704306851000,"updatedTime":1708130422000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":3}]},"readingTime":{"minutes":8.56,"words":2567},"filePathRelative":"unreal/core[核心]/4.2-EnhancedInput.md","localizedDate":"2024年1月3日","excerpt":"<h3>导读</h3>\\n\\n<h2>EnhancedInput|增强输入系统</h2>\\n\\n<h3>1.插件</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n<h3>2.项目设置</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n<h3>3.输入动作（Input Actions）</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<figure><figcaption></figcaption></figure>","autoDesc":true}')}}]);