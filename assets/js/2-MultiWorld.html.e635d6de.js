"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[3558],{117:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>B,data:()=>Z});var e=s(20641);const t=s.p+"assets/img/aheroselect_002.1ef22921.jpg",o=s.p+"assets/img/aheroselect_001.022e33cb.png",l=s.p+"assets/img/aheroselect_003.1437d91d.jpg",p=s.p+"assets/img/aheroselect_004.c3c78bdc.png",i=s.p+"assets/img/aheroselect_005.bf1c02aa.png",c=s.p+"assets/img/aheroselect_009.5ff21205.png",r=s.p+"assets/img/aheroselect_010.1eeb84ce.png",u=s.p+"assets/img/aheroselect_007.500076f8.png",d=s.p+"assets/img/aheroselect_008.308be189.png",k=s.p+"assets/img/aheroselect_011.841d5f31.png",g=s.p+"assets/img/aheroselect_006.225fc1a4.png",v=s.p+"assets/img/aheroselect_012.507f12f5.png",m=s.p+"assets/img/aheroselect_013.50ee4ca1.png",b=s.p+"assets/img/aheroselect_014.90387642.png",f=s.p+"assets/img/aheroselect_015.d5c25ab3.png",h=s.p+"assets/img/aheroselect_016.3f9b5cb5.png",L=(0,e.Lk)("h2",{id:"导言",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#导言"},[(0,e.Lk)("span",null,"导言")])],-1),W=(0,e.Lk)("blockquote",null,[(0,e.Lk)("p",null,"当你试图在游戏中切换英雄或打开背包时，你面临的第一个问题就是怎么打开这些带有独立光照、背景的场景，并且不影响原本的世界。")],-1),y=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:t,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),w=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),U=(0,e.Lk)("h2",{id:"问题",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#问题"},[(0,e.Lk)("span",null,"问题")])],-1),_=(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"场景切换问题。"),(0,e.Lk)("li",null,"UI切换问题。"),(0,e.Lk)("li",null,"控制器切换问题")],-1),S=(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"守望先锋")],-1),j=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),F=(0,e.Lk)("div",{class:"hint-container note"},[(0,e.Lk)("p",{class:"hint-container-title"},"注"),(0,e.Lk)("p",null,"这里只是简单的演示，远没有我们想要的效果。")],-1),E=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),q=(0,e.Lk)("ol",{start:"2"},[(0,e.Lk)("li",null,"永劫无间")],-1),x=(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"主关卡不再存东西，而是动态子关卡代替"),(0,e.Lk)("li",null,"子关卡则包括角色选择关卡、游戏地图关卡、背包关卡等")],-1),A=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),G=(0,e.Lk)("h2",{id:"重识uworld",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#重识uworld"},[(0,e.Lk)("span",null,"重识UWorld")])],-1),M=(0,e.Fv)('<figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>官方定义</p></blockquote><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>编辑器之所以可以切换显示图层，也是因为代码中Layers部分是只编译在编辑器中的<code>WITH_EDITORONLY_DATA</code></p></blockquote><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>当然官方也用了专门的子系统维护关卡的图层。</p></blockquote><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7),O=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:k,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),z=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),I=(0,e.Lk)("h2",{id:"ulevel-ulevelstreamingdynamic-ulevelstream",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#ulevel-ulevelstreamingdynamic-ulevelstream"},[(0,e.Lk)("span",null,"ULevel & ULevelStreamingDynamic && ULevelStream")])],-1),T=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),D=(0,e.Fv)('<ol><li><p>LoadLevelInstanceBySoftObjectPtr，通过世界上下文，拿到具体的世界。早在GamePlay开篇我们就对WorldContextObject 做了简单的介绍，它是由Engine维护的一个方法，用于获取世界指针，再深入就有点不礼貌了。</p></li><li><p>LoadLevelInstance_Internal ，则是LoadLevelInstanceBySoftObjectPtr中调用的私有工具函数，主要是用于包体PackagePath检查、实例化ULevelStreamingDynamic</p></li><li><p>最终通过World-&gt;AddStreamingLevel(StreamingLevel);</p></li></ol><blockquote><p>下面是老生常谈的通过上下文拿到UWorld的方法</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>UWorld<span class="token operator">*</span> World <span class="token operator">=</span> GEngine<span class="token operator">-&gt;</span><span class="token function">GetWorldFromContextObject</span><span class="token punctuation">(</span>WorldContextObject<span class="token punctuation">,</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>LogAndReturnNull<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nUWorld<span class="token operator">*</span> <span class="token class-name">UEngine</span><span class="token double-colon punctuation">::</span><span class="token function">GetWorldFromContextObject</span><span class="token punctuation">(</span><span class="token keyword">const</span> UObject<span class="token operator">*</span> Object<span class="token punctuation">,</span> EGetWorldErrorMode ErrorMode<span class="token punctuation">)</span> <span class="token keyword">const</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>Object <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">switch</span> <span class="token punctuation">(</span>ErrorMode<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">case</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>Assert<span class="token operator">:</span>\n\t\t\t<span class="token function">check</span><span class="token punctuation">(</span>Object<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">break</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">case</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>LogAndReturnNull<span class="token operator">:</span>\n\t\t\t<span class="token class-name">FFrame</span><span class="token double-colon punctuation">::</span><span class="token function">KismetExecutionMessage</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;A null object was passed as a world context object to UEngine::GetWorldFromContextObject().&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ELogVerbosity<span class="token double-colon punctuation">::</span>Warning<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token comment">//UE_LOG(LogEngine, Warning, TEXT(&quot;UEngine::GetWorldFromContextObject() passed a nullptr&quot;));</span>\n\t\t\t<span class="token keyword">break</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">case</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>ReturnNull<span class="token operator">:</span>\n\t\t\t<span class="token keyword">break</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">return</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token keyword">bool</span> bSupported <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\tUWorld<span class="token operator">*</span> World <span class="token operator">=</span> <span class="token punctuation">(</span>ErrorMode <span class="token operator">==</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>Assert<span class="token punctuation">)</span> <span class="token operator">?</span> Object<span class="token operator">-&gt;</span><span class="token function">GetWorldChecked</span><span class="token punctuation">(</span><span class="token comment">/*out*/</span> bSupported<span class="token punctuation">)</span> <span class="token operator">:</span> Object<span class="token operator">-&gt;</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>bSupported <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>World <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ErrorMode <span class="token operator">==</span> EGetWorldErrorMode<span class="token double-colon punctuation">::</span>LogAndReturnNull<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token class-name">FFrame</span><span class="token double-colon punctuation">::</span><span class="token function">KismetExecutionMessage</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token class-name">FString</span><span class="token double-colon punctuation">::</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;No world was found for object (%s) passed in to UEngine::GetWorldFromContextObject().&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token function">GetPathNameSafe</span><span class="token punctuation">(</span>Object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ELogVerbosity<span class="token double-colon punctuation">::</span>Warning<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> <span class="token punctuation">(</span>bSupported <span class="token operator">?</span> World <span class="token operator">:</span> GWorld<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),V=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),C=(0,e.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\n<span class="token keyword">void</span> <span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SetHiddenFromStreamLevel</span><span class="token punctuation">(</span><span class="token keyword">bool</span> bHidden<span class="token punctuation">,</span> ULevelStreaming<span class="token operator">*</span> LevelStreaming<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>LevelStreaming<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\t<span class="token comment">//从LevelStreaming中拿到ULevel</span>\n\tULevel<span class="token operator">*</span> LoadedLevel <span class="token operator">=</span> LevelStreaming<span class="token operator">-&gt;</span><span class="token function">GetLoadedLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>LoadedLevel<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// ULevel拿到所有的Actor</span>\n\t<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">auto</span> Actor <span class="token operator">:</span> LoadedLevel<span class="token operator">-&gt;</span>Actors<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tActor<span class="token operator">-&gt;</span><span class="token function">SetActorHiddenInGame</span><span class="token punctuation">(</span>bHidden<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>所以要从世界拿到所有的Actor的流程是UWorld-&gt;ULevelStream-&gt;ULevel-&gt;Actor,而ULevelStreamingDynamic : public ULevelStreaming，本质还是ULevelStreaming</p></blockquote><h2 id="ui-viewport" tabindex="-1"><a class="header-anchor" href="#ui-viewport"><span>UI|Viewport</span></a></h2>',3),P=(0,e.Lk)("figure",null,[(0,e.Lk)("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),(0,e.Lk)("figcaption")],-1),N=(0,e.Fv)('<figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UUserWidget</span><span class="token double-colon punctuation">::</span><span class="token function">AddToViewport</span><span class="token punctuation">(</span>int32 ZOrder<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>UGameViewportSubsystem<span class="token operator">*</span> Subsystem <span class="token operator">=</span> <span class="token class-name">UGameViewportSubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tFGameViewportWidgetSlot ViewportSlot<span class="token punctuation">;</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>bIsManagedByGameViewportSubsystem<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\tViewportSlot <span class="token operator">=</span> Subsystem<span class="token operator">-&gt;</span><span class="token function">GetWidgetSlot</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\tViewportSlot<span class="token punctuation">.</span>ZOrder <span class="token operator">=</span> ZOrder<span class="token punctuation">;</span>\n\t\tSubsystem<span class="token operator">-&gt;</span><span class="token function">AddWidget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> ViewportSlot<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>日常子系统维护，UGameViewportSubsystem : public UEngineSubsystem</p></blockquote><figure><img src="'+h+'" alt="aheroselect_016.png" tabindex="0" loading="lazy"><figcaption>aheroselect_016.png</figcaption></figure><h3 id="takewidget" tabindex="-1"><a class="header-anchor" href="#takewidget"><span>TakeWidget</span></a></h3>',5),R={},B=(0,s(66262).A)(R,[["render",function(n,a){const s=(0,e.g2)("chatmessage"),t=(0,e.g2)("gifwithbutton");return(0,e.uX)(),(0,e.CE)("div",null,[L,W,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" BABA!我心血来潮想做个类似黑猴的个人仓库 ")])),_:1}),y,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 费了一番功夫实现后才意识到我的个人仓库界面是带有独立灯光、背景的场景（Level）,问题来了！怎么在游戏中打开使用？ ")])),_:1}),w,U,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 这个问题的难点可以拆分总结成以下几点： ")])),_:1}),_,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 让我们看看一些优秀的游戏设计思路吧 ")])),_:1}),S,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 细心的你应该发现当你试图在守望中切换英雄时，他会将角色居中并将镜头固定到场景的某处。甚至某些地图的进攻方可以看到防守方的赛前占位， ")])),_:1}),j,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 我想起来了，之前监测站用猩猩站在角落会挡住选择的英雄。 ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 要自己注意原始Pawn的生命周期，比如死亡重生时重新赋值等，可惜光照、背景切换颇费功夫。 比如需要将当前场景所有物体隐藏 ")])),_:1}),F,(0,e.bF)(t,{src:"../../assets/unrealgif/hpup43.gif"}),E,q,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 永劫的角色界面则是独立的背景、光照的场景。 ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 如果要改变光照、背景我能想到的方案是用关卡实例来实现。 ")])),_:1}),(0,e.bF)(t,{src:"../../assets/unrealgif/hpup44.gif"}),x,A,G,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 这里特别强调一下UE中非常反直觉的设定，Level不代表World,Level只是World中维护的一个指针,Level中则维护一堆Actor. 这也是我们经常看到OpenLevel而不是OpenWorld的原因。 ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 这就涉及到我的盲区了！ ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 很简单，打开官方文档即源码，翻译一下注释就知道了。 ")])),_:1}),M,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" UE官方特有的废弃特色，一言不合就废弃，从不考虑用户感受，就和增强输入系统一样，config说废就废，也不给一点迁移建议。 ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 等会，你前面说World维护Level,Level中只有Actor? ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 遇事不决，源码走起。 ")])),_:1}),O,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 可是这些子关卡并不是Actor啊 ")])),_:1}),z,I,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 这就要看看他是如何处理加载这些关卡实例了。 ")])),_:1}),T,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 一但我们调用LoadLevelInstanceBySoftObjectPtr，最终走向是在UWrold中调用AddStreamingLevel，下面是一个简单的流程。 ")])),_:1}),D,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 所以讲了这么多ULevel和ULevelStreamingDynamic又是什么关系呢？你不是所有Actor都放在ULevel里吗？ ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" ULevelStreamingDynamic既然是从pakage里实例出来的，当然已经包括了ULevel指针 ")])),_:1}),V,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 搜得寺内！我说咱们没法从LevelStreamingDynamic里拿到所有Actor,原来还有这么一层关系啊。 ")])),_:1}),C,(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" ?非常奇怪的问题，为什么没有UI？ ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" UI并不是UWorld维护的，而是UGameViewportClient维护的SOverlay ")])),_:1}),(0,e.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" 坏了！涉及到更大的盲区了！ ")])),_:1}),P,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 硬啃当然不知所以然，我们可以从UI的创建流程反推一下。 ")])),_:1}),N,(0,e.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[(0,e.eW)(" 这里比较关键的就是UWidget 和 SWidget互转函数了，这也是我们以后将UWidget 转成 SWidget一些参考。 ")])),_:1})])}]]),Z=JSON.parse('{"path":"/unreal/master_%E5%85%A5%E9%AD%94_/2-MultiWorld.html","title":"M.MultiWorld|游戏中打开仓库","lang":"zh-CN","frontmatter":{"title":"M.MultiWorld|游戏中打开仓库","order":200,"category":["u++"],"description":"导言 当你试图在游戏中切换英雄或打开背包时，你面临的第一个问题就是怎么打开这些带有独立光照、背景的场景，并且不影响原本的世界。 问题 场景切换问题。 UI切换问题。 控制器切换问题 守望先锋 注 这里只是简单的演示，远没有我们想要的效果。","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/master_%E5%85%A5%E9%AD%94_/2-MultiWorld.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"M.MultiWorld|游戏中打开仓库"}],["meta",{"property":"og:description","content":"导言 当你试图在游戏中切换英雄或打开背包时，你面临的第一个问题就是怎么打开这些带有独立光照、背景的场景，并且不影响原本的世界。 问题 场景切换问题。 UI切换问题。 控制器切换问题 守望先锋 注 这里只是简单的演示，远没有我们想要的效果。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T08:35:28.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-11-26T08:35:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"M.MultiWorld|游戏中打开仓库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-26T08:35:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"导言","slug":"导言","link":"#导言","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"重识UWorld","slug":"重识uworld","link":"#重识uworld","children":[]},{"level":2,"title":"ULevel & ULevelStreamingDynamic && ULevelStream","slug":"ulevel-ulevelstreamingdynamic-ulevelstream","link":"#ulevel-ulevelstreamingdynamic-ulevelstream","children":[]},{"level":2,"title":"UI|Viewport","slug":"ui-viewport","link":"#ui-viewport","children":[{"level":3,"title":"TakeWidget","slug":"takewidget","link":"#takewidget","children":[]}]}],"git":{"createdTime":1732610128000,"updatedTime":1732610128000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":5.05,"words":1515},"filePathRelative":"unreal/master[入魔]/2-MultiWorld.md","localizedDate":"2024年11月26日","excerpt":"<h2>导言</h2>\\n<blockquote>\\n<p>当你试图在游戏中切换英雄或打开背包时，你面临的第一个问题就是怎么打开这些带有独立光照、背景的场景，并且不影响原本的世界。</p>\\n</blockquote>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<figure><figcaption></figcaption></figure>\\n<h2>问题</h2>\\n\\n<ol>\\n<li>场景切换问题。</li>\\n<li>UI切换问题。</li>\\n<li>控制器切换问题</li>\\n</ol>\\n\\n<ol>\\n<li>守望先锋</li>\\n</ol>\\n\\n<figure><figcaption></figcaption></figure>","autoDesc":true}')}}]);