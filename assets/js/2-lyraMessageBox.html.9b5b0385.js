"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[6999],{7446:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>b,data:()=>f});var t=s(20641);const e=s.p+"assets/img/UIMessaging001.38a14d74.png",o=s.p+"assets/img/UIMessaging002.c65c938f.png",p=(0,t.Lk)("h2",{id:"项目说明",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#项目说明"},[(0,t.Lk)("span",null,"项目说明：")])],-1),c=(0,t.Lk)("p",null,[(0,t.Lk)("code",null,"ExorcistUIMessaging"),(0,t.eW)(" 是一个用于在游戏中展示全局消息框（MessageBox）的子系统，支持错误、确认等提示信息。 它基于 MVC 设计模式实现，通过异步蓝图节点来展示消息，能够简化用户与系统之间的交互。")],-1),i=(0,t.Lk)("h3",{id:"功能",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#功能"},[(0,t.Lk)("span",null,"功能：")])],-1),l=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),r=(0,t.Lk)("h3",{id:"主要模块",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#主要模块"},[(0,t.Lk)("span",null,"主要模块：")])],-1),u=(0,t.Lk)("ol",null,[(0,t.Lk)("li",null,[(0,t.Lk)("strong",null,"UAsyncAction_ShowConfirmation"),(0,t.eW)("：")])],-1),k=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> BlueprintCosmetic<span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>BlueprintInternalUseOnly <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> WorldContext <span class="token operator">=</span> <span class="token string">&quot;InWorldContextObject&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">static</span> UAsyncAction_ShowConfirmation<span class="token operator">*</span> <span class="token function">ShowConfirmationYesNo</span><span class="token punctuation">(</span>\n    UObject<span class="token operator">*</span> InWorldContextObject<span class="token punctuation">,</span> FText Title<span class="token punctuation">,</span> FText Message\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>UCommonGameDialogDescriptor</strong>（Model层 - 实体类）：</li></ol>',2),d=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">static</span> UCommonGameDialogDescriptor<span class="token operator">*</span> <span class="token function">CreateConfirmationOk</span><span class="token punctuation">(</span><span class="token keyword">const</span> FText<span class="token operator">&amp;</span> Header<span class="token punctuation">,</span> <span class="token keyword">const</span> FText<span class="token operator">&amp;</span> Body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nUCommonGameDialogDescriptor<span class="token operator">*</span> <span class="token class-name">UCommonGameDialogDescriptor</span><span class="token double-colon punctuation">::</span><span class="token function">CreateConfirmationOk</span><span class="token punctuation">(</span><span class="token keyword">const</span> FText<span class="token operator">&amp;</span> Header<span class="token punctuation">,</span> <span class="token keyword">const</span> FText<span class="token operator">&amp;</span> Body<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    UCommonGameDialogDescriptor<span class="token operator">*</span> Descriptor <span class="token operator">=</span> <span class="token generic-function"><span class="token function">NewObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UCommonGameDialogDescriptor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    Descriptor<span class="token operator">-&gt;</span>Header <span class="token operator">=</span> Header<span class="token punctuation">;</span>\n    Descriptor<span class="token operator">-&gt;</span>Body <span class="token operator">=</span> Body<span class="token punctuation">;</span>\n\n    FConfirmationDialogAction ConfirmAction<span class="token punctuation">;</span>\n    ConfirmAction<span class="token punctuation">.</span>Result <span class="token operator">=</span> ECommonMessagingResult<span class="token double-colon punctuation">::</span>Confirmed<span class="token punctuation">;</span>\n    ConfirmAction<span class="token punctuation">.</span>OptionalDisplayText <span class="token operator">=</span> <span class="token function">LOCTEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Ok&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    Descriptor<span class="token operator">-&gt;</span>ButtonActions<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>ConfirmAction<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> Descriptor<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CreateConfirmationOk</code> 函数用于构建一个消息描述符，包含标题、内容以及“确认”按钮。</p><ol start="3"><li><strong>UExorcistConfirmationScreen</strong>(View层)：<br> 继承自 <code>UCommonGameDialog</code> 和 <code>UCommonActivatableWidget</code>，负责显示对话框内容。</li></ol>',3),m=(0,t.Fv)('<figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>   <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">SetupDialog</span><span class="token punctuation">(</span>UCommonGameDialogDescriptor<span class="token operator">*</span> Descriptor<span class="token punctuation">,</span> \n   FCommonMessagingResultDelegate ResultCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SetupDialog</code> 方法用于将对话框的数据进行设置，并绑定用户交互的回调函数。</p><ol start="4"><li><strong>UExorcistUIMessaging 子系统（Controller层）</strong>：</li></ol>',4),g=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">ShowConfirmation</span><span class="token punctuation">(</span>UCommonGameDialogDescriptor<span class="token operator">*</span> DialogDescriptor<span class="token punctuation">,</span> \nFCommonMessagingResultDelegate ResultCallback <span class="token operator">=</span> <span class="token function">FCommonMessagingResultDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token class-name">UExorcistUIMessaging</span><span class="token double-colon punctuation">::</span><span class="token function">ShowConfirmation</span><span class="token punctuation">(</span>UCommonGameDialogDescriptor<span class="token operator">*</span> DialogDescriptor<span class="token punctuation">,</span> FCommonMessagingResultDelegate ResultCallback<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>UCommonLocalPlayer<span class="token operator">*</span> LocalPlayer <span class="token operator">=</span> <span class="token generic-function"><span class="token function">GetLocalPlayer</span><span class="token generic class-name"><span class="token operator">&lt;</span>UCommonLocalPlayer<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>UPrimaryGameLayout<span class="token operator">*</span> RootLayout <span class="token operator">=</span> LocalPlayer<span class="token operator">-&gt;</span><span class="token function">GetRootUILayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            RootLayout<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">PushWidgetToLayerStack</span><span class="token generic class-name"><span class="token operator">&lt;</span>UCommonGameDialog<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>TAG_UI_LAYER_MODAL<span class="token punctuation">,</span> ConfirmationDialogClassPtr<span class="token punctuation">,</span> <span class="token punctuation">[</span>DialogDescriptor<span class="token punctuation">,</span> ResultCallback<span class="token punctuation">]</span><span class="token punctuation">(</span>UCommonGameDialog<span class="token operator">&amp;</span> Dialog<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                Dialog<span class="token punctuation">.</span><span class="token function">SetupDialog</span><span class="token punctuation">(</span>DialogDescriptor<span class="token punctuation">,</span> ResultCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            GEngine<span class="token operator">-&gt;</span><span class="token function">AddOnScreenDebugMessage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10.0f</span><span class="token punctuation">,</span> FColor<span class="token double-colon punctuation">::</span>Red<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;ShowConfirmation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ShowConfirmation</code> 函数负责将 <code>DialogDescriptor</code> 实例推送到 UI 栈中，展示对话框。</p>',2),v={},b=(0,s(66262).A)(v,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[p,c,i,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 该子系统用于显示全局消息框，例如确认消息、错误提示等。 ")])),_:1}),l,r,u,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 一个蓝图节点，负责通过异步操作将消息展示到屏幕上。 ")])),_:1}),k,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 由上可知，任务交给了蓝图异步处理器，并且将数据组装，一般我们回单独负责一个纯数据类，也称实体类用于创建包含消息的描述符实例， 他只负责数据处理的逻辑，不负责消息的展示。 ")])),_:1}),d,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 数据实体类有了,接下来是展示的视图类，很简单本质是一个UserWidget，只不过预留了组装接口。 ")])),_:1}),m,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" MVC中的M和V都有了，接着就是咱们控制组装的问题了，Lyra中写了专门的子系统来负责生成对应的消息框，最终实例化到屏幕上。 ")])),_:1}),g,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (4).png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 有个问题！为什么不用子系统直接来做这个事情? ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (3).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 子系统确实可以直接来做这个事情，我们不应该局限在他的框架中。 ")])),_:1})])}]]),f=JSON.parse('{"path":"/unreal/lyra_%E5%A4%A9%E7%A7%A4%E5%BA%A7_/2-lyraMessageBox.html","title":"LY2.Lyra-UIMessaging","lang":"zh-CN","frontmatter":{"title":"LY2.Lyra-UIMessaging","order":2,"category":["unreal"],"description":"项目说明： ExorcistUIMessaging 是一个用于在游戏中展示全局消息框（MessageBox）的子系统，支持错误、确认等提示信息。 它基于 MVC 设计模式实现，通过异步蓝图节点来展示消息，能够简化用户与系统之间的交互。 功能： 主要模块： UAsyncAction_ShowConfirmation： UCommonGameDialogD...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/lyra_%E5%A4%A9%E7%A7%A4%E5%BA%A7_/2-lyraMessageBox.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"LY2.Lyra-UIMessaging"}],["meta",{"property":"og:description","content":"项目说明： ExorcistUIMessaging 是一个用于在游戏中展示全局消息框（MessageBox）的子系统，支持错误、确认等提示信息。 它基于 MVC 设计模式实现，通过异步蓝图节点来展示消息，能够简化用户与系统之间的交互。 功能： 主要模块： UAsyncAction_ShowConfirmation： UCommonGameDialogD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-07T08:19:23.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-10-07T08:19:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LY2.Lyra-UIMessaging\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-07T08:19:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"项目说明：","slug":"项目说明","link":"#项目说明","children":[{"level":3,"title":"功能：","slug":"功能","link":"#功能","children":[]},{"level":3,"title":"主要模块：","slug":"主要模块","link":"#主要模块","children":[]}]}],"git":{"createdTime":1728289163000,"updatedTime":1728289163000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"unreal/lyra[天秤座]/2-lyraMessageBox.md","localizedDate":"2024年10月7日","excerpt":"<h2>项目说明：</h2>\\n<p><code>ExorcistUIMessaging</code> 是一个用于在游戏中展示全局消息框（MessageBox）的子系统，支持错误、确认等提示信息。\\n它基于 MVC 设计模式实现，通过异步蓝图节点来展示消息，能够简化用户与系统之间的交互。</p>\\n<h3>功能：</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n<h3>主要模块：</h3>\\n<ol>\\n<li><strong>UAsyncAction_ShowConfirmation</strong>：</li>\\n</ol>\\n\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token function\\">UFUNCTION</span><span class=\\"token punctuation\\">(</span>BlueprintCallable<span class=\\"token punctuation\\">,</span> BlueprintCosmetic<span class=\\"token punctuation\\">,</span> meta <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>BlueprintInternalUseOnly <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"true\\"</span><span class=\\"token punctuation\\">,</span> WorldContext <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"InWorldContextObject\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">static</span> UAsyncAction_ShowConfirmation<span class=\\"token operator\\">*</span> <span class=\\"token function\\">ShowConfirmationYesNo</span><span class=\\"token punctuation\\">(</span>\\n    UObject<span class=\\"token operator\\">*</span> InWorldContextObject<span class=\\"token punctuation\\">,</span> FText Title<span class=\\"token punctuation\\">,</span> FText Message\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);