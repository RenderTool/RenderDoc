"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[1367],{36038:(a,n,e)=>{e.r(n),e.d(n,{comp:()=>d,data:()=>u});var t=e(20641);const s=(0,t.Fv)('<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><blockquote><p>在C++中，变量声明和定义：</p></blockquote><p><strong>变量声明（Variable Declaration）：</strong> 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">extern</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>  <span class="token comment">//这是一个变量声明：（通过使用extern关键字，可以声明变量名而不定义它）</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>需要注意的是extern 不能在main函数中，且需要在外部赋值才能在main函数中修改。</p></blockquote><p><strong>变量定义（Variable Definition）：</strong> 变量定义是指在程序中为变量分配实际的内存空间，同时也可以对其进行初始化。变量定义包含了变量的声明。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>  <span class="token comment">// 这是一个变量定义</span>\n<span class="token keyword">int</span> y<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//变量定义，{}默认是0</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">42</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//也是一个变量定义</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码中：</p>',8),i=(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"int x"),(0,t.eW)(" 是变量声明和定义的组合，它告诉编译器分配一个整数类型的内存空间给变量 "),(0,t.Lk)("code",null,"x"),(0,t.eW)("，并将其初始化为 42。")],-1),p=(0,t.Lk)("code",null,"int y",-1),o=(0,t.Lk)("code",null,"y",-1),l=(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"int c"),(0,t.eW)(" 也使了{}初始化，并且赋值42。")],-1),c=(0,t.Fv)('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>为变量分配地址和存储空间的称为定义，不分配地址的称为声明。</p><h3 id="易混淆" tabindex="-1"><a class="header-anchor" href="#易混淆"><span>易混淆</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> <span class="token function">b</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p><code>int a = 1;</code>: 这是一个整数变量声明，将变量a初始化为1。</p></li><li><p><code>int a();</code>: 这是一个函数声明，而不是变量声明。它声明了一个返回整数的函数a，但没有提供函数体。这被称为函数原型。</p></li><li><p><code>int b(a);</code>: 这是一个函数声明，其中参数b是一个整数，而参数a是一个函数。这是因为在C++中，函数名可以被视为指向函数的指针。因此，这里的b函数的参数是一个函数。</p></li></ol>',5),r={},d=(0,e(66262).A)(r,[["render",function(a,n){const e=(0,t.g2)("chatmessage"),r=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(e,{avatar:"../../../assets/emoji/blzt.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 变量声明和定义 ")])),_:1}),s,(0,t.Lk)("ol",null,[i,(0,t.Lk)("li",null,[p,(0,t.eW)(" 使用了{}初始化了 "),o,(0,t.eW)("，默认不赋值是0，是现代C++的写法，"),(0,t.bF)(r,{to:"/language/cpp/BaseGuide%5B%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%5D/3-function%20brace%20initialization.html"},{default:(0,t.k6)((()=>[(0,t.eW)("后续章节")])),_:1}),(0,t.eW)("中就有描述。")]),l]),(0,t.bF)(e,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 需要注意的是，变量声明和定义可以分开进行，但通常在实际编程中，它们往往是同时进行的。 ")])),_:1}),c,(0,t.bF)(e,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" b函数的参数并不是a这个函数的返回值（即a=1），而是a函数本身。实际上，在这个声明中，a函数的原型被传递给了b函数。 ")])),_:1})])}]]),u=JSON.parse('{"path":"/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/2-Variable%20Declaration_%20Definition.html","title":"c++2.变量声明和定义","lang":"zh-CN","frontmatter":{"title":"c++2.变量声明和定义","order":2,"category":["c++"],"description":"概念 在C++中，变量声明和定义： 变量声明（Variable Declaration）： 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如： 需要注意的是extern 不能在main函数中，且需要在外部赋值才能在main函数中修改。 变量定义（Variable Definition）： 变量定义是指在程序中为变量分配实际的内存空间，同时也可...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/2-Variable%20Declaration_%20Definition.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++2.变量声明和定义"}],["meta",{"property":"og:description","content":"概念 在C++中，变量声明和定义： 变量声明（Variable Declaration）： 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如： 需要注意的是extern 不能在main函数中，且需要在外部赋值才能在main函数中修改。 变量定义（Variable Definition）： 变量定义是指在程序中为变量分配实际的内存空间，同时也可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-22T18:06:40.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-22T18:06:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++2.变量声明和定义\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-22T18:06:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"易混淆","slug":"易混淆","link":"#易混淆","children":[]}]}],"git":{"createdTime":1700738130000,"updatedTime":1705946800000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":2},{"name":"admin","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":2.04,"words":613},"filePathRelative":"language/cpp/BaseGuide[基础概念]/2-Variable Declaration& Definition.md","localizedDate":"2023年11月23日","excerpt":"\\n<h2>概念</h2>\\n<blockquote>\\n<p>在C++中，变量声明和定义：</p>\\n</blockquote>\\n<p><strong>变量声明（Variable Declaration）：</strong> 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">extern</span> <span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">//这是一个变量声明：（通过使用extern关键字，可以声明变量名而不定义它）</span>\\n</code></pre></div>","autoDesc":true}')}}]);