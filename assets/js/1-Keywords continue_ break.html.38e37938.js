"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[9847],{6611:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>i,data:()=>r});var e=s(20641);const t=s.p+"assets/img/break.be5eca65.jpg",o=s.p+"assets/img/continue.8a19e78d.png",p=(0,e.Fv)('<h2 id="实践" tabindex="-1"><a class="header-anchor" href="#实践"><span>实践</span></a></h2><h3 id="_1-break-关键字" tabindex="-1"><a class="header-anchor" href="#_1-break-关键字"><span>1. <strong><code>break</code> 关键字：</strong></span></a></h3><figure><img src="'+t+'" alt="整个蓝图块的过程为for循环" tabindex="0" loading="lazy"><figcaption>整个蓝图块的过程为for循环</figcaption></figure><ul><li><p><strong>作用：</strong> 当 <code>break</code> 关键字出现在循环体内时，它会立即终止当前循环，跳出循环体，不再执行循环内尚未执行完的语句。</p></li><li><p><strong>用法：</strong> 通常用于在满足某个条件时提前结束循环，无论循环条件是否达到结束条件。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// 当 i 等于 5 时，终止循环</span>\n  <span class="token punctuation">}</span>\n  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码中，当 <code>i</code> 等于 5 时，<code>break</code> 将立即终止循环。</p></li></ul><h3 id="_2-continue-关键字" tabindex="-1"><a class="header-anchor" href="#_2-continue-关键字"><span>2. <strong><code>continue</code> 关键字：</strong></span></a></h3><figure><img src="'+o+'" alt="整个蓝图块的过程为for循环" tabindex="0" loading="lazy"><figcaption>整个蓝图块的过程为for循环</figcaption></figure><ul><li><p><strong>作用：</strong> 当 <code>continue</code> 关键字出现在循环体内时，它会跳过当前迭代中剩余的代码，直接进入下一次循环迭代。</p></li><li><p><strong>用法：</strong> 通常用于在满足某个条件时跳过当前迭代，继续进行下一次迭代。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// 当 i 等于 5 时，跳过当前迭代，进入下一次迭代</span>\n  <span class="token punctuation">}</span>\n  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码中，当 <code>i</code> 等于 5 时，<code>continue</code> 将跳过 <code>i == 5</code> 这一次的输出，直接进行下一次循环迭代。</p></li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p><code>break</code> 用于终止整个循环，而 <code>continue</code> 用于终止当前迭代并进入下一次迭代。</p>',9),c={},i=(0,s(66262).A)(c,[["render",function(n,a){const s=(0,e.g2)("chatmessage");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.bF)(s,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40},{default:(0,e.k6)((()=>[(0,e.eW)(" `continue` 和 `break` 是两个在 C++ 中用于控制循环流程的关键字，有什么区别？ ")])),_:1}),p])}]]),r=JSON.parse('{"path":"/language/cpp/keywords_%E5%85%B3%E9%94%AE%E5%AD%97_/1-Keywords%20continue_%20break.html","title":"c++1.continue|break","lang":"zh-CN","frontmatter":{"title":"c++1.continue|break","order":1,"category":["c++"],"description":"实践 1. break 关键字： 整个蓝图块的过程为for循环整个蓝图块的过程为for循环 作用： 当 break 关键字出现在循环体内时，它会立即终止当前循环，跳出循环体，不再执行循环内尚未执行完的语句。 用法： 通常用于在满足某个条件时提前结束循环，无论循环条件是否达到结束条件。 上述代码中，当 i 等于 5 时，break 将立即终止循环。 2....","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/keywords_%E5%85%B3%E9%94%AE%E5%AD%97_/1-Keywords%20continue_%20break.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++1.continue|break"}],["meta",{"property":"og:description","content":"实践 1. break 关键字： 整个蓝图块的过程为for循环整个蓝图块的过程为for循环 作用： 当 break 关键字出现在循环体内时，它会立即终止当前循环，跳出循环体，不再执行循环内尚未执行完的语句。 用法： 通常用于在满足某个条件时提前结束循环，无论循环条件是否达到结束条件。 上述代码中，当 i 等于 5 时，break 将立即终止循环。 2...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T22:07:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-02T22:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++1.continue|break\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-02T22:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[{"level":3,"title":"1. break 关键字：","slug":"_1-break-关键字","link":"#_1-break-关键字","children":[]},{"level":3,"title":"2. continue 关键字：","slug":"_2-continue-关键字","link":"#_2-continue-关键字","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1700738130000,"updatedTime":1704233233000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":1},{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":373},"filePathRelative":"language/cpp/keywords[关键字]/1-Keywords continue& break.md","localizedDate":"2023年11月23日","excerpt":"\\n<h2>实践</h2>\\n<h3>1. <strong><code>break</code> 关键字：</strong></h3>\\n<figure><figcaption>整个蓝图块的过程为for循环</figcaption></figure>\\n<ul>\\n<li>\\n<p><strong>作用：</strong> 当 <code>break</code> 关键字出现在循环体内时，它会立即终止当前循环，跳出循环体，不再执行循环内尚未执行完的语句。</p>\\n</li>\\n<li>\\n<p><strong>用法：</strong> 通常用于在满足某个条件时提前结束循环，无论循环条件是否达到结束条件。</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">==</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 当 i 等于 5 时，终止循环</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> i <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div><p>上述代码中，当 <code>i</code> 等于 5 时，<code>break</code> 将立即终止循环。</p>\\n</li>\\n</ul>","autoDesc":true}')}}]);