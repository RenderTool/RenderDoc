"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[7903],{34159:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>F,data:()=>U});var t=s(20641);const e=s.p+"assets/img/load001.462f5567.png",p=s.p+"assets/img/loadassets.8ca6f984.png",o=s.p+"assets/img/uobject.b82bd740.png",c=s.p+"assets/img/slih.365988a5.png",l=s.p+"assets/img/AyscLoad.f4925daf.png",i=s.p+"assets/img/load002.a2417356.png",u=(0,t.Fv)('<h2 id="异步" tabindex="-1"><a class="header-anchor" href="#异步"><span>异步</span></a></h2><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">//全局Handle</span>\n<span class="token keyword">private</span><span class="token operator">:</span>\n\tTSharedPtr<span class="token operator">&lt;</span>FStreamableHandle<span class="token operator">&gt;</span> Handle<span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token class-name">UDataDefinitionManager</span><span class="token double-colon punctuation">::</span><span class="token function">AsyncCollectionDefinitions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tTArray<span class="token operator">&lt;</span>FPrimaryAssetId<span class="token operator">&gt;</span> AssetIds<span class="token punctuation">;</span>\n\t<span class="token keyword">const</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> LoadBundles<span class="token punctuation">;</span>\n\t\n\t<span class="token class-name">UKismetSystemLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">GetPrimaryAssetIdList</span><span class="token punctuation">(</span><span class="token function">FPrimaryAssetType</span><span class="token punctuation">(</span>CollectionDefinitionTypeName<span class="token punctuation">)</span><span class="token punctuation">,</span> AssetIds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>AssetIds<span class="token punctuation">.</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;No assets found for type %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span>CollectionDefinitionTypeName<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token function">UnloadAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\tUAssetManager<span class="token operator">&amp;</span> Manager <span class="token operator">=</span> <span class="token class-name">UAssetManager</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">const</span> FStreamableDelegate<span class="token operator">&amp;</span> NewDelegate <span class="token operator">=</span> <span class="token class-name">FStreamableDelegate</span><span class="token double-colon punctuation">::</span><span class="token function">CreateUObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>UDataDefinitionManager<span class="token double-colon punctuation">::</span>CollectionCompleted<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\tHandle <span class="token operator">=</span> Manager<span class="token punctuation">.</span><span class="token function">LoadPrimaryAssets</span><span class="token punctuation">(</span>AssetIds<span class="token punctuation">,</span>LoadBundles<span class="token punctuation">,</span>NewDelegate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">UDataDefinitionManager</span><span class="token double-colon punctuation">::</span><span class="token function">CollectionCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tTArray<span class="token operator">&lt;</span>UObject<span class="token operator">*</span><span class="token operator">&gt;</span> Loaded<span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> UAssetManager<span class="token operator">&amp;</span> Manager <span class="token operator">=</span> <span class="token class-name">UAssetManager</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">//也可以直接</span>\n\tManager<span class="token punctuation">.</span><span class="token function">GetPrimaryAssetObjectList</span><span class="token punctuation">(</span><span class="token function">FPrimaryAssetType</span><span class="token punctuation">(</span>CollectionDefinitionTypeName<span class="token punctuation">)</span><span class="token punctuation">,</span>Loaded<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Handle<span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\tHandle<span class="token operator">-&gt;</span><span class="token function">GetLoadedAssets</span><span class="token punctuation">(</span>Loaded<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>Loaded<span class="token punctuation">.</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\tCachedFragments<span class="token punctuation">.</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">for</span> <span class="token punctuation">(</span>UObject<span class="token operator">*</span> LoadedObject <span class="token operator">:</span> Loaded<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> DataDefinition <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>UDataDefinition<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>LoadedObject<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\tCachedFragments<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>DataDefinition<span class="token operator">-&gt;</span>Name<span class="token punctuation">,</span>DataDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\tOnDefinitionsLoaded<span class="token punctuation">.</span><span class="token function">Broadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),r=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),k=(0,t.Lk)("h3",{id:"问题",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#问题"},[(0,t.Lk)("span",null,"问题")])],-1),d=(0,t.Lk)("p",null,[(0,t.eW)("Handle->GetLoadedAsset() 返回加载完成的资产，已经是实例化的对象，它返回都是 "),(0,t.Lk)("code",null,"uobject"),(0,t.eW)("。")],-1),m=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),g=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),f=(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,"2025/0322 补充")],-1),b=(0,t.Lk)("ol",null,[(0,t.Lk)("li",null,[(0,t.eW)("使用的类型反射宏UPROPERTY(Instanced) ,必须标记为"),(0,t.Lk)("code",null,"Instanced")]),(0,t.Lk)("li",null,[(0,t.eW)("对应的对象反射宏UCLASS(DefaultToInstanced, EditInlineNew, Abstract),必须标记为"),(0,t.Lk)("code",null,"EditInlineNew")]),(0,t.Lk)("li",null,"注意类中的SoftPtr需要手动异步加载")],-1),v=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),y=(0,t.Fv)('<h2 id="同步" tabindex="-1"><a class="header-anchor" href="#同步"><span>同步</span></a></h2><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>',3),h={href:"https://www.cnblogs.com/shiroe/p/14710066.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://docs.unrealengine.com/5.3/zh-CN/asynchronous-asset-loading-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.bilibili.com/video/BV1Mr4y1A7nZ/?t=1h03m33s&vd_source=fc61eb54bf3245afbff2be6b8c1ebfc2",target:"_blank",rel:"noopener noreferrer"},D={href:"https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc",target:"_blank",rel:"noopener noreferrer"},w={href:"https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html",target:"_blank",rel:"noopener noreferrer"},T={},F=(0,s(66262).A)(T,[["render",function(n,a){const s=(0,t.g2)("chatmessage"),e=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 资源加载的几种写法 ")])),_:1}),u,(0,t.bF)(s,{avatar:"../../assets/emoji/ybk.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 对应的蓝图节点 ")])),_:1}),r,k,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 为什么资产加载后不需要实例化？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[d])),_:1}),m,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 可是有时候我们会在这种资产中配置对象，这个对象为什么也被实例化了？ ")])),_:1}),g,f,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 定义的类中需要满足以下条件： ")])),_:1}),b,v,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 6666 ")])),_:1}),y,(0,t.Lk)("p",null,[(0,t.Lk)("a",h,[(0,t.eW)("https://www.cnblogs.com/shiroe/p/14710066.html"),(0,t.bF)(e)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",L,[(0,t.eW)("官方文档"),(0,t.bF)(e)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",A,[(0,t.eW)("官方直播"),(0,t.bF)(e)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",D,[(0,t.eW)("https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc"),(0,t.bF)(e)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",w,[(0,t.eW)("https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html"),(0,t.bF)(e)])])])}]]),U=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/15-LoadAsset.html","title":"F15.AssetLoad的几种方法","lang":"zh-CN","frontmatter":{"title":"F15.AssetLoad的几种方法","order":15,"category":["u++"],"description":"异步 问题 2025/0322 补充 使用的类型反射宏UPROPERTY(Instanced) ,必须标记为Instanced 对应的对象反射宏UCLASS(DefaultToInstanced, EditInlineNew, Abstract),必须标记为EditInlineNew 注意类中的SoftPtr需要手动异步加载 同步 参考文档 https...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/15-LoadAsset.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F15.AssetLoad的几种方法"}],["meta",{"property":"og:description","content":"异步 问题 2025/0322 补充 使用的类型反射宏UPROPERTY(Instanced) ,必须标记为Instanced 对应的对象反射宏UCLASS(DefaultToInstanced, EditInlineNew, Abstract),必须标记为EditInlineNew 注意类中的SoftPtr需要手动异步加载 同步 参考文档 https..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-06T12:03:46.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-04-06T12:03:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F15.AssetLoad的几种方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-06T12:03:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"异步","slug":"异步","link":"#异步","children":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]}]},{"level":2,"title":"同步","slug":"同步","link":"#同步","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1704872551000,"updatedTime":1743941026000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":5}]},"readingTime":{"minutes":1.26,"words":377},"filePathRelative":"unreal/function[函数]/15-LoadAsset.md","localizedDate":"2024年1月10日","excerpt":"\\n<h2>异步</h2>\\n<figure><figcaption></figcaption></figure>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">//全局Handle</span>\\n<span class=\\"token keyword\\">private</span><span class=\\"token operator\\">:</span>\\n\\tTSharedPtr<span class=\\"token operator\\">&lt;</span>FStreamableHandle<span class=\\"token operator\\">&gt;</span> Handle<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">UDataDefinitionManager</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">AsyncCollectionDefinitions</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tTArray<span class=\\"token operator\\">&lt;</span>FPrimaryAssetId<span class=\\"token operator\\">&gt;</span> AssetIds<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">const</span> TArray<span class=\\"token operator\\">&lt;</span>FName<span class=\\"token operator\\">&gt;</span> LoadBundles<span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token class-name\\">UKismetSystemLibrary</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">GetPrimaryAssetIdList</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">FPrimaryAssetType</span><span class=\\"token punctuation\\">(</span>CollectionDefinitionTypeName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> AssetIds<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>AssetIds<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">IsEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">UE_LOG</span><span class=\\"token punctuation\\">(</span>LogTemp<span class=\\"token punctuation\\">,</span> Warning<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"No assets found for type %s\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">*</span>CollectionDefinitionTypeName<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ToString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\n\\t<span class=\\"token function\\">UnloadAssets</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tUAssetManager<span class=\\"token operator\\">&amp;</span> Manager <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UAssetManager</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token keyword\\">const</span> FStreamableDelegate<span class=\\"token operator\\">&amp;</span> NewDelegate <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">FStreamableDelegate</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">CreateUObject</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>UDataDefinitionManager<span class=\\"token double-colon punctuation\\">::</span>CollectionCompleted<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tHandle <span class=\\"token operator\\">=</span> Manager<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">LoadPrimaryAssets</span><span class=\\"token punctuation\\">(</span>AssetIds<span class=\\"token punctuation\\">,</span>LoadBundles<span class=\\"token punctuation\\">,</span>NewDelegate<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">UDataDefinitionManager</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">CollectionCompleted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tTArray<span class=\\"token operator\\">&lt;</span>UObject<span class=\\"token operator\\">*</span><span class=\\"token operator\\">&gt;</span> Loaded<span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">const</span> UAssetManager<span class=\\"token operator\\">&amp;</span> Manager <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UAssetManager</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token comment\\">//也可以直接</span>\\n\\tManager<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetPrimaryAssetObjectList</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">FPrimaryAssetType</span><span class=\\"token punctuation\\">(</span>CollectionDefinitionTypeName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>Loaded<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>Handle<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">IsValid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\tHandle<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">GetLoadedAssets</span><span class=\\"token punctuation\\">(</span>Loaded<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>Loaded<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">IsEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tCachedFragments<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Empty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>UObject<span class=\\"token operator\\">*</span> LoadedObject <span class=\\"token operator\\">:</span> Loaded<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">auto</span> DataDefinition <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">Cast</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UDataDefinition<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>LoadedObject<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\tCachedFragments<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>DataDefinition<span class=\\"token operator\\">-&gt;</span>Name<span class=\\"token punctuation\\">,</span>DataDefinition<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tOnDefinitionsLoaded<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Broadcast</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}')}}]);