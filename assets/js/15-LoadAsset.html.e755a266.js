"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[7903],{54956:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>A,data:()=>D});var t=s(20641);const e=s.p+"assets/img/load001.462f5567.png",o=s.p+"assets/img/loadassets.8ca6f984.png",p=s.p+"assets/img/uobject.b82bd740.png",c=s.p+"assets/img/slih.365988a5.png",l=s.p+"assets/img/pt.1fc53df1.png",i=s.p+"assets/img/print5.91328d9b.png",u=s.p+"assets/img/load002.a2417356.png",r=(0,t.Lk)("h2",{id:"前置",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#前置"},[(0,t.Lk)("span",null,"前置")])],-1),d=(0,t.Lk)("code",null,"类和对象",-1),k=(0,t.Lk)("h2",{id:"异步",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#异步"},[(0,t.Lk)("span",null,"异步")])],-1),m=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),g=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">//定义句柄</span>\nTSharedPtr<span class="token operator">&lt;</span>FStreamableHandle<span class="token operator">&gt;</span> Handle<span class="token punctuation">;</span>\n\nTSoftObjectPtr<span class="token operator">&lt;</span>UInventorySubConfig<span class="token operator">&gt;</span> SubConfig<span class="token punctuation">;</span><span class="token comment">//如果是软引用，需要先ToSoftObjectPath()，使用需要先ToSoftObjectPath重载版本</span>\n\n<span class="token keyword">const</span> UInventoryTotalConfig<span class="token operator">*</span> SubConfig<span class="token punctuation">;</span><span class="token comment">//如果是对象指针，可以直接放进去,会有对应的重载版本</span>\n\n<span class="token comment">//委托</span>\nFStreamableDelegate SubConfigLoadDelegate <span class="token operator">=</span> <span class="token class-name">FStreamableDelegate</span><span class="token double-colon punctuation">::</span><span class="token function">CreateUObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>你的类<span class="token double-colon punctuation">::</span>回调函数<span class="token punctuation">,</span> Index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//异步加载</span>\nHandle <span class="token operator">=</span> <span class="token class-name">UAssetManager</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetStreamableManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RequestAsyncLoad</span><span class="token punctuation">(</span>SubConfig<span class="token punctuation">,</span> SubConfigLoadDelegate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nHandle<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否有效</span>\nHandle<span class="token operator">-&gt;</span><span class="token function">HasLoadCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//进度 </span>\nHandle<span class="token punctuation">.</span><span class="token function">GetLoadedAsset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取资源</span>\nHandle<span class="token punctuation">.</span><span class="token function">ReleaseHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//释放句柄</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),b=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),h=(0,t.Lk)("h3",{id:"问题",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#问题"},[(0,t.Lk)("span",null,"问题")])],-1),f=(0,t.Lk)("p",null,[(0,t.eW)("Handle->GetLoadedAsset() 返回加载完成的资产，已经是实例化的对象，它返回都是 "),(0,t.Lk)("code",null,"uobject"),(0,t.eW)("。")],-1),v=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),L=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),y=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),S=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),x=(0,t.Fv)('<h2 id="同步" tabindex="-1"><a class="header-anchor" href="#同步"><span>同步</span></a></h2><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h2>',3),C={href:"https://www.cnblogs.com/shiroe/p/14710066.html",target:"_blank",rel:"noopener noreferrer"},F={href:"https://docs.unrealengine.com/5.3/zh-CN/asynchronous-asset-loading-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.bilibili.com/video/BV1Mr4y1A7nZ/?t=1h03m33s&vd_source=fc61eb54bf3245afbff2be6b8c1ebfc2",target:"_blank",rel:"noopener noreferrer"},_={href:"https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc",target:"_blank",rel:"noopener noreferrer"},j={href:"https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html",target:"_blank",rel:"noopener noreferrer"},w={},A=(0,s(66262).A)(w,[["render",function(n,a){const s=(0,t.g2)("chatmessage"),e=(0,t.g2)("RouteLink"),o=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 资源加载的几种写法 ")])),_:1}),r,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.Lk)("p",null,[(0,t.eW)("食用本文建议先了解"),d,(0,t.eW)("的介绍！"),(0,t.bF)(e,{to:"/unreal/function%5B%E5%87%BD%E6%95%B0%5D/10-PTRINUE.html"},{default:(0,t.k6)((()=>[(0,t.eW)("直通车")])),_:1})])])),_:1}),k,m,(0,t.bF)(s,{avatar:"../../assets/emoji/ybk.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 这里主要记录一下UAssetManager的异步加载，异步加载一定要检查指针！对于高频加载操作千万别自己释放句柄！因为异步玩玩不是实时的，容易出现线程安全问题！ ")])),_:1}),g,(0,t.bF)(s,{avatar:"../../assets/emoji/ybk.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 对应的蓝图节点 ")])),_:1}),b,h,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 为什么资产加载后不需要实例化？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[f])),_:1}),v,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 可是有时候我们会在这种资产中配置对象，这个对象为什么也被实例化了？ ")])),_:1}),L,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 你这个添加行为其实就是UE编辑器的实例化行为。比方说我们构造函数的ID是0，然后去蓝图中重写。 ")])),_:1}),y,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 如果说加载资产后才实例这个对象应该打印0，但实际是根据你蓝图中配置的5,这也验证了你加载资产是你蓝图派生的资产。 ")])),_:1}),S,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 难怪有时候我直接派生UObject的构造函数中打印会报错，因为引擎启动就加载所有UObject类，GEngine可能没实例化就调用导致指针悬挂问题。 ")])),_:1}),x,(0,t.Lk)("p",null,[(0,t.Lk)("a",C,[(0,t.eW)("https://www.cnblogs.com/shiroe/p/14710066.html"),(0,t.bF)(o)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",F,[(0,t.eW)("官方文档"),(0,t.bF)(o)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",W,[(0,t.eW)("官方直播"),(0,t.bF)(o)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",_,[(0,t.eW)("https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc"),(0,t.bF)(o)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",j,[(0,t.eW)("https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html"),(0,t.bF)(o)])])])}]]),D=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/15-LoadAsset.html","title":"F15.AssetLoad的几种方法","lang":"zh-CN","frontmatter":{"title":"F15.AssetLoad的几种方法","order":15,"category":["u++"],"description":"前置 异步 问题 同步 参考文档 https://www.cnblogs.com/shiroe/p/14710066.html 官方文档 官方直播 https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc https://jdelezenne.github.io/Codex/UE4/Assets%20Stre...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/15-LoadAsset.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F15.AssetLoad的几种方法"}],["meta",{"property":"og:description","content":"前置 异步 问题 同步 参考文档 https://www.cnblogs.com/shiroe/p/14710066.html 官方文档 官方直播 https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc https://jdelezenne.github.io/Codex/UE4/Assets%20Stre..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-11T15:49:02.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-11T15:49:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F15.AssetLoad的几种方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-11T15:49:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"前置","slug":"前置","link":"#前置","children":[]},{"level":2,"title":"异步","slug":"异步","link":"#异步","children":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]}]},{"level":2,"title":"同步","slug":"同步","link":"#同步","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1704872551000,"updatedTime":1704988142000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":3}]},"readingTime":{"minutes":1.93,"words":578},"filePathRelative":"unreal/function[函数]/15-LoadAsset.md","localizedDate":"2024年1月10日","excerpt":"\\n<h2>前置</h2>\\n\\n<h2>异步</h2>\\n<figure><figcaption></figcaption></figure>\\n\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">//定义句柄</span>\\nTSharedPtr<span class=\\"token operator\\">&lt;</span>FStreamableHandle<span class=\\"token operator\\">&gt;</span> Handle<span class=\\"token punctuation\\">;</span>\\n\\nTSoftObjectPtr<span class=\\"token operator\\">&lt;</span>UInventorySubConfig<span class=\\"token operator\\">&gt;</span> SubConfig<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//如果是软引用，需要先ToSoftObjectPath()，使用需要先ToSoftObjectPath重载版本</span>\\n\\n<span class=\\"token keyword\\">const</span> UInventoryTotalConfig<span class=\\"token operator\\">*</span> SubConfig<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//如果是对象指针，可以直接放进去,会有对应的重载版本</span>\\n\\n<span class=\\"token comment\\">//委托</span>\\nFStreamableDelegate SubConfigLoadDelegate <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">FStreamableDelegate</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">CreateUObject</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>你的类<span class=\\"token double-colon punctuation\\">::</span>回调函数<span class=\\"token punctuation\\">,</span> Index<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">//异步加载</span>\\nHandle <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UAssetManager</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetStreamableManager</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">RequestAsyncLoad</span><span class=\\"token punctuation\\">(</span>SubConfig<span class=\\"token punctuation\\">,</span> SubConfigLoadDelegate<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\nHandle<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isValid</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//是否有效</span>\\nHandle<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">HasLoadCompleted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//进度 </span>\\nHandle<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetLoadedAsset</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取资源</span>\\nHandle<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ReleaseHandle</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//释放句柄</span>\\n\\n</code></pre></div>","autoDesc":true}')}}]);