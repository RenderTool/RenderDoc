"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[9549],{25169:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>d,data:()=>r});var e=s(20641);const t=(0,e.Lk)("h3",{id:"map-mutimap",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#map-mutimap"},[(0,e.Lk)("span",null,"Map|MutiMap")])],-1),p=(0,e.Lk)("p",null,[(0,e.Lk)("code",null,"std::map"),(0,e.eW)(" 是 C++ 标准库中的关联容器，它提供了"),(0,e.Lk)("code",null,"key"),(0,e.eW)("键-"),(0,e.Lk)("code",null,"value"),(0,e.eW)("值对的存储和检索功能。每个键-值对在 "),(0,e.Lk)("code",null,"std::map"),(0,e.eW)(" 中被称为一个元素。关联容器的一个重要特性是，它们按照键的顺序进行有序存储。")],-1),o=(0,e.Lk)("p",null,[(0,e.Lk)("code",null,"MutiMap"),(0,e.eW)("可以有重复的"),(0,e.Lk)("code",null,"key"),(0,e.eW)("值")],-1),c=(0,e.Fv)('<h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义：</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span>\n\nstd<span class="token double-colon punctuation">::</span>map<span class="token operator">&lt;</span>KeyType<span class="token punctuation">,</span> ValueType<span class="token operator">&gt;</span> myMap<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>KeyType</code> 是键的类型，<code>ValueType</code> 是值的类型。</li></ul><h3 id="主要操作" tabindex="-1"><a class="header-anchor" href="#主要操作"><span>主要操作：</span></a></h3><ol><li><p><strong>插入元素：</strong> 使用 <code>insert</code> 函数或数组下标运算符 <code>[]</code> 插入元素。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>myMap<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">make_pair</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 或者</span>\nmyMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>访问元素：</strong> 使用键访问元素。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>ValueType value <span class="token operator">=</span> myMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>删除元素：</strong> 使用 <code>erase</code> 函数删除指定键的元素。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>myMap<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>查找元素：</strong> 使用 <code>find</code> 函数查找指定键的元素。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">auto</span> it <span class="token operator">=</span> myMap<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">!=</span> myMap<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 元素找到</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>迭代：</strong> 使用迭代器对 <code>std::map</code> 中的元素进行遍历。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> myMap<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> myMap<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    KeyType key <span class="token operator">=</span> it<span class="token operator">-&gt;</span>first<span class="token punctuation">;</span>\n    ValueType value <span class="token operator">=</span> it<span class="token operator">-&gt;</span>second<span class="token punctuation">;</span>\n    <span class="token comment">// 处理键值对</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="与-std-pair-的联系" tabindex="-1"><a class="header-anchor" href="#与-std-pair-的联系"><span>与 <code>std::pair</code> 的联系：</span></a></h3><p><code>std::pair</code> 通常用于表示键-值对，并且在 <code>std::map</code> 中的元素实际上就是 <code>std::pair</code> 类型的对象。每个元素都是一个由键和值组成的有序对。</p>',7),l=(0,e.Lk)("p",null,[(0,e.eW)("例如，使用 "),(0,e.Lk)("code",null,"std::pair"),(0,e.eW)(" 来插入元素到 "),(0,e.Lk)("code",null,"std::map"),(0,e.eW)("：")],-1),i=(0,e.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    std<span class="token double-colon punctuation">::</span>map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&gt;</span> myMap<span class="token punctuation">;</span>\n\n    <span class="token comment">// 使用 std::pair 插入元素</span>\n    myMap<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">make_pair</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;One&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    myMap<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">pair</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> std<span class="token double-colon punctuation">::</span>string<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;Two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 访问元素</span>\n    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Value corresponding to key 1: &quot;</span> <span class="token operator">&lt;&lt;</span> myMap<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u={},d=(0,s(66262).A)(u,[["render",function(n,a){const s=(0,e.g2)("chatmessage");return(0,e.uX)(),(0,e.CE)("div",null,[t,(0,e.bF)(s,{avatar:"../../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[p,o])),_:1}),c,(0,e.bF)(s,{avatar:"../../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,e.k6)((()=>[l])),_:1}),i])}]]),r=JSON.parse('{"path":"/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/11-Map.html","title":"c++11.Map/MutiMap容器","lang":"zh-CN","frontmatter":{"title":"c++11.Map/MutiMap容器","order":11,"category":["c++"],"description":"Map|MutiMap 定义： KeyType 是键的类型，ValueType 是值的类型。 主要操作： 插入元素： 使用 insert 函数或数组下标运算符 [] 插入元素。 访问元素： 使用键访问元素。 删除元素： 使用 erase 函数删除指定键的元素。 查找元素： 使用 find 函数查找指定键的元素。 迭代： 使用迭代器对 std::map ...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/11-Map.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++11.Map/MutiMap容器"}],["meta",{"property":"og:description","content":"Map|MutiMap 定义： KeyType 是键的类型，ValueType 是值的类型。 主要操作： 插入元素： 使用 insert 函数或数组下标运算符 [] 插入元素。 访问元素： 使用键访问元素。 删除元素： 使用 erase 函数删除指定键的元素。 查找元素： 使用 find 函数查找指定键的元素。 迭代： 使用迭代器对 std::map ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T22:07:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-02T22:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++11.Map/MutiMap容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-02T22:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"Map|MutiMap","slug":"map-mutimap","link":"#map-mutimap","children":[]},{"level":3,"title":"定义：","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"主要操作：","slug":"主要操作","link":"#主要操作","children":[]},{"level":3,"title":"与 std::pair 的联系：","slug":"与-std-pair-的联系","link":"#与-std-pair-的联系","children":[]}],"git":{"createdTime":1703335047000,"updatedTime":1704233233000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"language/cpp/stl[标准模板]/11-Map.md","localizedDate":"2023年12月23日","excerpt":"<h3>Map|MutiMap</h3>\\n\\n<h3>定义：</h3>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;map&gt;</span></span>\\n\\nstd<span class=\\"token double-colon punctuation\\">::</span>map<span class=\\"token operator\\">&lt;</span>KeyType<span class=\\"token punctuation\\">,</span> ValueType<span class=\\"token operator\\">&gt;</span> myMap<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);