"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[8842],{24309:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>C,data:()=>T});var t=s(20641);const e=s.p+"assets/img/dt004.834295c6.jpg",p=s.p+"assets/img/dt001.51db455b.jpg",o=s.p+"assets/img/dt002.b79e5fe2.jpg",i=s.p+"assets/img/dt003.32ff3391.png",l=s.p+"assets/img/dt005.9afb16e0.jpg",c=(0,t.Lk)("h2",{id:"detailview",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#detailview"},[(0,t.Lk)("span",null,[(0,t.Lk)("strong",null,"DetailView")])])],-1),r=(0,t.Lk)("p",null,[(0,t.Lk)("code",null,"DetailView"),(0,t.eW)(" 是细节面板的可视化模块")],-1),u=(0,t.Fv)('<figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h2><h3 id="_1-获取-propertyeditor-模块的实例" tabindex="-1"><a class="header-anchor" href="#_1-获取-propertyeditor-模块的实例"><span>1. 获取 PropertyEditor 模块的实例</span></a></h3>',3),d=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>FPropertyEditorModule<span class="token operator">&amp;</span> PropertyEditorModule <span class="token operator">=</span> FModuleManager<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">GetModuleChecked</span><span class="token generic class-name"><span class="token operator">&lt;</span>FPropertyEditorModule<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n    <span class="token string">&quot;PropertyEditor&quot;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-注册自定义类的细节视图布局-customized-details-view-layout" tabindex="-1"><a class="header-anchor" href="#_2-注册自定义类的细节视图布局-customized-details-view-layout"><span>2.注册自定义类的细节视图布局（customized details view layout）</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>PropertyEditorModule<span class="token punctuation">.</span><span class="token function">RegisterCustomClassLayout</span><span class="token punctuation">(</span>\n    <span class="token class-name">UDataMatching</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 获取 UDataMatching 类的名称</span>\n    <span class="token class-name">FOnGetDetailCustomizationInstance</span><span class="token double-colon punctuation">::</span><span class="token function">CreateStatic</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>FDataMatchingDetailsView<span class="token double-colon punctuation">::</span>MakeInstance<span class="token punctuation">)</span> <span class="token comment">// 注册自定义的细节视图</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),k=(0,t.Lk)("p",null,[(0,t.eW)("这里的是"),(0,t.Lk)("code",null,"FDataMatchingDetailsView"),(0,t.eW)("是什么?")],-1),v=(0,t.Lk)("p",null,[(0,t.eW)("是自定义继承自"),(0,t.Lk)("code",null,"IDetailsView"),(0,t.eW)("的细节视图，后面会详细说明。")],-1),m=(0,t.Fv)('<h3 id="_3-创建一个-fdetailsviewargs-对象来配置细节视图-detail-view-参数" tabindex="-1"><a class="header-anchor" href="#_3-创建一个-fdetailsviewargs-对象来配置细节视图-detail-view-参数"><span>3. 创建一个 FDetailsViewArgs 对象来配置细节视图（Detail View）参数</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>FDetailsViewArgs DetailsViewArgs<span class="token punctuation">;</span>\nDetailsViewArgs<span class="token punctuation">.</span>bAllowSearch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// 禁止搜索框功能，即不允许在属性面板中进行搜索</span>\nDetailsViewArgs<span class="token punctuation">.</span>bShowObjectLabel <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 禁用对象标签的显示，通常是对象类型名称</span>\nDetailsViewArgs<span class="token punctuation">.</span>bUpdatesFromSelection <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 禁止从选择中更新属性视图，避免用户选择不同对象时自动更新面板</span>\nDetailsViewArgs<span class="token punctuation">.</span>NameAreaSettings <span class="token operator">=</span> FDetailsViewArgs<span class="token double-colon punctuation">::</span>HideNameArea<span class="token punctuation">;</span> <span class="token comment">// 隐藏属性名区域，可能不希望显示属性名称</span>\nDetailsViewArgs<span class="token punctuation">.</span>bForceHiddenPropertyVisibility <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 强制显示所有属性，即使这些属性被标记为隐藏</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-创建细节面板实例" tabindex="-1"><a class="header-anchor" href="#_4-创建细节面板实例"><span>4. 创建细节面板实例</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>TSharedPtr<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">IDetailsView</span><span class="token operator">&gt;</span> DetailsView<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\n<span class="token comment">// 使用上面配置的参数创建 Details View（详细视图），并返回其指针</span>\nDetailsView <span class="token operator">=</span> PropertyEditorModule<span class="token punctuation">.</span><span class="token function">CreateDetailView</span><span class="token punctuation">(</span>DetailsViewArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-在细节面板中要显示属性的对象" tabindex="-1"><a class="header-anchor" href="#_5-在细节面板中要显示属性的对象"><span>5. 在细节面板中要显示属性的对象</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>DetailsView<span class="token operator">-&gt;</span><span class="token function">SetObject</span><span class="token punctuation">(</span>DataMatching<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-释放资源" tabindex="-1"><a class="header-anchor" href="#_6-释放资源"><span>6.释放资源</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\nFPropertyEditorModule<span class="token operator">&amp;</span> PropertyEditorModule <span class="token operator">=</span> FModuleManager<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">LoadModuleChecked</span><span class="token generic class-name"><span class="token operator">&lt;</span>FPropertyEditorModule<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n<span class="token string">&quot;PropertyEditor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nPropertyEditorModule<span class="token punctuation">.</span><span class="token function">UnregisterCustomClassLayout</span><span class="token punctuation">(</span><span class="token class-name">UDataMatching</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-自定义显示-隐藏属性" tabindex="-1"><a class="header-anchor" href="#_7-自定义显示-隐藏属性"><span>7. 自定义显示|隐藏属性</span></a></h3>',10),g=(0,t.Lk)("p",null,[(0,t.eW)("编辑器内的"),(0,t.Lk)("code",null,"DetailsView"),(0,t.eW)(" 本质是UWidget,然后对"),(0,t.Lk)("code",null,"IDetailsView"),(0,t.eW)("的一个封装。")],-1),b=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),h=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),w=(0,t.Fv)('<figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">static</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> CategoriesToShow<span class="token punctuation">;</span>\n<span class="token keyword">static</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> PropertiesToShow<span class="token punctuation">;</span>\nTArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> FDataMatchingDetailsView<span class="token double-colon punctuation">::</span>CategoriesToShow<span class="token punctuation">;</span>\nTArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> FDataMatchingDetailsView<span class="token double-colon punctuation">::</span>PropertiesToShow<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),y=(0,t.Lk)("p",null,[(0,t.eW)("而我们自定义的"),(0,t.Lk)("code",null,"IDetailCustomization"),(0,t.eW)("本质还是利用单例思想。")],-1),f=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;CoreMinimal.h&quot;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;IDetailCustomization.h&quot;</span></span>\n\n<span class="token keyword">class</span> <span class="token class-name">IDetailLayoutBuilder</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">IPropertyHandle</span><span class="token punctuation">;</span>\n\n<span class="token comment">/** DataSystem Editor public interface */</span>\n<span class="token keyword">class</span> <span class="token class-name">FDataMatchingDetailsView</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">IDetailCustomization</span></span>\n<span class="token punctuation">{</span>\n\n<span class="token keyword">public</span><span class="token operator">:</span>\n\t<span class="token comment">/** Makes a new instance of this detail layout class for a specific detail view requesting it */</span>\n\t<span class="token keyword">static</span> TSharedRef<span class="token operator">&lt;</span>IDetailCustomization<span class="token operator">&gt;</span> <span class="token function">MakeInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\n\t<span class="token keyword">static</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> CategoriesToShow<span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">static</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> PropertiesToShow<span class="token punctuation">;</span>\n\t\n<span class="token keyword">private</span><span class="token operator">:</span>\n\t<span class="token comment">/** IDetailCustomization interface */</span>\n\t<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">CustomizeDetails</span><span class="token punctuation">(</span>IDetailLayoutBuilder<span class="token operator">&amp;</span> DetailLayout<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;DataMacting/DataMatchingDetailsView.h&quot;</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;DetailLayoutBuilder.h&quot;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ObjectEditorUtils.h&quot;</span></span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">LOCTEXT_NAMESPACE</span> <span class="token string">&quot;DataMatchingDetailsView&quot;</span></span>\n\nTArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> FDataMatchingDetailsView<span class="token double-colon punctuation">::</span>CategoriesToShow<span class="token punctuation">;</span>\nTArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span> FDataMatchingDetailsView<span class="token double-colon punctuation">::</span>PropertiesToShow<span class="token punctuation">;</span>\n\nTSharedRef<span class="token operator">&lt;</span>IDetailCustomization<span class="token operator">&gt;</span> <span class="token class-name">FDataMatchingDetailsView</span><span class="token double-colon punctuation">::</span><span class="token function">MakeInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> <span class="token function">MakeShareable</span><span class="token punctuation">(</span><span class="token keyword">new</span> FDataMatchingDetailsView<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">FDataMatchingDetailsView</span><span class="token double-colon punctuation">::</span><span class="token function">CustomizeDetails</span><span class="token punctuation">(</span>IDetailLayoutBuilder<span class="token operator">&amp;</span> DetailBuilder<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tTArray<span class="token operator">&lt;</span>TWeakObjectPtr<span class="token operator">&lt;</span>UObject<span class="token operator">&gt;&gt;</span> Objects<span class="token punctuation">;</span>\n\tDetailBuilder<span class="token punctuation">.</span><span class="token function">GetObjectsBeingCustomized</span><span class="token punctuation">(</span>Objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 获取当前对象的类</span>\n\tUClass<span class="token operator">*</span> TargetClass <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> Objects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tTargetClass <span class="token operator">=</span> Objects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">GetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TargetClass<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">for</span> <span class="token punctuation">(</span>TFieldIterator<span class="token operator">&lt;</span>FProperty<span class="token operator">&gt;</span> <span class="token function">PropIt</span><span class="token punctuation">(</span>TargetClass<span class="token punctuation">)</span><span class="token punctuation">;</span> PropIt<span class="token punctuation">;</span> <span class="token operator">++</span>PropIt<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tFProperty<span class="token operator">*</span> Property <span class="token operator">=</span> <span class="token operator">*</span>PropIt<span class="token punctuation">;</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Property<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">const</span> FName PropertyName <span class="token operator">=</span> Property<span class="token operator">-&gt;</span><span class="token function">GetFName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token comment">// 检查是否显示该属性</span>\n\t\t<span class="token keyword">bool</span> bShouldShow <span class="token operator">=</span> PropertiesToShow<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token comment">//  或者检查它所属的分类是否在允许列表</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bShouldShow<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">const</span> FString CategoryFullString <span class="token operator">=</span> <span class="token class-name">FObjectEditorUtils</span><span class="token double-colon punctuation">::</span><span class="token function">GetCategoryFName</span><span class="token punctuation">(</span>Property<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\tFString TopLevelCategory <span class="token operator">=</span> CategoryFullString<span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>CategoryFullString<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">{</span>\n\t\t\t\tCategoryFullString<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>TopLevelCategory<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token punctuation">}</span>\n\n\t\t\tbShouldShow <span class="token operator">=</span> CategoriesToShow<span class="token punctuation">.</span><span class="token function">ContainsByPredicate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> FName<span class="token operator">&amp;</span> CategoryName<span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t<span class="token keyword">const</span> FString ElementStr <span class="token operator">=</span> CategoryName<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t\t<span class="token keyword">return</span> ElementStr <span class="token operator">==</span> CategoryFullString <span class="token operator">||</span> ElementStr <span class="token operator">==</span> TopLevelCategory<span class="token punctuation">;</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\n\t\t<span class="token comment">// 隐藏</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bShouldShow<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\tDetailBuilder<span class="token punctuation">.</span><span class="token function">HideProperty</span><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">undef</span> <span class="token expression">LOCTEXT_NAMESPACE</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-自定义显示-使用" tabindex="-1"><a class="header-anchor" href="#_7-自定义显示-使用"><span>7. 自定义显示|使用</span></a></h3>',3),D=(0,t.Lk)("p",null,[(0,t.eW)("然后在外部修改后调用"),(0,t.Lk)("code",null,"DetailsView->ForceRefresh();"),(0,t.eW)(" 即可")],-1),F=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">FDataSystemAssetEditorToolkit</span><span class="token double-colon punctuation">::</span><span class="token function">ShowDetails</span><span class="token punctuation">(</span><span class="token keyword">const</span> TArray<span class="token operator">&lt;</span>FName<span class="token operator">&gt;</span><span class="token operator">&amp;</span> WantToShow<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>DataMatchingPtr<span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>DetailsView<span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\tCategoriesToShow<span class="token punctuation">.</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tCategoriesToShow <span class="token operator">=</span> WantToShow<span class="token punctuation">;</span>\n\t<span class="token comment">// 设置当前要显示的分类（全局共享）</span>\n\tFDataMatchingDetailsView<span class="token double-colon punctuation">::</span>CategoriesToShow <span class="token operator">=</span> WantToShow<span class="token punctuation">;</span>\n\n\tDetailsView<span class="token operator">-&gt;</span><span class="token function">ForceRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-野路子" tabindex="-1"><a class="header-anchor" href="#_8-野路子"><span>8.野路子</span></a></h3>',2),S=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\t<span class="token comment">//野路子</span>\n\tUDetailsView<span class="token operator">*</span> DetailsViewWidget <span class="token operator">=</span> <span class="token generic-function"><span class="token function">NewObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UDetailsView<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">// 设置对象</span>\n\tDetailsViewWidget<span class="token operator">-&gt;</span><span class="token function">SetObject</span><span class="token punctuation">(</span>DataMatchingPtr<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tDetailsViewWidget<span class="token operator">-&gt;</span>CategoriesToShow<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;Log&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Step1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">// 获取Slate</span>\n\tTSharedRef<span class="token operator">&lt;</span>SWidget<span class="token operator">&gt;</span> SDetailViewWidget  <span class="token operator">=</span> DetailsViewWidget<span class="token operator">-&gt;</span><span class="token function">TakeWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">//快乐起来</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),V={},C=(0,s(66262).A)(V,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[c,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[r])),_:1}),u,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 由PropertyEditor模块管理 ")])),_:1}),d,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[k])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[v])),_:1}),m,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[(0,t.eW)(" 给我气到吐血的功能，编辑器里封装的特别好用，这里还要自定义一层！ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[g])),_:1}),b,(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 我们只能模仿他封装按组过滤还是按具体属性过滤。 ")])),_:1}),h,(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 其中的过滤关键函数。 ")])),_:1}),w,(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[y])),_:1}),f,(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[D])),_:1}),F,(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 明明官方封装了一个方法，我们却自己造轮子？咱们其实可以用个野路子，直接CreateWidget然后转成Slate ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[(0,t.eW)(" 性能会不会有问题？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 损失肯定是有的，不过对于编辑器来说其实无所谓。而且能用4句话解决问题为什么不用呢？ ")])),_:1}),S])}]]),T=JSON.parse('{"path":"/unreal/editor_%E7%BC%96%E8%BE%91%E5%99%A8_/07-DetailView.html","title":"ED07.DetailView|细节面板初稿","lang":"zh-CN","frontmatter":{"title":"ED07.DetailView|细节面板初稿","order":24,"category":["u++"],"description":"DetailView 使用方法 1. 获取 PropertyEditor 模块的实例 2.注册自定义类的细节视图布局（customized details view layout） 3. 创建一个 FDetailsViewArgs 对象来配置细节视图（Detail View）参数 4. 创建细节面板实例 5. 在细节面板中要显示属性的对象 6.释放资源...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/editor_%E7%BC%96%E8%BE%91%E5%99%A8_/07-DetailView.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"ED07.DetailView|细节面板初稿"}],["meta",{"property":"og:description","content":"DetailView 使用方法 1. 获取 PropertyEditor 模块的实例 2.注册自定义类的细节视图布局（customized details view layout） 3. 创建一个 FDetailsViewArgs 对象来配置细节视图（Detail View）参数 4. 创建细节面板实例 5. 在细节面板中要显示属性的对象 6.释放资源..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-09T16:58:30.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-04-09T16:58:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ED07.DetailView|细节面板初稿\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-09T16:58:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"DetailView","slug":"detailview","link":"#detailview","children":[]},{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[{"level":3,"title":"1. 获取 PropertyEditor 模块的实例","slug":"_1-获取-propertyeditor-模块的实例","link":"#_1-获取-propertyeditor-模块的实例","children":[]},{"level":3,"title":"2.注册自定义类的细节视图布局（customized details view layout）","slug":"_2-注册自定义类的细节视图布局-customized-details-view-layout","link":"#_2-注册自定义类的细节视图布局-customized-details-view-layout","children":[]},{"level":3,"title":"3. 创建一个 FDetailsViewArgs 对象来配置细节视图（Detail View）参数","slug":"_3-创建一个-fdetailsviewargs-对象来配置细节视图-detail-view-参数","link":"#_3-创建一个-fdetailsviewargs-对象来配置细节视图-detail-view-参数","children":[]},{"level":3,"title":"4. 创建细节面板实例","slug":"_4-创建细节面板实例","link":"#_4-创建细节面板实例","children":[]},{"level":3,"title":"5. 在细节面板中要显示属性的对象","slug":"_5-在细节面板中要显示属性的对象","link":"#_5-在细节面板中要显示属性的对象","children":[]},{"level":3,"title":"6.释放资源","slug":"_6-释放资源","link":"#_6-释放资源","children":[]},{"level":3,"title":"7. 自定义显示|隐藏属性","slug":"_7-自定义显示-隐藏属性","link":"#_7-自定义显示-隐藏属性","children":[]},{"level":3,"title":"7. 自定义显示|使用","slug":"_7-自定义显示-使用","link":"#_7-自定义显示-使用","children":[]},{"level":3,"title":"8.野路子","slug":"_8-野路子","link":"#_8-野路子","children":[]}]}],"git":{"createdTime":1744217910000,"updatedTime":1744217910000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":3.25,"words":974},"filePathRelative":"unreal/editor[编辑器]/07-DetailView.md","localizedDate":"2025年4月9日","excerpt":"<h2><strong>DetailView</strong></h2>\\n\\n<figure><figcaption></figcaption></figure>\\n<h2>使用方法</h2>\\n<h3>1. 获取 PropertyEditor 模块的实例</h3>\\n\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>FPropertyEditorModule<span class=\\"token operator\\">&amp;</span> PropertyEditorModule <span class=\\"token operator\\">=</span> FModuleManager<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token generic-function\\"><span class=\\"token function\\">GetModuleChecked</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>FPropertyEditorModule<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"PropertyEditor\\"</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n</code></pre></div>","autoDesc":true}')}}]);