"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[3555],{52912:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>m,data:()=>v});var t=s(20641);const e=s.p+"assets/img/SetViewTargetWithBlend001.c09bc58f.png",p=s.p+"assets/img/SetViewTargetWithBlend002.eb23f24f.png",o=s.p+"assets/img/SetViewTargetWithBlend003.c5f5d621.png",c=(0,t.Fv)('<figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="方案1" tabindex="-1"><a class="header-anchor" href="#方案1"><span>方案1</span></a></h2><ol><li>定义一个接口和一个相机数组</li></ol><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\n<span class="token comment">//用于存场景中的相机</span>\n<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span> BlueprintReadWrite<span class="token punctuation">,</span> Category <span class="token operator">=</span> Input<span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>AllowPrivateAccess <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nTArray<span class="token operator">&lt;</span>ACameraActor<span class="token operator">*</span><span class="token operator">&gt;</span> CameraArr<span class="token punctuation">;</span>\n\n<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> BlueprintNativeEvent<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;CameraInterface&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">void</span> <span class="token function">IChangeCamera</span> <span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span><span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span> <span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>继承并实现</li></ol><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">//InterfaceChangeCamera Part1 .h 相机切换函数</span>\n<span class="token keyword">void</span> <span class="token function">IChangeCamera_Implementation</span><span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span> <span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token class-name">AInteractiveControllerPawn</span><span class="token double-colon punctuation">::</span><span class="token function">IChangeCamera_Implementation</span><span class="token punctuation">(</span>int32 CameraID<span class="token punctuation">,</span> <span class="token keyword">float</span> CameraSwitchTime<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>PlayerController<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SwitchCameraByID</span><span class="token punctuation">(</span>PlayerController<span class="token punctuation">,</span> CameraArr<span class="token punctuation">,</span> CameraID<span class="token punctuation">,</span> CameraSwitchTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tGEngine<span class="token operator">-&gt;</span><span class="token function">AddOnScreenDebugMessage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.0f</span><span class="token punctuation">,</span> FColor<span class="token double-colon punctuation">::</span>White<span class="token punctuation">,</span> <span class="token class-name">FString</span><span class="token double-colon punctuation">::</span><span class="token function">SanitizeFloat</span><span class="token punctuation">(</span>CameraID<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\t\t                                 <span class="token function">FVector2D</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//可以将其放入蓝图函数库中</span>\n<span class="token keyword">void</span> <span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SwitchCameraByID</span><span class="token punctuation">(</span>APlayerController<span class="token operator">*</span> PlayerController<span class="token punctuation">,</span>\n                                                <span class="token keyword">const</span> TArray<span class="token operator">&lt;</span>ACameraActor<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> CameraArr<span class="token punctuation">,</span> int32 CameraID<span class="token punctuation">,</span>\n                                                <span class="token keyword">float</span> CameraSwitchTime <span class="token comment">/*= 2.0f*/</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 检查输入的有效性</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>PlayerController <span class="token operator">||</span> CameraArr<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> CameraID <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> CameraID <span class="token operator">&gt;=</span> CameraArr<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// 输入无效，提前返回</span>\n\t\t<span class="token keyword">return</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// 获取当前相机</span>\n\tAActor<span class="token operator">*</span> CurrentCamera <span class="token operator">=</span> PlayerController<span class="token operator">-&gt;</span><span class="token function">GetViewTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 检查相机ID是否与当前相机的ID相同</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>CameraArr<span class="token punctuation">[</span>CameraID<span class="token punctuation">]</span> <span class="token operator">==</span> CurrentCamera<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// 相机已经处于活动状态，提前返回</span>\n\t\t<span class="token keyword">return</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// 尝试将选择的相机角色转换为CameraActor类型</span>\n\tACameraActor<span class="token operator">*</span> SelectedCamera <span class="token operator">=</span> <span class="token generic-function"><span class="token function">Cast</span><span class="token generic class-name"><span class="token operator">&lt;</span>ACameraActor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>CameraArr<span class="token punctuation">[</span>CameraID<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>SelectedCamera<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// 将新相机设置为视角目标，并应用混合过渡效果</span>\n\t\tPlayerController<span class="token operator">-&gt;</span><span class="token function">SetViewTargetWithBlend</span><span class="token punctuation">(</span>SelectedCamera<span class="token punctuation">,</span> CameraSwitchTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 可根据需要调整混合时间</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),l=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),i=(0,t.Lk)("h2",{id:"方案2",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#方案2"},[(0,t.Lk)("span",null,"方案2")])],-1),r=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),u=(0,t.Lk)("h2",{id:"参考文档",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#参考文档"},[(0,t.Lk)("span",null,"参考文档")])],-1),k={href:"https://forums.unrealengine.com/t/how-to-make-smooth-camera-switch-transition/585725/6",target:"_blank",rel:"noopener noreferrer"},d={},m=(0,s(66262).A)(d,[["render",function(n,a){const s=(0,t.g2)("chatmessage"),e=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 基于SetViewTargetWithBlend平滑过度相机的几种方法 ")])),_:1}),c,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 这个方法有个缺点，就是Pawn必须提前放到场景中，然后指定相机。 ")])),_:1}),l,i,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" SetViewTargetWithBlend必须传入相机Actor而不是组件Component,而且这种绑定多相机的操作除非很明确设定，一般应该让蓝图自由发挥。 因此，我们可以添加子Actor来解决，配合之前的接口就可以实现动态切换相机了。 ")])),_:1}),r,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 当然，最好是加入一些延迟锁，防止用户高频操作。 ")])),_:1}),u,(0,t.Lk)("p",null,[(0,t.Lk)("a",k,[(0,t.eW)("官方论坛"),(0,t.bF)(e)])])])}]]),v=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/16-SetViewTargetWithBlend.html","title":"F16.SetViewTargetWithBlend|相机平滑切换","lang":"zh-CN","frontmatter":{"title":"F16.SetViewTargetWithBlend|相机平滑切换","order":16,"category":["u++"],"description":"方案1 定义一个接口和一个相机数组 继承并实现 方案2 参考文档 官方论坛","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/16-SetViewTargetWithBlend.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F16.SetViewTargetWithBlend|相机平滑切换"}],["meta",{"property":"og:description","content":"方案1 定义一个接口和一个相机数组 继承并实现 方案2 参考文档 官方论坛"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-18T17:56:40.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-03-18T17:56:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F16.SetViewTargetWithBlend|相机平滑切换\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-18T17:56:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"方案1","slug":"方案1","link":"#方案1","children":[]},{"level":2,"title":"方案2","slug":"方案2","link":"#方案2","children":[]},{"level":2,"title":"参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1706314309000,"updatedTime":1710784600000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"unreal/function[函数]/16-SetViewTargetWithBlend.md","localizedDate":"2024年1月27日","excerpt":"\\n<figure><figcaption></figcaption></figure>\\n<h2>方案1</h2>\\n<ol>\\n<li>定义一个接口和一个相机数组</li>\\n</ol>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>\\n<span class=\\"token comment\\">//用于存场景中的相机</span>\\n<span class=\\"token function\\">UPROPERTY</span><span class=\\"token punctuation\\">(</span>EditAnywhere<span class=\\"token punctuation\\">,</span> BlueprintReadWrite<span class=\\"token punctuation\\">,</span> Category <span class=\\"token operator\\">=</span> Input<span class=\\"token punctuation\\">,</span> meta <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>AllowPrivateAccess <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"true\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nTArray<span class=\\"token operator\\">&lt;</span>ACameraActor<span class=\\"token operator\\">*</span><span class=\\"token operator\\">&gt;</span> CameraArr<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token function\\">UFUNCTION</span><span class=\\"token punctuation\\">(</span>BlueprintCallable<span class=\\"token punctuation\\">,</span> BlueprintNativeEvent<span class=\\"token punctuation\\">,</span> Category <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"CameraInterface\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">IChangeCamera</span> <span class=\\"token punctuation\\">(</span>int32 CameraID<span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">float</span> CameraSwitchTime<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);