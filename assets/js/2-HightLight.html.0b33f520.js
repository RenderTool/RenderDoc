"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[6873],{2479:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>i,data:()=>u});var t=a(20641);const p=a.p+"assets/img/highlight2.63caf598.png",e=a.p+"assets/img/highlight.1a6e797a.png",o=(0,t.Fv)('<h2 id="playercontroller中的高亮功能" tabindex="-1"><a class="header-anchor" href="#playercontroller中的高亮功能"><span>PlayerController中的高亮功能</span></a></h2><h3 id="_1-添加高亮启动-关闭-检测" tabindex="-1"><a class="header-anchor" href="#_1-添加高亮启动-关闭-检测"><span>1. 添加高亮启动/关闭/检测</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">AAuraPlayerController</span><span class="token double-colon punctuation">::</span><span class="token function">CursorTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 碰撞通道</span>\n    <span class="token keyword">const</span> ECollisionChannel TraceChannel <span class="token operator">=</span> ECollisionChannel<span class="token double-colon punctuation">::</span>ECC_Visibility<span class="token punctuation">;</span>\n\n    <span class="token comment">// 获取光标下的碰撞信息，并存储在CursorHit中</span>\n    <span class="token function">GetHitResultUnderCursor</span><span class="token punctuation">(</span>TraceChannel<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> CursorHit<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 如果光标下没有阻挡的对象，直接返回</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>CursorHit<span class="token punctuation">.</span>bBlockingHit<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 保存上一个高亮的对象</span>\n    LastActor <span class="token operator">=</span> ThisActor<span class="token punctuation">;</span>\n\n    <span class="token comment">// 获取当前光标下的对象，并检查其有效性和是否实现了高亮接口</span>\n    AActor<span class="token operator">*</span> HitActor <span class="token operator">=</span> CursorHit<span class="token punctuation">.</span><span class="token function">GetActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsValid</span><span class="token punctuation">(</span>HitActor<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> HitActor<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">Implements</span><span class="token generic class-name"><span class="token operator">&lt;</span>UHighlightInterface<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        ThisActor <span class="token operator">=</span> HitActor<span class="token punctuation">;</span> <span class="token comment">// 当前对象有效且可高亮，设置为ThisActor</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">else</span>\n    <span class="token punctuation">{</span>\n        ThisActor <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">;</span> <span class="token comment">// 当前对象无效或不支持高亮，设置为nullptr</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 如果当前对象与上一个对象不同，则更新高亮状态</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>LastActor <span class="token operator">!=</span> ThisActor<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">// 取消上一个对象的高亮效果</span>\n        <span class="token function">UnHighlightActor</span><span class="token punctuation">(</span>LastActor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 为当前对象添加高亮效果</span>\n        <span class="token function">HighlightActor</span><span class="token punctuation">(</span>ThisActor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">AAuraPlayerController</span><span class="token double-colon punctuation">::</span><span class="token function">HighlightActor</span><span class="token punctuation">(</span>AActor<span class="token operator">*</span> InActor<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsValid</span><span class="token punctuation">(</span>InActor<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> InActor<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">Implements</span><span class="token generic class-name"><span class="token operator">&lt;</span>UHighlightInterface<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name">IHighlightInterface</span><span class="token double-colon punctuation">::</span><span class="token function">Execute_HighlightActor</span><span class="token punctuation">(</span>InActor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">AAuraPlayerController</span><span class="token double-colon punctuation">::</span><span class="token function">UnHighlightActor</span><span class="token punctuation">(</span>AActor<span class="token operator">*</span> InActor<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsValid</span><span class="token punctuation">(</span>InActor<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> InActor<span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">Implements</span><span class="token generic class-name"><span class="token operator">&lt;</span>UHighlightInterface<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name">IHighlightInterface</span><span class="token double-colon punctuation">::</span><span class="token function">Execute_UnHighlightActor</span><span class="token punctuation">(</span>InActor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-显示鼠标、设置输入模式" tabindex="-1"><a class="header-anchor" href="#_2-显示鼠标、设置输入模式"><span>2. 显示鼠标、设置输入模式</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// 显示鼠标</span>\nbShowMouseCursor <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\nDefaultMouseCursor <span class="token operator">=</span> EMouseCursor<span class="token double-colon punctuation">::</span>Default<span class="token punctuation">;</span>\n\n<span class="token comment">// 设置输入模式</span>\nFInputModeGameAndUI InputModeData<span class="token punctuation">;</span>\nInputModeData<span class="token punctuation">.</span><span class="token function">SetLockMouseToViewportBehavior</span><span class="token punctuation">(</span>EMouseLockMode<span class="token double-colon punctuation">::</span>DoNotLock<span class="token punctuation">)</span><span class="token punctuation">;</span>\nInputModeData<span class="token punctuation">.</span><span class="token function">SetHideCursorDuringCapture</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">SetInputMode</span><span class="token punctuation">(</span>InputModeData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义高亮接口-highlightinterface" tabindex="-1"><a class="header-anchor" href="#_3-定义高亮接口-highlightinterface"><span>3. 定义高亮接口 <code>HighlightInterface</code></span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;CoreMinimal.h&quot;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;UObject/Interface.h&quot;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;HighlightInterface.generated.h&quot;</span></span>\n\n<span class="token function">UINTERFACE</span><span class="token punctuation">(</span>MinimalAPI<span class="token punctuation">,</span> BlueprintType<span class="token punctuation">)</span>\n<span class="token keyword">class</span> <span class="token class-name">UHighlightInterface</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">UInterface</span></span>\n<span class="token punctuation">{</span>\n    <span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">GAMEPLAYABILITY_API</span> IHighlightInterface\n<span class="token punctuation">{</span>\n    <span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span><span class="token operator">:</span>\n    <span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintNativeEvent<span class="token punctuation">)</span>\n    <span class="token keyword">void</span> <span class="token function">HighlightActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintNativeEvent<span class="token punctuation">)</span>\n    <span class="token keyword">void</span> <span class="token function">UnHighlightActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-actor中实现高亮接口" tabindex="-1"><a class="header-anchor" href="#_4-actor中实现高亮接口"><span>4. Actor中实现高亮接口</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token class-name">AMyActor</span><span class="token double-colon punctuation">::</span><span class="token function">AMyActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 设置碰撞通道</span>\n    <span class="token function">GetMesh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">SetCollisionResponseToChannel</span><span class="token punctuation">(</span>ECC_Visibility<span class="token punctuation">,</span> ECR_Block<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 设置自定义深度</span>\n    <span class="token function">GetMesh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">SetCustomDepthStencilValue</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">GetMesh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">MarkRenderStateDirty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">AMyActor</span><span class="token double-colon punctuation">::</span><span class="token function">HighlightActor_Implementation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 高亮时显示</span>\n    <span class="token function">GetMesh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">SetRenderCustomDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">AMyActor</span><span class="token double-colon punctuation">::</span><span class="token function">UnHighlightActor_Implementation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 取消高亮时显示</span>\n    <span class="token function">GetMesh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">SetRenderCustomDepth</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-高亮材质" tabindex="-1"><a class="header-anchor" href="#_5-高亮材质"><span>5. 高亮材质</span></a></h3><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',11),c=(0,t.Fv)('<figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">public</span><span class="token operator">:</span>\n\t<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;HighlightComponent&quot;</span><span class="token punctuation">)</span>\n\t<span class="token keyword">void</span> <span class="token function">SetHighLightEnabled</span><span class="token punctuation">(</span><span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">//cpp</span>\n\t<span class="token keyword">void</span> <span class="token class-name">UHighlightComponent</span><span class="token double-colon punctuation">::</span><span class="token function">SetHighLightEnabled</span><span class="token punctuation">(</span><span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        bHighLightEnabled <span class="token operator">=</span> bEnabled<span class="token punctuation">;</span>\n        bHighLightEnabled <span class="token operator">?</span> <span class="token function">SetComponentTickEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">SetComponentTickEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token keyword">private</span><span class="token operator">:</span>\n\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>VisibleAnywhere<span class="token punctuation">,</span> BlueprintReadOnly<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;HighlightComponent&quot;</span><span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>AllowPrivateAccess <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token keyword">bool</span> bHighLightEnabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\t\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>VisibleAnywhere<span class="token punctuation">,</span> BlueprintReadOnly<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;HighlightComponent&quot;</span><span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>AllowPrivateAccess <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\tTEnumAsByte<span class="token operator">&lt;</span>ECollisionChannel<span class="token operator">&gt;</span> TraceChannel<span class="token punctuation">;</span>\n\t\n<span class="token keyword">void</span> <span class="token class-name">UHighlightComponent</span><span class="token double-colon punctuation">::</span><span class="token function">CursorTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>bHighLightEnabled<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\t<span class="token comment">//获取角色控制器</span>\n\t<span class="token keyword">const</span> APlayerController<span class="token operator">*</span> PlayerController <span class="token operator">=</span> <span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFirstPlayerController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">IsValid</span><span class="token punctuation">(</span>PlayerController<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\t<span class="token comment">// 获取光标下的碰撞信息，并存储在CursorHit中</span>\n\tPlayerController<span class="token operator">-&gt;</span><span class="token function">GetHitResultUnderCursor</span><span class="token punctuation">(</span>TraceChannel<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> CursorHit<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\t<span class="token comment">//后面的一样</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),l={},i=(0,a(66262).A)(l,[["render",function(n,s){const a=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 实际开发中往往有鼠标点击某个物体高亮描边的需求。 ")])),_:1}),(0,t.bF)(a,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 大概的实现思路如下： ")])),_:1}),o,(0,t.bF)(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 这么做好像每次都要重复大量代码，写到组件应该更加方便！ ")])),_:1}),(0,t.bF)(a,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 是的，不仅可以写在组件中，还可以直接写在插件中。只需将原本的PlayerController中的功能移动至对应的组件，并添加到PlayerController中即可 控制启用关闭即可。 ")])),_:1}),c])}]]),u=JSON.parse('{"path":"/unreal/plugins_%E6%8F%92%E4%BB%B6_/2-HightLight.html","title":"P2.物体点击高亮","lang":"zh-CN","frontmatter":{"title":"P2.物体点击高亮","order":2,"category":["unreal"],"description":"PlayerController中的高亮功能 1. 添加高亮启动/关闭/检测 2. 显示鼠标、设置输入模式 3. 定义高亮接口 HighlightInterface 4. Actor中实现高亮接口 5. 高亮材质","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/plugins_%E6%8F%92%E4%BB%B6_/2-HightLight.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"P2.物体点击高亮"}],["meta",{"property":"og:description","content":"PlayerController中的高亮功能 1. 添加高亮启动/关闭/检测 2. 显示鼠标、设置输入模式 3. 定义高亮接口 HighlightInterface 4. Actor中实现高亮接口 5. 高亮材质"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-07T08:19:23.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-10-07T08:19:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"P2.物体点击高亮\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-07T08:19:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"PlayerController中的高亮功能","slug":"playercontroller中的高亮功能","link":"#playercontroller中的高亮功能","children":[{"level":3,"title":"1. 添加高亮启动/关闭/检测","slug":"_1-添加高亮启动-关闭-检测","link":"#_1-添加高亮启动-关闭-检测","children":[]},{"level":3,"title":"2. 显示鼠标、设置输入模式","slug":"_2-显示鼠标、设置输入模式","link":"#_2-显示鼠标、设置输入模式","children":[]},{"level":3,"title":"3. 定义高亮接口 HighlightInterface","slug":"_3-定义高亮接口-highlightinterface","link":"#_3-定义高亮接口-highlightinterface","children":[]},{"level":3,"title":"4. Actor中实现高亮接口","slug":"_4-actor中实现高亮接口","link":"#_4-actor中实现高亮接口","children":[]},{"level":3,"title":"5. 高亮材质","slug":"_5-高亮材质","link":"#_5-高亮材质","children":[]}]}],"git":{"createdTime":1728289163000,"updatedTime":1728289163000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":2.13,"words":639},"filePathRelative":"unreal/plugins[插件]/2-HightLight.md","localizedDate":"2024年10月7日","excerpt":"\\n\\n<h2>PlayerController中的高亮功能</h2>\\n<h3>1. 添加高亮启动/关闭/检测</h3>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">AAuraPlayerController</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">CursorTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 碰撞通道</span>\\n    <span class=\\"token keyword\\">const</span> ECollisionChannel TraceChannel <span class=\\"token operator\\">=</span> ECollisionChannel<span class=\\"token double-colon punctuation\\">::</span>ECC_Visibility<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 获取光标下的碰撞信息，并存储在CursorHit中</span>\\n    <span class=\\"token function\\">GetHitResultUnderCursor</span><span class=\\"token punctuation\\">(</span>TraceChannel<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> CursorHit<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 如果光标下没有阻挡的对象，直接返回</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>CursorHit<span class=\\"token punctuation\\">.</span>bBlockingHit<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 保存上一个高亮的对象</span>\\n    LastActor <span class=\\"token operator\\">=</span> ThisActor<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 获取当前光标下的对象，并检查其有效性和是否实现了高亮接口</span>\\n    AActor<span class=\\"token operator\\">*</span> HitActor <span class=\\"token operator\\">=</span> CursorHit<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetActor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IsValid</span><span class=\\"token punctuation\\">(</span>HitActor<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> HitActor<span class=\\"token operator\\">-&gt;</span><span class=\\"token generic-function\\"><span class=\\"token function\\">Implements</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UHighlightInterface<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        ThisActor <span class=\\"token operator\\">=</span> HitActor<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 当前对象有效且可高亮，设置为ThisActor</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        ThisActor <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">nullptr</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 当前对象无效或不支持高亮，设置为nullptr</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 如果当前对象与上一个对象不同，则更新高亮状态</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>LastActor <span class=\\"token operator\\">!=</span> ThisActor<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 取消上一个对象的高亮效果</span>\\n        <span class=\\"token function\\">UnHighlightActor</span><span class=\\"token punctuation\\">(</span>LastActor<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 为当前对象添加高亮效果</span>\\n        <span class=\\"token function\\">HighlightActor</span><span class=\\"token punctuation\\">(</span>ThisActor<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">AAuraPlayerController</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">HighlightActor</span><span class=\\"token punctuation\\">(</span>AActor<span class=\\"token operator\\">*</span> InActor<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IsValid</span><span class=\\"token punctuation\\">(</span>InActor<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> InActor<span class=\\"token operator\\">-&gt;</span><span class=\\"token generic-function\\"><span class=\\"token function\\">Implements</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UHighlightInterface<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">IHighlightInterface</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Execute_HighlightActor</span><span class=\\"token punctuation\\">(</span>InActor<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">AAuraPlayerController</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">UnHighlightActor</span><span class=\\"token punctuation\\">(</span>AActor<span class=\\"token operator\\">*</span> InActor<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IsValid</span><span class=\\"token punctuation\\">(</span>InActor<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> InActor<span class=\\"token operator\\">-&gt;</span><span class=\\"token generic-function\\"><span class=\\"token function\\">Implements</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UHighlightInterface<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">IHighlightInterface</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Execute_UnHighlightActor</span><span class=\\"token punctuation\\">(</span>InActor<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}')}}]);