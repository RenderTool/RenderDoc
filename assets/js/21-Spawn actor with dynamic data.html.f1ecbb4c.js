"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[7425],{62291:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>i,data:()=>l});var t=s(20641);const e=(0,t.Lk)("h3",{id:"导言",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#导言"},[(0,t.Lk)("span",null,"导言")])],-1),p=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>AEquipmentBase<span class="token operator">*</span> NewActor <span class="token operator">=</span> <span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">SpawnActor</span><span class="token generic class-name"><span class="token operator">&lt;</span>AEquipmentBase<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">AEquipmentBase</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>NewActor<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    NewActor<span class="token operator">-&gt;</span>ItemTag <span class="token operator">=</span> PickUpStruct<span class="token punctuation">.</span>ItemTag<span class="token punctuation">;</span>\n    NewActor<span class="token operator">-&gt;</span>Quantity <span class="token operator">=</span> PickUpStruct<span class="token punctuation">.</span>Quantity<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),o=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code> <span class="token comment">// 使用 SpawnActorDeferred 生成 Actor</span>\n    AMyActor<span class="token operator">*</span> NewActor <span class="token operator">=</span> <span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">SpawnActorDeferred</span><span class="token generic class-name"><span class="token operator">&lt;</span>AMyActor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">AMyActor</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FTransform<span class="token double-colon punctuation">::</span>Identity<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>NewActor<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token comment">// 设置 Actor 的属性</span>\n        NewActor<span class="token operator">-&gt;</span>ItemTag <span class="token operator">=</span> ItemTag<span class="token punctuation">;</span>\n        NewActor<span class="token operator">-&gt;</span>Quantity <span class="token operator">=</span> Quantity<span class="token punctuation">;</span>\n\n        <span class="token comment">// 完成 Actor 的生成</span>\n        NewActor<span class="token operator">-&gt;</span><span class="token function">FinishSpawning</span><span class="token punctuation">(</span><span class="token function">FTransform</span><span class="token punctuation">(</span>SpawnLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),c={},i=(0,s(66262).A)(c,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[e,(0,t.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" Spawn actor|带参生成怎么做？ ")])),_:1}),p,(0,t.bF)(s,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 这样好像不太行 ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 可以使用SpawnActorDeferred 生成 Actor，他不会立即初始化，而是设置 Actor 的属性后手动调用 FinishSpawning初始化。 ")])),_:1}),o])}]]),l=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/21-Spawn%20actor%20with%20dynamic%20data.html","title":"F21.Spawn actor|带参生成","lang":"zh-CN","frontmatter":{"title":"F21.Spawn actor|带参生成","order":21,"category":["u++"],"description":"导言","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/21-Spawn%20actor%20with%20dynamic%20data.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F21.Spawn actor|带参生成"}],["meta",{"property":"og:description","content":"导言"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-24T23:42:02.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-03-24T23:42:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F21.Spawn actor|带参生成\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-24T23:42:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"导言","slug":"导言","link":"#导言","children":[]}],"git":{"createdTime":1711323722000,"updatedTime":1711323722000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"unreal/function[函数]/21-Spawn actor with dynamic data.md","localizedDate":"2024年3月24日","excerpt":"<h3>导言</h3>\\n\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>AEquipmentBase<span class=\\"token operator\\">*</span> NewActor <span class=\\"token operator\\">=</span> <span class=\\"token function\\">GetWorld</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token generic-function\\"><span class=\\"token function\\">SpawnActor</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>AEquipmentBase<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">AEquipmentBase</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">StaticClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>NewActor<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    NewActor<span class=\\"token operator\\">-&gt;</span>ItemTag <span class=\\"token operator\\">=</span> PickUpStruct<span class=\\"token punctuation\\">.</span>ItemTag<span class=\\"token punctuation\\">;</span>\\n    NewActor<span class=\\"token operator\\">-&gt;</span>Quantity <span class=\\"token operator\\">=</span> PickUpStruct<span class=\\"token punctuation\\">.</span>Quantity<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}')}}]);