"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[5260],{3279:(n,a,s)=>{n.exports=s.p+"assets/img/new animation03.e99cd3d7.png"},39150:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>f,data:()=>S});var t=s(20641);const e=s.p+"assets/img/new animation02.7a5d0fa3.jpg",p=s.p+"assets/img/new animation04.08cdc273.png";var o=s(3279);const c=s.p+"assets/img/node.4cf055ca.png",l=(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,"202411/13补 UE5.4BUG已经修复，5.3没试过，5.2是有这个问题的")],-1),i=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),u=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SetSkeletalMeshAndAnimation</span><span class="token punctuation">(</span>USkeletalMesh<span class="token operator">*</span> NewMesh<span class="token punctuation">,</span> UAnimationAsset<span class="token operator">*</span> NewAnimation<span class="token punctuation">,</span>\n                                                           <span class="token keyword">float</span> PlayRate<span class="token punctuation">,</span> <span class="token keyword">bool</span> bLooping<span class="token punctuation">,</span>\n                                                           USkeletalMeshComponent<span class="token operator">*</span> TargetMeshComponent<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>TargetMeshComponent<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// 设置骨骼网格</span>\n\t\tTargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetSkeletalMesh</span><span class="token punctuation">(</span>NewMesh<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token comment">// 播放动画</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>NewAnimation<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\tTargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">PlayAnimation</span><span class="token punctuation">(</span>NewAnimation<span class="token punctuation">,</span> bLooping<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\tTargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetPlayRate</span><span class="token punctuation">(</span>PlayRate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),r=(0,t.Fv)('<figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">PlayAnimation</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">UAnimationAsset</span><span class="token operator">*</span> NewAnimToPlay<span class="token punctuation">,</span> <span class="token keyword">bool</span> bLooping<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token function">SetAnimationMode</span><span class="token punctuation">(</span>EAnimationMode<span class="token double-colon punctuation">::</span>AnimationSingleNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">SetAnimation</span><span class="token punctuation">(</span>NewAnimToPlay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">Play</span><span class="token punctuation">(</span>bLooping<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">SetAnimation</span><span class="token punctuation">(</span>UAnimationAsset<span class="token operator">*</span> NewAnimToPlay<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tUAnimSingleNodeInstance<span class="token operator">*</span> SingleNodeInstance <span class="token operator">=</span> <span class="token function">GetSingleNodeInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>SingleNodeInstance<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tSingleNodeInstance<span class="token operator">-&gt;</span><span class="token function">SetAnimationAsset</span><span class="token punctuation">(</span>NewAnimToPlay<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tSingleNodeInstance<span class="token operator">-&gt;</span><span class="token function">SetPlaying</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span> AnimScriptInstance <span class="token operator">!=</span> <span class="token keyword">nullptr</span> <span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogAnimation<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Currently in Animation Blueprint mode. Please change AnimationMode to Use Animation Asset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),d=(0,t.Lk)("p",null,"UE5.2版本中PlayAnimation 和SetAnimation 都能更新动画，但都不能解决材质Bug!",-1),k=(0,t.Fv)('<h3 id="一-动态创建组件" tabindex="-1"><a class="header-anchor" href="#一-动态创建组件"><span>一. 动态创建组件</span></a></h3><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_1-使用-newobject-和-registercomponent" tabindex="-1"><a class="header-anchor" href="#_1-使用-newobject-和-registercomponent"><span>1.使用 <code>NewObject</code> 和 <code>RegisterComponent</code>：</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// 创建 Actor Component</span>\nUSkeletalMeshComponent<span class="token operator">*</span> SkeletalMeshComponent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">NewObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>USkeletalMeshComponent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;SkeletalMeshComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 注册组件</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">RegisterComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-使用-addinstancecomponent" tabindex="-1"><a class="header-anchor" href="#_2-使用-addinstancecomponent"><span>2. 使用 <code>AddInstanceComponent</code>：</span></a></h4><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>USkeletalMeshComponent<span class="token operator">*</span> SkeletalMeshComponent <span class="token operator">=</span> <span class="token function">AddInstanceComponent</span><span class="token punctuation">(</span><span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;SkeletalMeshComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetRelativeTransform</span><span class="token punctuation">(</span>InStruct<span class="token punctuation">.</span>SkeletalTransform<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',6),m=(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"AddInstanceComponent"),(0,t.eW)(" 是 "),(0,t.Lk)("code",null,"UActorComponent"),(0,t.eW)(" 的一个成员函数，用于在运行时添加一个新的组件实例到 AActor 上。")]),(0,t.Lk)("li",null,[(0,t.eW)("这个方法内部实际上也是使用了 "),(0,t.Lk)("code",null,"NewObject"),(0,t.eW)(" 和 "),(0,t.Lk)("code",null,"RegisterComponent"),(0,t.eW)("，但是提供了更简化的接口，特别是在 AActor 子类中更方便。")])],-1),v=(0,t.Lk)("h3",{id:"二-缓存材质-传递材质",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#二-缓存材质-传递材质"},[(0,t.Lk)("span",null,"二. 缓存材质，传递材质")])],-1),g=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),b=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// 其中SkeletalMesh为传入的新的骨骼网格物体，请自己判断原始模型上有没有材质</span>\nTArray<span class="token operator">&lt;</span>FSkeletalMaterial<span class="token operator">&gt;</span> CurrentMats <span class="token operator">=</span> SkeletalMesh<span class="token operator">-&gt;</span><span class="token function">GetMaterials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetSkeletalMesh</span><span class="token punctuation">(</span>SkeletalMesh<span class="token punctuation">)</span><span class="token punctuation">;</span>\nSkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetMaterials</span><span class="token punctuation">(</span>CurrentMats<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>正确的应该是：</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>TArray<span class="token operator">&lt;</span>FSkeletalMaterial<span class="token operator">&gt;</span> CurrentMats <span class="token operator">=</span> SkeletalMesh<span class="token operator">-&gt;</span><span class="token function">GetMaterials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>CurrentMats<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span>int32 i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>CurrentMats<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n    SkeletalMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetMaterial</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>CurrentMats<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>MaterialInterface<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),h={},f=(0,s(66262).A)(h,[["render",function(n,a){const s=(0,t.g2)("chatmessage"),e=(0,t.g2)("gifwithbutton");return(0,t.uX)(),(0,t.CE)("div",null,[l,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 起因是这样得，我在做角色皮肤切换效果 ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 然后呢？ ")])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 按正常人的思维来说，只要设置新的骨骼网格体+播放指定动画就行了！ ")])),_:1}),i,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 一开始我只使用了前面的设置蒙皮资产和更新切换不同的角色，实现的非常完美！ ")])),_:1}),(0,t.bF)(e,{src:"../../assets/unrealgif/hpimpove09.gif"}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 然后我把后面的节点也用上了 ")])),_:1}),u,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 悲剧发生了！切换动画后角色的材质ID出现了错位。 ")])),_:1}),(0,t.bF)(e,{src:"../../assets/unrealgif/hpimpove10.gif"}),(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(" 我翻开了源码发现了这里两段函数！ ")])),_:1}),r,(0,t.bF)(s,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[d])),_:1}),(0,t.bF)(s,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 目前有两个解决方案： ")])),_:1}),k,(0,t.bF)(s,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[m])),_:1}),v,g,(0,t.bF)(s,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 注意不要偷懒直接用SetMaterials,GetMaterials 返回的是 Skeletal Mesh 中的材质数组的一个拷贝，而不是对原始数组的引用。 ")])),_:1}),b])}]]),S=JSON.parse('{"path":"/unreal/error_%E9%94%99%E8%AF%AF_/09SkeletalMeshAnimError.html","title":"Error9.骨骼网格体动画天坑！","lang":"zh-CN","frontmatter":{"title":"Error9.骨骼网格体动画天坑！","order":9,"category":["u++"],"description":"202411/13补 UE5.4BUG已经修复，5.3没试过，5.2是有这个问题的","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/error_%E9%94%99%E8%AF%AF_/09SkeletalMeshAnimError.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"Error9.骨骼网格体动画天坑！"}],["meta",{"property":"og:description","content":"202411/13补 UE5.4BUG已经修复，5.3没试过，5.2是有这个问题的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-13T14:33:06.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-11-13T14:33:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Error9.骨骼网格体动画天坑！\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-13T14:33:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"一. 动态创建组件","slug":"一-动态创建组件","link":"#一-动态创建组件","children":[]},{"level":3,"title":"二. 缓存材质，传递材质","slug":"二-缓存材质-传递材质","link":"#二-缓存材质-传递材质","children":[]}],"git":{"createdTime":1706221621000,"updatedTime":1731508386000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":5}]},"readingTime":{"minutes":2.08,"words":623},"filePathRelative":"unreal/error[错误]/09SkeletalMeshAnimError.md","localizedDate":"2024年1月25日","excerpt":"<blockquote>\\n<p>202411/13补\\nUE5.4BUG已经修复，5.3没试过，5.2是有这个问题的</p>\\n</blockquote>\\n\\n\\n\\n<figure><figcaption></figcaption></figure>\\n\\n","autoDesc":true}')}}]);