"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[8122],{67452:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>l,data:()=>c});var o=r(20641);const n=[(0,o.Fv)('<h3 id="_1-bignoreclientmovementerrorchecksandcorrection" tabindex="-1"><a class="header-anchor" href="#_1-bignoreclientmovementerrorchecksandcorrection"><span>1. <code>bIgnoreClientMovementErrorChecksAndCorrection</code></span></a></h3><ul><li><p><strong>用途</strong>:</p><ul><li>当这个参数设置为 <code>true</code> 时，服务器会忽略来自客户端的移动误差修正请求。</li><li>默认情况下，服务器会监控客户端的移动状态，如果发现客户端的位置和服务器位置之间有显著差异，服务器会进行位置纠正，将客户端“拉回”正确的位置。</li><li>开启这个参数后，服务器将不再做这种误差校正，从而避免频繁的客户端位置纠正。但这样做可能会允许客户端稍微偏离服务器记录的位置。</li></ul></li><li><p><strong>适用场景</strong>:</p><ul><li>在某些网络游戏中，如果移动非常频繁，位置纠正可能会导致玩家感觉卡顿。使用 <code>bIgnoreClientMovementErrorChecksAndCorrection</code> 可以减少这种不必要的“位置拉扯”。</li><li>它更适合那些对位置精确度要求不高的场景，比如开放世界中的一些非战斗场景。</li></ul></li></ul><h3 id="_2-bserveracceptclientauthoritativeposition" tabindex="-1"><a class="header-anchor" href="#_2-bserveracceptclientauthoritativeposition"><span>2. <code>bServerAcceptClientAuthoritativePosition</code></span></a></h3><ul><li><p><strong>用途</strong>:</p><ul><li>当设置为 <code>true</code> 时，服务器会接受客户端发送的权威位置。这意味着客户端可以告知服务器自己的准确位置，而服务器会“相信”客户端的数据。</li><li>这种方式会让客户端具有较大的控制权，适用于那些延迟较高、需要更流畅移动表现的场景，比如赛车游戏、跑酷游戏等。</li><li><strong>需要注意安全性</strong>: 给予客户端权威位置的权限会存在被利用的风险（例如作弊）。因此，通常需要额外的机制来限制和监控客户端的权威请求。</li></ul></li><li><p><strong>适用场景</strong>:</p><ul><li>适合需要快速移动响应的游戏，比如赛车、飞行、或角色快速闪避等场景。</li><li>对位置精度要求不高的情况下，可以提高客户端的操作响应速度，减少位置同步的滞后感。</li></ul></li></ul>',4)],i={},l=(0,r(66262).A)(i,[["render",function(e,t){return(0,o.uX)(),(0,o.CE)("div",null,n)}]]),c=JSON.parse('{"path":"/unreal/network_%E7%BD%91%E7%BB%9C_/2.5-GamePlayNetWork.html","title":"NT-2.4|网络优化|网络抖动","lang":"zh-CN","frontmatter":{"title":"NT-2.4|网络优化|网络抖动","order":28,"category":["unreal"],"description":"1. bIgnoreClientMovementErrorChecksAndCorrection 用途: 当这个参数设置为 true 时，服务器会忽略来自客户端的移动误差修正请求。 默认情况下，服务器会监控客户端的移动状态，如果发现客户端的位置和服务器位置之间有显著差异，服务器会进行位置纠正，将客户端“拉回”正确的位置。 开启这个参数后，服务器将不再做...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/network_%E7%BD%91%E7%BB%9C_/2.5-GamePlayNetWork.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"NT-2.4|网络优化|网络抖动"}],["meta",{"property":"og:description","content":"1. bIgnoreClientMovementErrorChecksAndCorrection 用途: 当这个参数设置为 true 时，服务器会忽略来自客户端的移动误差修正请求。 默认情况下，服务器会监控客户端的移动状态，如果发现客户端的位置和服务器位置之间有显著差异，服务器会进行位置纠正，将客户端“拉回”正确的位置。 开启这个参数后，服务器将不再做..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-25T23:34:33.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-10-25T23:34:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NT-2.4|网络优化|网络抖动\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-25T23:34:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"1. bIgnoreClientMovementErrorChecksAndCorrection","slug":"_1-bignoreclientmovementerrorchecksandcorrection","link":"#_1-bignoreclientmovementerrorchecksandcorrection","children":[]},{"level":3,"title":"2. bServerAcceptClientAuthoritativePosition","slug":"_2-bserveracceptclientauthoritativeposition","link":"#_2-bserveracceptclientauthoritativeposition","children":[]}],"git":{"createdTime":1729899273000,"updatedTime":1729899273000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"unreal/network[网络]/2.5-GamePlayNetWork.md","localizedDate":"2024年10月25日","excerpt":"<h3>1. <code>bIgnoreClientMovementErrorChecksAndCorrection</code></h3>\\n<ul>\\n<li>\\n<p><strong>用途</strong>:</p>\\n<ul>\\n<li>当这个参数设置为 <code>true</code> 时，服务器会忽略来自客户端的移动误差修正请求。</li>\\n<li>默认情况下，服务器会监控客户端的移动状态，如果发现客户端的位置和服务器位置之间有显著差异，服务器会进行位置纠正，将客户端“拉回”正确的位置。</li>\\n<li>开启这个参数后，服务器将不再做这种误差校正，从而避免频繁的客户端位置纠正。但这样做可能会允许客户端稍微偏离服务器记录的位置。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>适用场景</strong>:</p>\\n<ul>\\n<li>在某些网络游戏中，如果移动非常频繁，位置纠正可能会导致玩家感觉卡顿。使用 <code>bIgnoreClientMovementErrorChecksAndCorrection</code> 可以减少这种不必要的“位置拉扯”。</li>\\n<li>它更适合那些对位置精确度要求不高的场景，比如开放世界中的一些非战斗场景。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')}}]);