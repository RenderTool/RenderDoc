"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[6185],{62149:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>c});var t=a(20641);const p=(0,t.Fv)('<ol><li><p><strong>表达式结束：</strong> 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 赋值语句</span>\ncout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> <span class="token comment">// 函数调用语句</span>\nx <span class="token operator">=</span> y <span class="token operator">+</span> z<span class="token punctuation">;</span> <span class="token comment">// 算术表达式</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>控制结构：</strong> 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 代码块</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;x是正数&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 代码块</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;x不是正数&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 循环体</span>\n    cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>类定义：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>\n<span class="token keyword">public</span><span class="token operator">:</span>\n    <span class="token keyword">void</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 函数体</span>\n        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello from MyClass!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">int</span> myVariable<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 注意类定义结束时有分号</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>结构体：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>\n   <span class="token keyword">int</span> myVariable<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">void</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 函数体</span>\n        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello from MyClass!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 注意结构体定义结束时有分号</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="扩展链接" tabindex="-1"><a class="header-anchor" href="#扩展链接"><span>扩展链接</span></a></h3>',2),e={href:"https://zh.cppreference.com/w/cpp/language/punctuators",target:"_blank",rel:"noopener noreferrer"},o={},l=(0,a(66262).A)(o,[["render",function(n,s){const a=(0,t.g2)("chatmessage"),o=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.bF)(a,{avatar:"../../../assets/emoji/blzt.png",avatarWidth:40},{default:(0,t.k6)((()=>[(0,t.eW)(' Baba！什么地方用";" ')])),_:1}),(0,t.bF)(a,{avatar:"../../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 在C++中，分号（;）是语句结束的标志。在几乎所有的C++语句中，都需要使用分号来表示语句的结束。以下是一些常见的情况： ")])),_:1}),p,(0,t.Lk)("p",null,[(0,t.Lk)("a",e,[(0,t.eW)("C++标点"),(0,t.bF)(o)])])])}]]),c=JSON.parse('{"path":"/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/0-where%20use%20a%20semicolon.html","title":"c++0.什么地方用\\";\\"","lang":"zh-CN","frontmatter":{"title":"c++0.什么地方用\\";\\"","order":1,"category":["c++"],"description":"表达式结束： 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如： 控制结构： 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如： 类定义： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： 结构体： 在类的定义中，每个成员函数的实现都需要用分号结束。例如：","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/0-where%20use%20a%20semicolon.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++0.什么地方用\\";\\""}],["meta",{"property":"og:description","content":"表达式结束： 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如： 控制结构： 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如： 类定义： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： 结构体： 在类的定义中，每个成员函数的实现都需要用分号结束。例如："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T22:07:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-02T22:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++0.什么地方用\\\\\\";\\\\\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-02T22:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"扩展链接","slug":"扩展链接","link":"#扩展链接","children":[]}],"git":{"createdTime":1700738130000,"updatedTime":1704233233000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":3},{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.17,"words":351},"filePathRelative":"language/cpp/BaseGuide[基础概念]/0-where use a semicolon.md","localizedDate":"2023年11月23日","excerpt":"\\n\\n<ol>\\n<li>\\n<p><strong>表达式结束：</strong> 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 赋值语句</span>\\ncout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello, World!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 函数调用语句</span>\\nx <span class=\\"token operator\\">=</span> y <span class=\\"token operator\\">+</span> z<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 算术表达式</span>\\n</code></pre></div></li>\\n<li>\\n<p><strong>控制结构：</strong> 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 代码块</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"x是正数\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 代码块</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"x不是正数\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 循环体</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> i <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div></li>\\n<li>\\n<p><strong>类定义：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyClass</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">myFunction</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 函数体</span>\\n        cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello from MyClass!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">int</span> myVariable<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 注意类定义结束时有分号</span>\\n</code></pre></div></li>\\n<li>\\n<p><strong>结构体：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">MyClass</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token keyword\\">int</span> myVariable<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">myFunction</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 函数体</span>\\n        cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello from MyClass!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 注意结构体定义结束时有分号</span>\\n</code></pre></div></li>\\n</ol>","autoDesc":true}')}}]);