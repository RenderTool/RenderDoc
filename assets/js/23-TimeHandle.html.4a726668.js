"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[9491],{81315:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>i});var t=a(20641);const e=(0,t.Lk)("h3",{id:"导言",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#导言"},[(0,t.Lk)("span",null,"导言")])],-1),p=(0,t.Lk)("blockquote",null,[(0,t.Lk)("p",null,"在UE5中，往往有一些定时的需求，比如一段时间内开启护盾(当然这里咱们不考虑使用GAS的GE等效果来实现)，这时候往往需要自己设定一个定时器， 给定一个时间用来开启关闭特效。")],-1),o=(0,t.Fv)('<h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">UPROPERTY</span><span class="token punctuation">(</span>VisibleAnywhere<span class="token punctuation">,</span> BlueprintReadWrite<span class="token punctuation">,</span> Category<span class="token operator">=</span><span class="token string">&quot;DoodleJump&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">bool</span> bHasShield <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token function">UFUNCTION</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">void</span> <span class="token function">RemoveShield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t\n\t\n<span class="token keyword">void</span> <span class="token class-name">ADoodleJumpCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">GenerateShield_Implementation</span><span class="token punctuation">(</span><span class="token keyword">float</span> Time<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t\n\t<span class="token comment">// 如果之前没有护盾才播放护盾开启特效</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bHasShield<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token function">ShowShieldEffect</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\tbHasShield <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 重置计时器（重新计时 / 延长）</span>\n\t<span class="token function">GetWorldTimerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClearTimer</span><span class="token punctuation">(</span>ShieldTimerHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token function">GetWorldTimerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetTimer</span><span class="token punctuation">(</span>\n\t\tShieldTimerHandle<span class="token punctuation">,</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">,</span>\n\t\t<span class="token operator">&amp;</span>ADoodleJumpCharacter<span class="token double-colon punctuation">::</span>RemoveShield<span class="token punctuation">,</span>\n\t\tTime<span class="token punctuation">,</span>\n\t\t<span class="token boolean">false</span>\n\t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Shield %s for %.2f seconds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\tbHasShield <span class="token operator">?</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;extended&quot;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;activated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\tTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token class-name">ADoodleJumpCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">RemoveShield</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tbHasShield <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n\t<span class="token function">ShowShieldEffect</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Shield Expired&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关键点" tabindex="-1"><a class="header-anchor" href="#关键点"><span>关键点：</span></a></h3><ol><li><p><strong>ClearTimer</strong> 保证如果护盾还没结束就再次调用函数，定时器会被清掉重新开始。</p></li><li><p><strong>SetTimer</strong> 重新启动一个新的计时器。</p></li><li><p><strong>bHasShield</strong> 在调用函数时直接设为 <code>true</code>，到时间后 <code>RemoveShield()</code> 把它设回 <code>false</code>。</p></li></ol>',4),c={},l=(0,a(66262).A)(c,[["render",function(n,s){const a=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[e,p,(0,t.bF)(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:35},{default:(0,t.k6)((()=>[(0,t.eW)(" SO,U++中咱们该怎么开启定时器呢？ ")])),_:1}),(0,t.bF)(a,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 废话不多说，直接上代码 ")])),_:1}),o])}]]),i=JSON.parse('{"path":"/unreal/function_%E5%87%BD%E6%95%B0_/23-TimeHandle.html","title":"F23.Blueprintable|TimeHandle定时任务","lang":"zh-CN","frontmatter":{"title":"F23.Blueprintable|TimeHandle定时任务","order":23,"category":["u++"],"description":"导言 在UE5中，往往有一些定时的需求，比如一段时间内开启护盾(当然这里咱们不考虑使用GAS的GE等效果来实现)，这时候往往需要自己设定一个定时器， 给定一个时间用来开启关闭特效。 实现 关键点： ClearTimer 保证如果护盾还没结束就再次调用函数，定时器会被清掉重新开始。 SetTimer 重新启动一个新的计时器。 bHasShield 在调用...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/function_%E5%87%BD%E6%95%B0_/23-TimeHandle.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"F23.Blueprintable|TimeHandle定时任务"}],["meta",{"property":"og:description","content":"导言 在UE5中，往往有一些定时的需求，比如一段时间内开启护盾(当然这里咱们不考虑使用GAS的GE等效果来实现)，这时候往往需要自己设定一个定时器， 给定一个时间用来开启关闭特效。 实现 关键点： ClearTimer 保证如果护盾还没结束就再次调用函数，定时器会被清掉重新开始。 SetTimer 重新启动一个新的计时器。 bHasShield 在调用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-31T08:07:18.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-08-31T08:07:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F23.Blueprintable|TimeHandle定时任务\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-31T08:07:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"导言","slug":"导言","link":"#导言","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":3,"title":"关键点：","slug":"关键点","link":"#关键点","children":[]}],"git":{"createdTime":1756627638000,"updatedTime":1756627638000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":0.97,"words":290},"filePathRelative":"unreal/function[函数]/23-TimeHandle.md","localizedDate":"2025年8月31日","excerpt":"<h3>导言</h3>\\n<blockquote>\\n<p>在UE5中，往往有一些定时的需求，比如一段时间内开启护盾(当然这里咱们不考虑使用GAS的GE等效果来实现)，这时候往往需要自己设定一个定时器，\\n给定一个时间用来开启关闭特效。</p>\\n</blockquote>\\n\\n\\n<h3>实现</h3>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token function\\">UPROPERTY</span><span class=\\"token punctuation\\">(</span>VisibleAnywhere<span class=\\"token punctuation\\">,</span> BlueprintReadWrite<span class=\\"token punctuation\\">,</span> Category<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"DoodleJump\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">bool</span> bHasShield <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token function\\">UFUNCTION</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">RemoveShield</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\t\\n\\t\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">ADoodleJumpCharacter</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">GenerateShield_Implementation</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">float</span> Time<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t\\n\\t<span class=\\"token comment\\">// 如果之前没有护盾才播放护盾开启特效</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>bHasShield<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">ShowShieldEffect</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\tbHasShield <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token comment\\">// 重置计时器（重新计时 / 延长）</span>\\n\\t<span class=\\"token function\\">GetWorldTimerManager</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ClearTimer</span><span class=\\"token punctuation\\">(</span>ShieldTimerHandle<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">GetWorldTimerManager</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetTimer</span><span class=\\"token punctuation\\">(</span>\\n\\t\\tShieldTimerHandle<span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token operator\\">&amp;</span>ADoodleJumpCharacter<span class=\\"token double-colon punctuation\\">::</span>RemoveShield<span class=\\"token punctuation\\">,</span>\\n\\t\\tTime<span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token boolean\\">false</span>\\n\\t<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">UE_LOG</span><span class=\\"token punctuation\\">(</span>LogTemp<span class=\\"token punctuation\\">,</span> Log<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Shield %s for %.2f seconds\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n\\t\\tbHasShield <span class=\\"token operator\\">?</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"extended\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"activated\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n\\t\\tTime<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">ADoodleJumpCharacter</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">RemoveShield</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\tbHasShield <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">ShowShieldEffect</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token function\\">UE_LOG</span><span class=\\"token punctuation\\">(</span>LogTemp<span class=\\"token punctuation\\">,</span> Log<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Shield Expired\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}')}}]);