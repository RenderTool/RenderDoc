"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[7399],{98407:(n,a,e)=>{e.r(a),e.d(a,{comp:()=>F,data:()=>W});var s=e(20641);const t=e.p+"assets/img/ganepadfocus.01f3aec7.png",i=e.p+"assets/img/ganepadfocus03.3340f299.png",o=e.p+"assets/img/ganepadfocus02.611790d7.png",p=e.p+"assets/img/ganepadfocus05.d7fb54ea.png",c=e.p+"assets/img/ganepadfocus04.9229aa70.png",l=e.p+"assets/img/ganepadfocus06.a6c99faa.png",r=(0,s.Lk)("h3",{id:"_1-前提",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_1-前提"},[(0,s.Lk)("span",null,"1.前提")])],-1),u=(0,s.Lk)("h3",{id:"_2-去掉虚线选择轮廓",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_2-去掉虚线选择轮廓"},[(0,s.Lk)("span",null,"2.去掉虚线选择轮廓")])],-1),d=(0,s.Lk)("p",null,[(0,s.Lk)("strong",null,"编辑 - 项目首选项 - 用户界面"),(0,s.eW)(),(0,s.Lk)("code",null,"渲染焦点规则"),(0,s.eW)("设置为"),(0,s.Lk)("code",null,"从不")],-1),k=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:t,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),g=(0,s.Lk)("h3",{id:"_3-聚焦组件",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_3-聚焦组件"},[(0,s.Lk)("span",null,"3.聚焦组件")])],-1),m=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),f=(0,s.Lk)("h3",{id:"_4-重写函数getdesiredfocus",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_4-重写函数getdesiredfocus"},[(0,s.Lk)("span",null,"4.重写函数GetDesiredFocus")])],-1),v=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),h=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:p,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),b=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),L=(0,s.Lk)("h3",{id:"_5-吊用没有的函数-nativeonfocusreceived",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#_5-吊用没有的函数-nativeonfocusreceived"},[(0,s.Lk)("span",null,"5.吊用没有的函数 NativeOnFocusReceived")])],-1),y=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>FReply <span class="token class-name">UHeroSkinsWidget</span><span class="token double-colon punctuation">::</span><span class="token function">NativeOnFocusReceived</span><span class="token punctuation">(</span><span class="token keyword">const</span> FGeometry<span class="token operator">&amp;</span> InGeometry<span class="token punctuation">,</span> <span class="token keyword">const</span> FFocusEvent<span class="token operator">&amp;</span> InFocusEvent<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> UCommonInputSubsystem<span class="token operator">*</span> InputSubsystem <span class="token operator">=</span> <span class="token function">GetInputSubsystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>InputSubsystem <span class="token operator">&amp;&amp;</span> InputSubsystem<span class="token operator">-&gt;</span><span class="token function">GetCurrentInputType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ECommonInputType<span class="token double-colon punctuation">::</span>Gamepad<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>SkinListView<span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\tSkinListView<span class="token operator">-&gt;</span><span class="token function">NavigateToIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\tSkinListView<span class="token operator">-&gt;</span><span class="token function">SetSelectedIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token class-name">FReply</span><span class="token double-colon punctuation">::</span><span class="token function">Handled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> <span class="token class-name">FReply</span><span class="token double-colon punctuation">::</span><span class="token function">Unhandled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),_={},F=(0,e(66262).A)(_,[["render",function(n,a){const e=(0,s.g2)("chatmessage");return(0,s.uX)(),(0,s.CE)("div",null,[(0,s.bF)(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 加了一个ListView或者TileView，用手柄发现无法操作! ")])),_:1}),(0,s.bF)(e,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这是一个非常坑的东西！需要保证下面几个操作。 ")])),_:1}),r,(0,s.bF)(e,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 需要使用CommonUI ")])),_:1}),u,(0,s.bF)(e,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[d])),_:1}),k,g,(0,s.bF)(e,{avatar:"../../assets/emoji/new2.png",avatarWidth:50,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 和聚焦组件是否开启半毛钱关系没有，真的坑 ")])),_:1}),m,f,(0,s.bF)(e,{avatar:"../../assets/emoji/new1.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这样写是没用的 ")])),_:1}),v,(0,s.bF)(e,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 最好是判断现在是不是手柄输入，然后导航到索引为0的位置。 ")])),_:1}),h,(0,s.bF)(e,{avatar:"../../assets/emoji/bqb01.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 导航和设置有区别吗？ ")])),_:1}),(0,s.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 有大区别！，导航到位置只是导航不会触发，设置则会触发点击事件。 ")])),_:1}),b,L,(0,s.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 我看Lyra还写了一个接口函数，实测吊用没有，我真的想吐槽这方面官方文档真的不够仔细，能不能让开发者更专注游戏细节而不是这种基本细节！ ")])),_:1}),y])}]]),W=JSON.parse('{"path":"/unreal/error_%E9%94%99%E8%AF%AF_/11GamePadFocus.html","title":"Error11. ListView手柄聚焦失效无法操作","lang":"zh-CN","frontmatter":{"title":"Error11. ListView手柄聚焦失效无法操作","order":11,"category":["u++"],"description":"1.前提 2.去掉虚线选择轮廓 3.聚焦组件 4.重写函数GetDesiredFocus 5.吊用没有的函数 NativeOnFocusReceived","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/error_%E9%94%99%E8%AF%AF_/11GamePadFocus.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"Error11. ListView手柄聚焦失效无法操作"}],["meta",{"property":"og:description","content":"1.前提 2.去掉虚线选择轮廓 3.聚焦组件 4.重写函数GetDesiredFocus 5.吊用没有的函数 NativeOnFocusReceived"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T06:53:33.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-30T06:53:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Error11. ListView手柄聚焦失效无法操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-30T06:53:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"1.前提","slug":"_1-前提","link":"#_1-前提","children":[]},{"level":3,"title":"2.去掉虚线选择轮廓","slug":"_2-去掉虚线选择轮廓","link":"#_2-去掉虚线选择轮廓","children":[]},{"level":3,"title":"3.聚焦组件","slug":"_3-聚焦组件","link":"#_3-聚焦组件","children":[]},{"level":3,"title":"4.重写函数GetDesiredFocus","slug":"_4-重写函数getdesiredfocus","link":"#_4-重写函数getdesiredfocus","children":[]},{"level":3,"title":"5.吊用没有的函数 NativeOnFocusReceived","slug":"_5-吊用没有的函数-nativeonfocusreceived","link":"#_5-吊用没有的函数-nativeonfocusreceived","children":[]}],"git":{"createdTime":1706597613000,"updatedTime":1706597613000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"unreal/error[错误]/11GamePadFocus.md","localizedDate":"2024年1月30日","excerpt":"\\n\\n<h3>1.前提</h3>\\n\\n<h3>2.去掉虚线选择轮廓</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n<h3>3.聚焦组件</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n<h3>4.重写函数GetDesiredFocus</h3>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n\\n<figure><figcaption></figcaption></figure>","autoDesc":true}')}}]);