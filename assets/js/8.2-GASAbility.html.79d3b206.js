"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[8114],{38686:(a,n,t)=>{a.exports=t.p+"assets/img/GASuse006.91dd6bfe.png"},69715:(a,n,t)=>{t.r(n),t.d(n,{comp:()=>la,data:()=>oa});var s=t(20641);const e=t.p+"assets/img/GA_004.ef42d413.png";var i=t(38686);const l=t.p+"assets/img/GA_003.ef72c01e.png",o=t.p+"assets/img/ab001.bb7c3a06.png",p=t.p+"assets/img/ab002.0fcac70d.jpg",c=t.p+"assets/img/ab003.a6f4dc6a.svg",r=t.p+"assets/img/ab004.c6c11bcf.svg",u=t.p+"assets/img/GA_001.533590aa.jpg",d=t.p+"assets/img/GA_002.e6ee89ff.png",k=t.p+"assets/img/ab07.2fa429bb.png",b=t.p+"assets/img/ab005.54e936e3.png",v=t.p+"assets/img/ab08.7c14c0da.png",m=t.p+"assets/img/GA_010.2273eab4.png",y=t.p+"assets/img/ab09.597c3b74.png",g=t.p+"assets/img/ab10.fc88cd84.png",A=t.p+"assets/img/ab006.eef14766.png",f=t.p+"assets/img/GA_007.5725bf3f.png",h=(0,s.Lk)("h2",{id:"ability",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#ability"},[(0,s.Lk)("span",null,"Ability")])],-1),L=(0,s.Lk)("h3",{id:"giveability",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#giveability"},[(0,s.Lk)("span",null,"GiveAbility")])],-1),W=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:e,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),x=(0,s.Fv)('<figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>\t<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> BlueprintAuthorityOnly<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;Gameplay Abilities&quot;</span><span class="token punctuation">,</span> meta <span class="token operator">=</span> <span class="token punctuation">(</span>DisplayName <span class="token operator">=</span> <span class="token string">&quot;Give Ability&quot;</span><span class="token punctuation">,</span> ScriptName <span class="token operator">=</span> <span class="token string">&quot;GiveAbility&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\tFGameplayAbilitySpecHandle <span class="token function">K2_GiveAbility</span><span class="token punctuation">(</span>TSubclassOf<span class="token operator">&lt;</span>UGameplayAbility<span class="token operator">&gt;</span> AbilityClass<span class="token punctuation">,</span> int32 Level <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> int32 InputID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="tryactivateability" tabindex="-1"><a class="header-anchor" href="#tryactivateability"><span>TryActivateAbility</span></a></h3><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">TryActivateAbility</span><span class="token punctuation">(</span>GameplayAbilitySpec<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> bAllowRemoteActivation<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',6),G=(0,s.Lk)("p",null,[(0,s.eW)("激活一个 "),(0,s.Lk)("code",null,"GA"),(0,s.eW)("，并根据 "),(0,s.Lk)("strong",null,"网络角色"),(0,s.eW)(" 和 "),(0,s.Lk)("strong",null,"能力的 NetExecutionPolicy"),(0,s.eW)(" 决定执行位置、是否预测、本地是否运行等。")],-1),C=(0,s.Fv)('<figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="internalservertryactivateability" tabindex="-1"><a class="header-anchor" href="#internalservertryactivateability"><span>InternalServerTryActivateAbility</span></a></h2><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',5),F=(0,s.Lk)("p",null,[(0,s.eW)("也就说无论是客户端还是服务器最终都会执行一次"),(0,s.Lk)("code",null,"InternalServerTryActivateAbility")],-1),w=(0,s.Lk)("p",null,"没错，主要是用来检测一些触发条件、响应不同的网络策略。",-1),I=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UAbilitySystemComponent</span><span class="token double-colon punctuation">::</span><span class="token function">ServerTryActivateAbility_Implementation</span><span class="token punctuation">(</span>FGameplayAbilitySpecHandle Handle<span class="token punctuation">,</span> <span class="token keyword">bool</span> InputPressed<span class="token punctuation">,</span> FPredictionKey PredictionKey<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token function">InternalServerTryActivateAbility</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> InputPressed<span class="token punctuation">,</span> PredictionKey<span class="token punctuation">,</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网络权限" tabindex="-1"><a class="header-anchor" href="#网络权限"><span>网络权限</span></a></h3>',2),E=(0,s.Lk)("p",null,[(0,s.eW)("也就说开启"),(0,s.Lk)("code",null,"bAllowRemoteActivation"),(0,s.eW)(" 默认本地也会执行一次？")],-1),_=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),S=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),T=(0,s.Lk)("p",null,[(0,s.eW)("虽然Sever是权威。但是，实际上我们不得不考虑网络延迟的影响，因此开启 "),(0,s.Lk)("code",null,"bAllowRemoteActivation"),(0,s.eW)(" 主要目的还是为了能够使用客户端预测的功能。")],-1),q=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,[(0,s.eW)("可以看到开启了"),(0,s.Lk)("code",null,"bAllowRemoteActivation"),(0,s.eW)("后客户端上也会执行一次，只不过要注意客户端上没有权限。")])],-1),j=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:k,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),H=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,"没有开启网络预测,会出现网络矫正带来的回滚卡顿")],-1),D=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,"开启网络预测后，极大的优化了回滚")],-1),P=(0,s.Fv)('<h3 id="netexecutionpolicy" tabindex="-1"><a class="header-anchor" href="#netexecutionpolicy"><span>NetExecutionPolicy</span></a></h3><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>NetExecutionPolicy</th><th>本地调用位置</th><th>远程调用处理逻辑</th></tr></thead><tbody><tr><td><code>LocalOnly</code></td><td>客户端</td><td>不允许远程激活</td></tr><tr><td><code>LocalPredicted</code></td><td>客户端</td><td>允许客户端预测 → 发起激活 RPC</td></tr><tr><td><code>ServerOnly</code></td><td>服务器</td><td>客户端请求服务器执行 → <code>CallServerTry...</code></td></tr><tr><td><code>ServerInitiated</code></td><td>服务器</td><td>客户端无法主动触发，必须由服务器调用</td></tr></tbody></table><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4),z=(0,s.Lk)("p",null,[(0,s.eW)("除了外部控制要不要由服务器执行，同时GA内部也可以设置策略，默认用到是"),(0,s.Lk)("code",null,"LocalPredicted")],-1),N=(0,s.Lk)("h3",{id:"abilityinstancingpolicy-实例化策略",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#abilityinstancingpolicy-实例化策略"},[(0,s.Lk)("span",null,"AbilityInstancingPolicy|实例化策略")])],-1),O=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),R=(0,s.Lk)("p",null,[(0,s.Lk)("code",null,"InstancedPerActor"),(0,s.eW)(" 会尝试复用某个创建好的"),(0,s.Lk)("code",null,"Handle"),(0,s.eW)("从而提高性能。不同的实例化策略，对数据的保存能力也不同")],-1),B=(0,s.Fv)("<table><thead><tr><th>枚举值</th><th>含义与用途</th><th>备注</th></tr></thead><tbody><tr><td><code>NonInstanced</code></td><td>能力不创建实例。所有调用共享同一个 Ability 类默认对象（CDO）</td><td>高性能、无状态的能力（如纯粹触发效果）；不能调用 EndAbility，不能存储状态</td></tr><tr><td><code>InstancedPerActor</code></td><td>每个拥有该能力的 Actor 创建一个实例，激活时复用该实例</td><td>支持存储状态、调用 EndAbility、可以被多个激活流程控制；最常用的策略</td></tr><tr><td><code>InstancedPerExecution</code></td><td>每次激活都会创建一个新的 Ability 实例</td><td>用于需要并发多个激活、每次激活有独立状态的能力（如持续型技能、DOT）</td></tr></tbody></table>",1),U=(0,s.Lk)("h4",{id:"instancedperexecution",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#instancedperexecution"},[(0,s.Lk)("span",null,"InstancedPerExecution")])],-1),K=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),M=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),Z=(0,s.Lk)("h4",{id:"instancedperactor",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#instancedperactor"},[(0,s.Lk)("span",null,"InstancedPerActor")])],-1),X=(0,s.Lk)("h2",{id:"callactivateability",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#callactivateability"},[(0,s.Lk)("span",null,"CallActivateAbility")])],-1),J=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UGameplayAbility</span><span class="token double-colon punctuation">::</span><span class="token function">CallActivateAbility</span><span class="token punctuation">(</span><span class="token keyword">const</span> FGameplayAbilitySpecHandle Handle<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActorInfo<span class="token operator">*</span> ActorInfo<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActivationInfo ActivationInfo<span class="token punctuation">,</span> FOnGameplayAbilityEnded<span class="token double-colon punctuation">::</span>FDelegate<span class="token operator">*</span> OnGameplayAbilityEndedDelegate<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayEventData<span class="token operator">*</span> TriggerEventData<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token function">PreActivate</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> ActorInfo<span class="token punctuation">,</span> ActivationInfo<span class="token punctuation">,</span> OnGameplayAbilityEndedDelegate<span class="token punctuation">,</span> TriggerEventData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">ActivateAbility</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> ActorInfo<span class="token punctuation">,</span> ActivationInfo<span class="token punctuation">,</span> TriggerEventData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UGameplayAbility</span><span class="token double-colon punctuation">::</span><span class="token function">ActivateAbility</span><span class="token punctuation">(</span><span class="token keyword">const</span> FGameplayAbilitySpecHandle Handle<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActorInfo<span class="token operator">*</span> ActorInfo<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActivationInfo ActivationInfo<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayEventData<span class="token operator">*</span> TriggerEventData<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>TriggerEventData <span class="token operator">&amp;&amp;</span> bHasBlueprintActivateFromEvent<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// A Blueprinted ActivateAbility function must call CommitAbility somewhere in its execution chain.</span>\n\t\t<span class="token function">K2_ActivateAbilityFromEvent</span><span class="token punctuation">(</span><span class="token operator">*</span>TriggerEventData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bHasBlueprintActivate<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// A Blueprinted ActivateAbility function must call CommitAbility somewhere in its execution chain.</span>\n\t\t<span class="token function">K2_ActivateAbility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bHasBlueprintActivateFromEvent<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogAbilitySystem<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Ability %s expects event data but none is being supplied. Use &#39;Activate Ability&#39; instead of &#39;Activate Ability From Event&#39; in the Blueprint.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">constexpr</span> <span class="token keyword">bool</span> bReplicateEndAbility <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">constexpr</span> <span class="token keyword">bool</span> bWasCancelled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t\t<span class="token function">EndAbility</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> ActorInfo<span class="token punctuation">,</span> ActivationInfo<span class="token punctuation">,</span> bReplicateEndAbility<span class="token punctuation">,</span> bWasCancelled<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">else</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token comment">// Native child classes should override ActivateAbility and call CommitAbility.</span>\n\t\t<span class="token comment">// CommitAbility is used to do one last check for spending resources.</span>\n\t\t<span class="token comment">// Previous versions of this function called CommitAbility but that prevents the callers</span>\n\t\t<span class="token comment">// from knowing the result. Your override should call it and check the result.</span>\n\t\t<span class="token comment">// Here is some starter code:</span>\n\t\t\n\t\t<span class="token comment">//\tif (!CommitAbility(Handle, ActorInfo, ActivationInfo))</span>\n\t\t<span class="token comment">//\t{\t\t\t</span>\n\t\t<span class="token comment">//\t\tconstexpr bool bReplicateEndAbility = true;</span>\n\t\t<span class="token comment">//\t\tconstexpr bool bWasCancelled = true;</span>\n\t\t<span class="token comment">//\t\tEndAbility(Handle, ActorInfo, ActivationInfo, bReplicateEndAbility, bWasCancelled);</span>\n\t\t<span class="token comment">//\t}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commitability" tabindex="-1"><a class="header-anchor" href="#commitability"><span>CommitAbility</span></a></h3>',3),Y=(0,s.Lk)("p",null,[(0,s.eW)("但是我有个疑问啊！"),(0,s.Lk)("code",null,"CommitAbility"),(0,s.eW)("什么时候执行的？")],-1),Q=(0,s.Lk)("p",null,[(0,s.eW)("注释已经写的非常明白了，"),(0,s.Lk)("code",null,"CommitAbility"),(0,s.eW)("要在"),(0,s.Lk)("code",null,"K2_ActivateAbilityFromEvent"),(0,s.eW)("后执行，当然C++中习惯在重载"),(0,s.Lk)("code",null,"ActivateAbility"),(0,s.eW)("中执行")],-1),V=(0,s.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">bool</span> <span class="token class-name">UGameplayAbility</span><span class="token double-colon punctuation">::</span><span class="token function">CommitAbility</span><span class="token punctuation">(</span><span class="token keyword">const</span> FGameplayAbilitySpecHandle Handle<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActorInfo<span class="token operator">*</span> ActorInfo<span class="token punctuation">,</span> <span class="token keyword">const</span> FGameplayAbilityActivationInfo ActivationInfo<span class="token punctuation">,</span> OUT FGameplayTagContainer<span class="token operator">*</span> OptionalRelevantTags<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// Last chance to fail (maybe we no longer have resources to commit since we after we started this ability activation)</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">CommitCheck</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> ActorInfo<span class="token punctuation">,</span> ActivationInfo<span class="token punctuation">,</span> OptionalRelevantTags<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token function">CommitExecute</span><span class="token punctuation">(</span>Handle<span class="token punctuation">,</span> ActorInfo<span class="token punctuation">,</span> ActivationInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// Fixme: Should we always call this or only if it is implemented? A noop may not hurt but could be bad for perf (storing a HasBlueprintCommit per instance isn&#39;t good either)</span>\n\t<span class="token function">K2_CommitExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// Broadcast this commitment</span>\n\tActorInfo<span class="token operator">-&gt;</span>AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">NotifyAbilityCommit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commitability可选变体" tabindex="-1"><a class="header-anchor" href="#commitability可选变体"><span>CommitAbility可选变体</span></a></h3><table><thead><tr><th>函数名</th><th>功能说明</th><th>默认行为</th></tr></thead><tbody><tr><td><code>CommitAbility()</code></td><td>尝试提交能力，消耗 GE 资源（如消耗蓝量、加 CD）并应用冷却与花费</td><td>会同时尝试调用 <code>CommitAbilityCost()</code> 和 <code>CommitAbilityCooldown()</code></td></tr><tr><td><code>CommitAbilityCooldown()</code></td><td>单独提交冷却效果（Cooldown GE），不处理消耗资源（如 Mana）</td><td>只提交冷却，不提交消耗</td></tr><tr><td><code>CommitAbilityCost()</code></td><td>单独提交资源消耗（Cost GE），不处理冷却</td><td>只提交资源消耗，不触发冷却</td></tr></tbody></table><hr>',4),$=(0,s.Lk)("p",null,[(0,s.eW)("注意，如果你做技能冷却类的效果，需要手动提交一次"),(0,s.Lk)("code",null,"CommitAbilityCooldown()")],-1),aa=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),na=(0,s.Lk)("h3",{id:"上下文",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#上下文"},[(0,s.Lk)("span",null,"上下文")])],-1),ta=(0,s.Lk)("figure",null,[(0,s.Lk)("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),(0,s.Lk)("figcaption")],-1),sa=(0,s.Lk)("h3",{id:"endability",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#endability"},[(0,s.Lk)("span",null,"EndAbility")])],-1),ea=(0,s.Lk)("p",null,[(0,s.eW)("最后需要通过"),(0,s.Lk)("code",null,"EndAbility"),(0,s.eW)("结束掉本次GA")],-1),ia={},la=(0,t(66262).A)(ia,[["render",function(a,n){const t=(0,s.g2)("chatmessage"),e=(0,s.g2)("gifwithbutton");return(0,s.uX)(),(0,s.CE)("div",null,[(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" GameplayAbility 技能类，是对技能的抽象，后文用GA简称，ASC则是 AbilitySystemComponent 的简写 ")])),_:1}),h,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 怎么给我的角色设定技能呢？ ")])),_:1}),L,W,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" GA本身受ASC组件维护，所以可以通过ASC本身授权、激活,激活操作则在服务器上执行。 ")])),_:1}),x,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[G])),_:1}),C,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[F])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[w])),_:1}),I,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[E])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 是的，如果你关闭了就只会发起RPC，从Sever端执行。 ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 那岂不是更好？ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 服务端具有权威性，所有角色都持有技能 ")])),_:1}),_,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 客户端则本地玩家控制的角色中持有 ")])),_:1}),S,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[T])),_:1}),q,j,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 这也是我们实现网络预测同步的关键。 ")])),_:1}),H,(0,s.bF)(e,{src:"../../assets/unrealgif/hpup55.gif"}),D,(0,s.bF)(e,{src:"../../assets/unrealgif/hpup56.gif"}),P,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[z])),_:1}),N,O,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[R])),_:1}),B,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 不是很懂啊！有什么区别？ ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 你用一个Flip节点就能看出猫腻了。 ")])),_:1}),U,K,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 第二次按下后并没有执行Flip ,并没有再次执行，同时这种模式也可以不加EndAbility，因为没错都会重新创建实例激活。 ")])),_:1}),M,Z,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 每个拥有该能力的 Actor 创建一个实例，激活时复用该实例 。 ")])),_:1}),X,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 等该做的事都做完以后，包括网络预测键的检测等行为，才会正式开始激活我们的能力。这也是我们激活能力的入口函数之一。后面就是我们比较熟悉的激活流程了 ")])),_:1}),J,(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[Y])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[Q])),_:1}),V,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[$])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,s.k6)((()=>[(0,s.eW)(" 也就是说这里会主动触发一次我们给定的GE对吧。 ")])),_:1}),(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" 是的，这也是我们实现技能CD、消耗的关键。提到GE不得不提一句，UE5.3后进行了大幅改版。从原来的Config配置模式变成更解决策略模式。 ")])),_:1}),aa,na,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[(0,s.eW)(" GA本身，可以通过持有的ActorInfo来获取外部信息。就像下面这样 ")])),_:1}),ta,sa,(0,s.bF)(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,s.k6)((()=>[ea])),_:1})])}]]),oa=JSON.parse('{"path":"/unreal/core_%E6%A0%B8%E5%BF%83_/8.2-GASAbility.html","title":"c8.2GAS|GameplayAbility|Ability","lang":"zh-CN","frontmatter":{"title":"c8.2GAS|GameplayAbility|Ability","order":802,"category":["u++"],"description":"Ability GiveAbility TryActivateAbility InternalServerTryActivateAbility 网络权限 可以看到开启了bAllowRemoteActivation后客户端上也会执行一次，只不过要注意客户端上没有权限。 没有开启网络预测,会出现网络矫正带来的回滚卡顿","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/core_%E6%A0%B8%E5%BF%83_/8.2-GASAbility.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c8.2GAS|GameplayAbility|Ability"}],["meta",{"property":"og:description","content":"Ability GiveAbility TryActivateAbility InternalServerTryActivateAbility 网络权限 可以看到开启了bAllowRemoteActivation后客户端上也会执行一次，只不过要注意客户端上没有权限。 没有开启网络预测,会出现网络矫正带来的回滚卡顿"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-10T02:47:19.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-05-10T02:47:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c8.2GAS|GameplayAbility|Ability\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-10T02:47:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"Ability","slug":"ability","link":"#ability","children":[{"level":3,"title":"GiveAbility","slug":"giveability","link":"#giveability","children":[]},{"level":3,"title":"TryActivateAbility","slug":"tryactivateability","link":"#tryactivateability","children":[]}]},{"level":2,"title":"InternalServerTryActivateAbility","slug":"internalservertryactivateability","link":"#internalservertryactivateability","children":[{"level":3,"title":"网络权限","slug":"网络权限","link":"#网络权限","children":[]},{"level":3,"title":"NetExecutionPolicy","slug":"netexecutionpolicy","link":"#netexecutionpolicy","children":[]},{"level":3,"title":"AbilityInstancingPolicy|实例化策略","slug":"abilityinstancingpolicy-实例化策略","link":"#abilityinstancingpolicy-实例化策略","children":[]}]},{"level":2,"title":"CallActivateAbility","slug":"callactivateability","link":"#callactivateability","children":[{"level":3,"title":"CommitAbility","slug":"commitability","link":"#commitability","children":[]},{"level":3,"title":"CommitAbility可选变体","slug":"commitability可选变体","link":"#commitability可选变体","children":[]},{"level":3,"title":"上下文","slug":"上下文","link":"#上下文","children":[]},{"level":3,"title":"EndAbility","slug":"endability","link":"#endability","children":[]}]}],"git":{"createdTime":1729899273000,"updatedTime":1746845239000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":5.91,"words":1772},"filePathRelative":"unreal/core[核心]/8.2-GASAbility.md","localizedDate":"2024年10月25日","excerpt":"\\n<h2>Ability</h2>\\n\\n<h3>GiveAbility</h3>\\n<figure><figcaption></figcaption></figure>\\n\\n<figure><figcaption></figcaption></figure>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code>\\t<span class=\\"token function\\">UFUNCTION</span><span class=\\"token punctuation\\">(</span>BlueprintCallable<span class=\\"token punctuation\\">,</span> BlueprintAuthorityOnly<span class=\\"token punctuation\\">,</span> Category <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Gameplay Abilities\\"</span><span class=\\"token punctuation\\">,</span> meta <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>DisplayName <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Give Ability\\"</span><span class=\\"token punctuation\\">,</span> ScriptName <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"GiveAbility\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\tFGameplayAbilitySpecHandle <span class=\\"token function\\">K2_GiveAbility</span><span class=\\"token punctuation\\">(</span>TSubclassOf<span class=\\"token operator\\">&lt;</span>UGameplayAbility<span class=\\"token operator\\">&gt;</span> AbilityClass<span class=\\"token punctuation\\">,</span> int32 Level <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> int32 InputID <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}')}}]);