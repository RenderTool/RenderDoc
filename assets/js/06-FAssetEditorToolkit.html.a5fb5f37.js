"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[2424],{49854:(n,a,e)=>{n.exports=e.p+"assets/img/UMGGF.f2ab145e.jpg"},81860:(n,a,e)=>{e.r(a),e.d(a,{comp:()=>B,data:()=>O});var t=e(20641),s=e(49854);const i=e.p+"assets/img/config001.1f4b6cb6.jpg",l=e.p+"assets/img/ConfigSaveDir.07b92621.png",o=e.p+"assets/img/config002.802901e7.png",c=(0,t.Lk)("h2",{id:"温故",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#温故"},[(0,t.Lk)("span",null,"温故")])],-1),p=(0,t.Fv)('<h3 id="_1️⃣-用-assetdefinitiondefault注册我们的资产。" tabindex="-1"><a class="header-anchor" href="#_1️⃣-用-assetdefinitiondefault注册我们的资产。"><span>1️⃣ 用 <code>AssetDefinitionDefault</code>注册我们的资产。</span></a></h3><h3 id="_2️⃣-用-toolmenus扩展编辑器的菜单和工具栏。" tabindex="-1"><a class="header-anchor" href="#_2️⃣-用-toolmenus扩展编辑器的菜单和工具栏。"><span>2️⃣ 用 <code>ToolMenus</code>扩展编辑器的菜单和工具栏。</span></a></h3><h3 id="_3️⃣-用-fslatestyleset自定义了一些图标。" tabindex="-1"><a class="header-anchor" href="#_3️⃣-用-fslatestyleset自定义了一些图标。"><span>3️⃣ 用 <code>FSlateStyleSet</code>自定义了一些图标。</span></a></h3><h2 id="属性持久化" tabindex="-1"><a class="header-anchor" href="#属性持久化"><span>属性持久化</span></a></h2>',4),d=(0,t.Lk)("p",null,[(0,t.eW)("先不说之前的了！我用了"),(0,t.Lk)("code",null,"EditorUtilityWidget"),(0,t.eW)("后，我每次打开都要重新配置内容啊！")],-1),r=(0,t.Lk)("p",null,[(0,t.Lk)("code",null,"EditorUtilityWidget"),(0,t.eW)("本质上是一个编辑器维护的"),(0,t.Lk)("code",null,"UUserWidget"),(0,t.eW)(",你可以理解成编辑器模式下打开了一个UI界面。")],-1),u=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:s,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),k=(0,t.Lk)("p",null,[(0,t.eW)("可当我用一些类似"),(0,t.Lk)("code",null,"State Tree"),(0,t.eW)("等编辑他的细节面板，下次打开并不会重置数据呀！不是所有属性都能写死在默认值里的呀！")],-1),g=(0,t.Lk)("h2",{id:"config",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#config"},[(0,t.Lk)("span",null,"Config")])],-1),f=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:i,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),h=(0,t.Lk)("p",null,[(0,t.eW)("使用时需要在UClass以及对应的UProperty中标记"),(0,t.Lk)("code",null,"Config")],-1),v=(0,t.Fv)('<h3 id="config-类内方法" tabindex="-1"><a class="header-anchor" href="#config-类内方法"><span>Config|类内方法</span></a></h3><h3 id="_1-声明类时加上-config-xxx" tabindex="-1"><a class="header-anchor" href="#_1-声明类时加上-config-xxx"><span>① 声明类时加上 config=XXX</span></a></h3><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">UCLASS</span><span class="token punctuation">(</span>Config<span class="token operator">=</span>Game<span class="token punctuation">)</span>\n<span class="token keyword">class</span> <span class="token class-name">UMyGameSettings</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">UObject</span></span>\n<span class="token punctuation">{</span>\n\t<span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">public</span><span class="token operator">:</span>\n\t<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>Config<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> Category<span class="token operator">=</span><span class="token string">&quot;Game&quot;</span><span class="token punctuation">)</span>\n\tint32 DifficultyLevel<span class="token punctuation">;</span>\n\n\t<span class="token keyword">void</span> <span class="token function">ChangeSetting</span><span class="token punctuation">(</span>int32 NewValue<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\tDifficultyLevel <span class="token operator">=</span> NewValue<span class="token punctuation">;</span>\n\t\t<span class="token function">SaveConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 自动写入到 Game.ini</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-默认保存位置" tabindex="-1"><a class="header-anchor" href="#_2-默认保存位置"><span>② 默认保存位置</span></a></h3>',4),b=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code>DefaultEditor<span class="token punctuation">.</span>ini\nDefaultEngine<span class="token punctuation">.</span>ini\nDefaultGame<span class="token punctuation">.</span>ini\nDefaultInput<span class="token punctuation">.</span>ini\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3自定义位置" tabindex="-1"><a class="header-anchor" href="#_3自定义位置"><span>③自定义位置</span></a></h3>',2),m=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),L=(0,t.Lk)("hr",null,null,-1),_=(0,t.Lk)("h3",{id:"config-类内限制",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#config-类内限制"},[(0,t.Lk)("span",null,"Config|类内限制")])],-1),W=(0,t.Lk)("figure",null,[(0,t.Lk)("img",{src:o,alt:"",tabindex:"0",loading:"lazy"}),(0,t.Lk)("figcaption")],-1),y=(0,t.Lk)("p",null,[(0,t.eW)("而且还用手动调用 "),(0,t.Lk)("code",null,"SaveConfig"),(0,t.eW)(" 也太麻烦了！即便我可以用"),(0,t.Lk)("code",null,"PostEditChangeProperty"),(0,t.eW)("自动保存，他的限制实在太多了！")],-1),C=(0,t.Lk)("hr",null,null,-1),x=(0,t.Lk)("h3",{id:"config-类外方法",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#config-类外方法"},[(0,t.Lk)("span",null,"Config|类外方法")])],-1),E=(0,t.Lk)("code",null,"UDeveloperSettings",-1),D=(0,t.Lk)("h2",{id:"dataasset",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#dataasset"},[(0,t.Lk)("span",null,"DataAsset")])],-1),F=(0,t.Fv)('<div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">UCLASS</span><span class="token punctuation">(</span>BlueprintType<span class="token punctuation">)</span>\n<span class="token keyword">class</span> <span class="token class-name">UMyGameConfig</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">UObject</span></span>\n<span class="token punctuation">{</span>\n    <span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">public</span><span class="token operator">:</span>\n    <span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;Game Settings&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">float</span> MaxHealth <span class="token operator">=</span> <span class="token number">100.f</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),S=(0,t.Lk)("p",null,[(0,t.eW)("然后，编辑器里创建对应的BP改属性，下次打开编辑器， 这些数据就还在。 "),(0,t.Lk)("strong",null,"不需要写什么保存逻辑！")],-1),j=(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"MaxHealth = 200")])],-1),A=(0,t.Lk)("p",null,[(0,t.eW)("关键是这样写没法用"),(0,t.Lk)("span",{style:{color:"red"}},[(0,t.Lk)("strong",null,"按钮")]),(0,t.eW)(" 这种 "),(0,t.Lk)("span",{style:{color:"red"}},[(0,t.Lk)("strong",null,"视觉组件")]),(0,t.eW)("去执行函数了！而且为什么他会被持久化？")],-1),T=(0,t.Lk)("hr",null,null,-1),U=(0,t.Lk)("h3",{id:"editor-in-default",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#editor-in-default"},[(0,t.Lk)("span",null,"Editor in Default")])],-1),w=(0,t.Lk)("p",null,[(0,t.eW)("因为编辑的是类的默认对象（Class Default Object，简称 CDO）或某个 "),(0,t.Lk)("code",null,"UObject"),(0,t.eW)(" 的资产默认状态， 是基于构造时的值，不是运行时的动态实例。")],-1),q=(0,t.Lk)("code",null,"bool",-1),M=(0,t.Lk)("h2",{id:"editor-toolkit-引",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#editor-toolkit-引"},[(0,t.Lk)("span",null,"Editor Toolkit |引")])],-1),P=(0,t.Lk)("p",null,[(0,t.eW)("SO!看起来我们急需要一种方法，他能像"),(0,t.Lk)("code",null,"UDataAsset"),(0,t.eW)("那样持久化属性，也能像"),(0,t.Lk)("code",null,"UserWidget"),(0,t.eW)("那样加入自定义的按钮、图片等等。")],-1),X={},B=(0,e(66262).A)(X,[["render",function(n,a){const e=(0,t.g2)("chatmessage"),s=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[c,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 前面我们花了大量篇章介绍了： ")])),_:1}),p,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (5).png",avatarWidth:38},{default:(0,t.k6)((()=>[d])),_:1}),(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[r])),_:1}),u,(0,t.bF)(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[k])),_:1}),g,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 怎么不可以，其实你可以直接用Config配置一些属性持久化的 ")])),_:1}),f,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[h])),_:1}),v,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 这里的Config 保存名是可以自定义的，他默认也提供了4个常见的保存名（保存文件位置） ")])),_:1}),b,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 当然这里写上自定义的名字也可以，只不过它会被保存到其他目录里。 ")])),_:1}),m,L,_,(0,t.bF)(e,{avatar:"../../assets/emoji/kclr.png",avatarWidth:38},{default:(0,t.k6)((()=>[(0,t.eW)(" 好麻烦啊！不支持一些复杂的数据结构啊，比如对象、TMap。无法创建多个实例配置，只支持“类默认对象”（CDO）配置 ")])),_:1}),W,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (4).png",avatarWidth:38},{default:(0,t.k6)((()=>[y])),_:1}),C,x,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.Lk)("p",null,[(0,t.eW)("你可以改用 "),E,(0,t.eW)(),(0,t.bF)(s,{to:"/unreal/core_%E6%A0%B8%E5%BF%83_/11-DevelopSettings.html"},{default:(0,t.k6)((()=>[(0,t.eW)("UDeveloperSettings直通车")])),_:1})])])),_:1}),D,(0,t.bF)(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[(0,t.eW)(" 这个方法看起来不错！但总感觉怪怪的，我就不能像DataAsset那样编辑中修改后自动存为默认值啊。比如这样： ")])),_:1}),F,(0,t.bF)(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[S])),_:1}),j,(0,t.bF)(e,{avatar:"../../assets/emoji/blzt.png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[(0,t.eW)(" 没错啊！没毛病老铁！ ")])),_:1}),(0,t.bF)(e,{avatar:"../../assets/emoji/new7.png",avatarWidth:38},{default:(0,t.k6)((()=>[A])),_:1}),T,U,(0,t.bF)(e,{avatar:"../../assets/emoji/new2.png",avatarWidth:50,alignLeft:""},{default:(0,t.k6)((()=>[w])),_:1}),(0,t.bF)(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:38},{default:(0,t.k6)((()=>[(0,t.Lk)("p",null,[(0,t.eW)("那咋整我总不能 所有逻辑都用"),q,(0,t.eW)(" + "),(0,t.bF)(s,{to:"/unreal/editor_%E7%BC%96%E8%BE%91%E5%99%A8_/01-PostEditChangeProperty.html"},{default:(0,t.k6)((()=>[(0,t.eW)("PostEditChangeProperty")])),_:1}),(0,t.eW)(" 吧！")])])),_:1}),M,(0,t.bF)(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[P])),_:1})])}]]),O=JSON.parse('{"path":"/unreal/editor_%E7%BC%96%E8%BE%91%E5%99%A8_/06-FAssetEditorToolkit.html","title":"ED06.Config|属性持久化","lang":"zh-CN","frontmatter":{"title":"ED06.Config|属性持久化","order":24,"category":["u++"],"description":"温故 1️⃣ 用 AssetDefinitionDefault注册我们的资产。 2️⃣ 用 ToolMenus扩展编辑器的菜单和工具栏。 3️⃣ 用 FSlateStyleSet自定义了一些图标。 属性持久化 Config Config|类内方法 ① 声明类时加上 config=XXX ② 默认保存位置 ③自定义位置 Config|类内限制 Confi...","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/editor_%E7%BC%96%E8%BE%91%E5%99%A8_/06-FAssetEditorToolkit.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"ED06.Config|属性持久化"}],["meta",{"property":"og:description","content":"温故 1️⃣ 用 AssetDefinitionDefault注册我们的资产。 2️⃣ 用 ToolMenus扩展编辑器的菜单和工具栏。 3️⃣ 用 FSlateStyleSet自定义了一些图标。 属性持久化 Config Config|类内方法 ① 声明类时加上 config=XXX ② 默认保存位置 ③自定义位置 Config|类内限制 Confi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-06T12:03:46.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-04-06T12:03:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ED06.Config|属性持久化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-06T12:03:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"温故","slug":"温故","link":"#温故","children":[{"level":3,"title":"1️⃣ 用 AssetDefinitionDefault注册我们的资产。","slug":"_1️⃣-用-assetdefinitiondefault注册我们的资产。","link":"#_1️⃣-用-assetdefinitiondefault注册我们的资产。","children":[]},{"level":3,"title":"2️⃣ 用 ToolMenus扩展编辑器的菜单和工具栏。","slug":"_2️⃣-用-toolmenus扩展编辑器的菜单和工具栏。","link":"#_2️⃣-用-toolmenus扩展编辑器的菜单和工具栏。","children":[]},{"level":3,"title":"3️⃣ 用 FSlateStyleSet自定义了一些图标。","slug":"_3️⃣-用-fslatestyleset自定义了一些图标。","link":"#_3️⃣-用-fslatestyleset自定义了一些图标。","children":[]}]},{"level":2,"title":"属性持久化","slug":"属性持久化","link":"#属性持久化","children":[]},{"level":2,"title":"Config","slug":"config","link":"#config","children":[{"level":3,"title":"Config|类内方法","slug":"config-类内方法","link":"#config-类内方法","children":[]},{"level":3,"title":"① 声明类时加上 config=XXX","slug":"_1-声明类时加上-config-xxx","link":"#_1-声明类时加上-config-xxx","children":[]},{"level":3,"title":"② 默认保存位置","slug":"_2-默认保存位置","link":"#_2-默认保存位置","children":[]},{"level":3,"title":"③自定义位置","slug":"_3自定义位置","link":"#_3自定义位置","children":[]},{"level":3,"title":"Config|类内限制","slug":"config-类内限制","link":"#config-类内限制","children":[]},{"level":3,"title":"Config|类外方法","slug":"config-类外方法","link":"#config-类外方法","children":[]}]},{"level":2,"title":"DataAsset","slug":"dataasset","link":"#dataasset","children":[{"level":3,"title":"Editor in Default","slug":"editor-in-default","link":"#editor-in-default","children":[]}]},{"level":2,"title":"Editor Toolkit |引","slug":"editor-toolkit-引","link":"#editor-toolkit-引","children":[]}],"git":{"createdTime":1743941026000,"updatedTime":1743941026000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":2.88,"words":864},"filePathRelative":"unreal/editor[编辑器]/06-FAssetEditorToolkit.md","localizedDate":"2025年4月6日","excerpt":"<h2>温故</h2>\\n\\n<h3>1️⃣ 用 <code>AssetDefinitionDefault</code>注册我们的资产。</h3>\\n<h3>2️⃣ 用 <code>ToolMenus</code>扩展编辑器的菜单和工具栏。</h3>\\n<h3>3️⃣ 用 <code>FSlateStyleSet</code>自定义了一些图标。</h3>\\n<h2>属性持久化</h2>\\n\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<h2>Config</h2>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<h3>Config|类内方法</h3>","autoDesc":true}')}}]);