"use strict";(self.webpackChunkrenderdoc=self.webpackChunkrenderdoc||[]).push([[8351],{5378:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>k,data:()=>r});var t=s(20641);const p=s.p+"assets/img/gameinstanceinit001.2c70f897.jpg",o=(0,t.Lk)("h2",{id:"问题描述",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#问题描述"},[(0,t.Lk)("span",null,"问题描述")])],-1),e=(0,t.Lk)("p",null,[(0,t.Lk)("code",null,"UGameInstance::Init()"),(0,t.eW)(" 阶段过早触发异步加载，导致子系统或资源尚未就绪，引发内存访问冲突。")],-1),c=(0,t.Fv)('<figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UExorcistGameInstance</span><span class="token double-colon punctuation">::</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>Request<span class="token punctuation">.</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\tUAsyncMultiDataCollectionLoader<span class="token operator">*</span> Loader <span class="token operator">=</span> <span class="token class-name">UAsyncMultiDataCollectionLoader</span><span class="token double-colon punctuation">::</span><span class="token function">AsyncMultiDataCollectionLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>Request<span class="token punctuation">,</span>LoadBundles<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Loader<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\tLoader<span class="token operator">-&gt;</span>OnSuccess<span class="token punctuation">.</span><span class="token function">AddDynamic</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>UExorcistGameInstance<span class="token double-colon punctuation">::</span>OnDataCollectionLoaded<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tLoader<span class="token operator">-&gt;</span><span class="token function">Activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token class-name">UExorcistGameInstance</span><span class="token double-colon punctuation">::</span><span class="token function">OnDataCollectionLoaded</span><span class="token punctuation">(</span><span class="token keyword">const</span> TArray<span class="token operator">&lt;</span>FDataCollectionInstance<span class="token operator">&gt;</span><span class="token operator">&amp;</span> DefinitionCollections<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>DefinitionCollections<span class="token punctuation">.</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\tUExorcistSaveGame<span class="token operator">*</span> SaveSettings <span class="token operator">=</span> <span class="token class-name">UExorcistDataStorageLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">LoadSaveData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>SaveSettings<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\t\n\tUUserDataSubsystem <span class="token operator">*</span>UserData <span class="token operator">=</span> <span class="token generic-function"><span class="token function">GetSubsystem</span><span class="token generic class-name"><span class="token operator">&lt;</span>UUserDataSubsystem<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>UserData<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">auto</span> DataCollection <span class="token operator">:</span> DefinitionCollections<span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span><span class="token punctuation">(</span>DataCollection<span class="token punctuation">.</span>DefinitionInstance <span class="token operator">&amp;&amp;</span> DataCollection<span class="token punctuation">.</span>PrimaryAssetType <span class="token operator">==</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Inventory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">UExorcistSaveDataValidatorLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">ValidateInventoryData</span><span class="token punctuation">(</span>SaveSettings<span class="token punctuation">,</span> DataCollection<span class="token punctuation">.</span>DefinitionInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>DataCollection<span class="token punctuation">.</span>DefinitionInstance <span class="token operator">&amp;&amp;</span> DataCollection<span class="token punctuation">.</span>PrimaryAssetType <span class="token operator">==</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Hero&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">UExorcistSaveDataValidatorLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">ValidateHeroData</span><span class="token punctuation">(</span>SaveSettings<span class="token punctuation">,</span> DataCollection<span class="token punctuation">.</span>DefinitionInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\tUserData<span class="token operator">-&gt;</span><span class="token function">AddDefinitionCollection</span><span class="token punctuation">(</span>DataCollection<span class="token punctuation">.</span>PrimaryAssetType<span class="token punctuation">,</span> DataCollection<span class="token punctuation">.</span>DefinitionInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token class-name">UExorcistDataStorageLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SaveGameData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SaveSettings<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\tUserData<span class="token operator">-&gt;</span><span class="token function">MarkDataReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修复方案" tabindex="-1"><a class="header-anchor" href="#修复方案"><span>修复方案</span></a></h2>',3),l=(0,t.Lk)("p",null,[(0,t.eW)("将异步加载逻辑从 "),(0,t.Lk)("code",null,"Init()"),(0,t.eW)(" 移至 "),(0,t.Lk)("code",null,"OnStart()"),(0,t.eW)("，确保依赖项已初始化。")],-1),i=(0,t.Lk)("hr",null,null,-1),u={},k=(0,s(66262).A)(u,[["render",function(n,a){const s=(0,t.g2)("chatmessage");return(0,t.uX)(),(0,t.CE)("div",null,[o,(0,t.bF)(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:(0,t.k6)((()=>[e])),_:1}),c,(0,t.bF)(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:(0,t.k6)((()=>[l])),_:1}),i])}]]),r=JSON.parse('{"path":"/unreal/error_%E9%94%99%E8%AF%AF_/17.GameInstanceInit.html","title":"Error17. GameInstanceInit阶段过早触发异步加载导致崩溃","lang":"zh-CN","frontmatter":{"title":"Error17. GameInstanceInit阶段过早触发异步加载导致崩溃","order":17,"category":["u++"],"description":"问题描述 修复方案","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/unreal/error_%E9%94%99%E8%AF%AF_/17.GameInstanceInit.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"Error17. GameInstanceInit阶段过早触发异步加载导致崩溃"}],["meta",{"property":"og:description","content":"问题描述 修复方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-13T02:18:40.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2025-05-13T02:18:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Error17. GameInstanceInit阶段过早触发异步加载导致崩溃\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-13T02:18:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"修复方案","slug":"修复方案","link":"#修复方案","children":[]}],"git":{"createdTime":1747102720000,"updatedTime":1747102720000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"unreal/error[错误]/17.GameInstanceInit.md","localizedDate":"2025年5月13日","excerpt":"<h2>问题描述</h2>\\n\\n<figure><figcaption></figcaption></figure>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">UExorcistGameInstance</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token class-name\\">Super</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">Init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>Request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">IsEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tUAsyncMultiDataCollectionLoader<span class=\\"token operator\\">*</span> Loader <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UAsyncMultiDataCollectionLoader</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">AsyncMultiDataCollectionLoader</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span>Request<span class=\\"token punctuation\\">,</span>LoadBundles<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>Loader<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tLoader<span class=\\"token operator\\">-&gt;</span>OnSuccess<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AddDynamic</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>UExorcistGameInstance<span class=\\"token double-colon punctuation\\">::</span>OnDataCollectionLoaded<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\tLoader<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">Activate</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token class-name\\">UExorcistGameInstance</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">OnDataCollectionLoaded</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> TArray<span class=\\"token operator\\">&lt;</span>FDataCollectionInstance<span class=\\"token operator\\">&gt;</span><span class=\\"token operator\\">&amp;</span> DefinitionCollections<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>DefinitionCollections<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">IsEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tUExorcistSaveGame<span class=\\"token operator\\">*</span> SaveSettings <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UExorcistDataStorageLibrary</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">LoadSaveData</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>SaveSettings<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\tUUserDataSubsystem <span class=\\"token operator\\">*</span>UserData <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">GetSubsystem</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UUserDataSubsystem<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>UserData<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">auto</span> DataCollection <span class=\\"token operator\\">:</span> DefinitionCollections<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>DataCollection<span class=\\"token punctuation\\">.</span>DefinitionInstance <span class=\\"token operator\\">&amp;&amp;</span> DataCollection<span class=\\"token punctuation\\">.</span>PrimaryAssetType <span class=\\"token operator\\">==</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Inventory\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token class-name\\">UExorcistSaveDataValidatorLibrary</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">ValidateInventoryData</span><span class=\\"token punctuation\\">(</span>SaveSettings<span class=\\"token punctuation\\">,</span> DataCollection<span class=\\"token punctuation\\">.</span>DefinitionInstance<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t<span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>DataCollection<span class=\\"token punctuation\\">.</span>DefinitionInstance <span class=\\"token operator\\">&amp;&amp;</span> DataCollection<span class=\\"token punctuation\\">.</span>PrimaryAssetType <span class=\\"token operator\\">==</span> <span class=\\"token function\\">TEXT</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hero\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token class-name\\">UExorcistSaveDataValidatorLibrary</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">ValidateHeroData</span><span class=\\"token punctuation\\">(</span>SaveSettings<span class=\\"token punctuation\\">,</span> DataCollection<span class=\\"token punctuation\\">.</span>DefinitionInstance<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\tUserData<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">AddDefinitionCollection</span><span class=\\"token punctuation\\">(</span>DataCollection<span class=\\"token punctuation\\">.</span>PrimaryAssetType<span class=\\"token punctuation\\">,</span> DataCollection<span class=\\"token punctuation\\">.</span>DefinitionInstance<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\n\\t<span class=\\"token class-name\\">UExorcistDataStorageLibrary</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">SaveGameData</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> SaveSettings<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\tUserData<span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">MarkDataReady</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}')}}]);