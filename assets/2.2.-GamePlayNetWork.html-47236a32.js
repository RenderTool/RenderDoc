import{_ as r,r as c,o as d,c as k,d as a,w as t,a as n,b as s,e as p}from"./app-a94ef497.js";const v="/RenderDoc/assets/replicate031-bb01b878.jpg",b="/RenderDoc/assets/network011-6d63dbbd.png",l="/RenderDoc/assets/network005-2ad0adb8.png",m="/RenderDoc/assets/network006-20630c59.jpg",g="/RenderDoc/assets/network007-88ca1e10.png",y="/RenderDoc/assets/network004-e57c7e2e.png",f="/RenderDoc/assets/network008-830f402d.jpg",u="/RenderDoc/assets/network009-40fbebf6.png",h="/RenderDoc/assets/network010-28090f2b.jpg",_="/RenderDoc/assets/replicate032-0f1301e2.jpg",S="/RenderDoc/assets/replicate033-7b204539.png",A="/RenderDoc/assets/replicate034-576d1f3b.png",P="/RenderDoc/assets/replicate035-d463c002.png",I="/RenderDoc/assets/filter-by-owning-client-7b348503.png",w={},x=n("h2",{id:"书接上文",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#书接上文","aria-hidden":"true"},"#"),s(" 书接上文")],-1),C=n("h2",{id:"问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),s(" 问题")],-1),U=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>
<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	AExorcistPlayerState<span class="token operator">*</span> ExorcistPlayerState <span class="token operator">=</span><span class="token generic-function"><span class="token function">GetPlayerState</span><span class="token generic class-name"><span class="token operator">&lt;</span>AExorcistPlayerState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ExorcistPlayerState<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//利用PlayerState初始化组件</span>
	ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span>ExorcistPlayerState<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//赋值指针</span>
	AbilitySystemComponent <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AttributeSet <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAttributeSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	UUIManagerSubsystem <span class="token operator">*</span> UIManagerSubsystem <span class="token operator">=</span> <span class="token class-name">UGameplayStatics</span><span class="token double-colon punctuation">::</span><span class="token function">GetGameInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">GetSubsystem</span><span class="token generic class-name"><span class="token operator">&lt;</span>UUIManagerSubsystem<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>UIManagerSubsystem<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		UIManagerSubsystem<span class="token operator">-&gt;</span><span class="token function">ExecuteBindAttributeInfo</span><span class="token punctuation">(</span>AbilitySystemComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E=n("h2",{id:"预热",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#预热","aria-hidden":"true"},"#"),s(" 预热")],-1),R=n("h3",{id:"lyra的ui框架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lyra的ui框架","aria-hidden":"true"},"#"),s(" Lyra的UI框架")],-1),B=n("figure",null,[n("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),L=n("h3",{id:"possessedby",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#possessedby","aria-hidden":"true"},"#"),s(" PossessedBy")],-1),q=n("blockquote",null,[n("p",null,"一切从PlayerJoin后的PossessedBy开始说起")],-1),W=n("figure",null,[n("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),j=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>	<span class="token comment">/** 
	 * Called when this Pawn is possessed. Only called on the server (or in standalone).
	 * @param NewController The controller possessing this pawn
	 */</span>
	<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G=n("h3",{id:"aicontroller",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#aicontroller","aria-hidden":"true"},"#"),s(" AIController")],-1),O=n("figure",null,[n("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),M=n("p",null,"事实上所有放入场景的Pawn，即便没人去控制也会由AI控制器代理执行。这里如果不清楚控制器和Pawn关系的童鞋，可以回去看看",-1),N=n("figure",null,[n("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),D=p('<figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>推荐用IDE直接打断点，不过这种方法也不是不可取。</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;PossessedBy %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>InitAbilityActorInfo()中写了计数函数主要负责++处理，以及获取玩家PlayerState</p></blockquote>`,4),T=n("figure",null,[n("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),z=n("figure",null,[n("img",{src:l,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),H=n("h3",{id:"playerstate",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#playerstate","aria-hidden":"true"},"#"),s(" PlayerState")],-1),V=n("figure",null,[n("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),F=n("h3",{id:"onrep-playerstate",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onrep-playerstate","aria-hidden":"true"},"#"),s(" OnRep_PlayerState")],-1),J=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;OnRep_PlayerState %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),Y=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>EditAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>
	int32 count <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),X=n("figure",null,[n("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),K=p('<figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="强化认知" tabindex="-1"><a class="header-anchor" href="#强化认知" aria-hidden="true">#</a> 强化认知</h2><h3 id="runonserver" tabindex="-1"><a class="header-anchor" href="#runonserver" aria-hidden="true">#</a> RunOnServer</h3><blockquote><ol><li>先去掉OnRep_PlayerState回调函数,并在子系统中加入一个测试函数。</li></ol></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//InitAbilityActorInfo();</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	AExorcistPlayerState<span class="token operator">*</span> ExorcistPlayerState <span class="token operator">=</span><span class="token generic-function"><span class="token function">GetPlayerState</span><span class="token generic class-name"><span class="token operator">&lt;</span>AExorcistPlayerState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ExorcistPlayerState<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//利用PlayerState初始化组件</span>
	ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span>ExorcistPlayerState<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//赋值指针</span>
	AbilitySystemComponent <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AttributeSet <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAttributeSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	UUIManagerSubsystem <span class="token operator">*</span> UIManagerSubsystem <span class="token operator">=</span> <span class="token class-name">UGameplayStatics</span><span class="token double-colon punctuation">::</span><span class="token function">GetGameInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">GetSubsystem</span><span class="token generic class-name"><span class="token operator">&lt;</span>UUIManagerSubsystem<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>UIManagerSubsystem<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		UIManagerSubsystem<span class="token operator">-&gt;</span><span class="token function">SetTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//子系统</span>
<span class="token keyword">public</span><span class="token operator">:</span>
<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>VisibleAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>
	int32 count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;UIManagerSubsystem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">SetTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol start="2"><li>打开UE，监听服务器模式，玩家设置为2.</li></ol></blockquote>`,6),Q=n("figure",null,[n("img",{src:S,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Z=n("figure",null,[n("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),$=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;UIManagerSubsystem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">SetTest</span><span class="token punctuation">(</span>APlayerController <span class="token operator">*</span> LocalPlayerController<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>VisibleAnywhere<span class="token punctuation">,</span>BlueprintReadWrite<span class="token punctuation">)</span>
TArray<span class="token operator">&lt;</span>APlayerController<span class="token operator">*</span><span class="token operator">&gt;</span> PlayerControllers<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),nn=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UUIManagerSubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">Kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	PlayerControllers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">UnPossess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),sn=n("h3",{id:"onrep-playerstate-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onrep-playerstate-1","aria-hidden":"true"},"#"),s(" OnRep_PlayerState")],-1),an=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">AExorcistHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
AExorcistPlayerState<span class="token operator">*</span> ExorcistPlayerState <span class="token operator">=</span><span class="token generic-function"><span class="token function">GetPlayerState</span><span class="token generic class-name"><span class="token operator">&lt;</span>AExorcistPlayerState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ExorcistPlayerState<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//利用PlayerState初始化组件</span>
	ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span>ExorcistPlayerState<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//赋值指针</span>
	AbilitySystemComponent <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AttributeSet <span class="token operator">=</span> ExorcistPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAttributeSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsLocallyControlled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>	
        UUIManagerSubsystem <span class="token operator">*</span> UIManagerSubsystem <span class="token operator">=</span> <span class="token class-name">UGameplayStatics</span><span class="token double-colon punctuation">::</span><span class="token function">GetGameInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">GetSubsystem</span><span class="token generic class-name"><span class="token operator">&lt;</span>UUIManagerSubsystem<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>UIManagerSubsystem<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
          <span class="token comment">//UI绑定函数</span>
        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),tn=n("ol",null,[n("li",null,"服务器上PossessedByA"),n("li",null,"服务器上执行InitAbilityActorInfo初始化A的ASC组件"),n("li",null,"看到IsLocallyControlled =true ,所以调用子系统UIManagerSubsystem绑定对应的AS委托"),n("li",null,"接着join New Player B"),n("li",null,"服务器上PossessedByB"),n("li",null,"服务器上执行InitAbilityActorInfo初始化B的ASC组件"),n("li",null,"服务器上B看到IsLocallyControlled为False,所以没有执行子系统绑定"),n("li",null,"PossessedByB导致PlayerState变量更新，通过OnRep_PlayerState告诉对应的客户端。"),n("li",null,"对于客户端B来说OnRep_PlayerState的通知函数告诉他执行InitAbilityActorInfo， 此时他看到IsLocallyControlled = true, 所以成功调用了子系统将ASC的数据委托绑定到了本地的UI上。")],-1),en=p(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>UUIManagerSubsystem <span class="token operator">*</span> UIManagerSubsystem <span class="token operator">=</span> <span class="token class-name">UGameplayStatics</span><span class="token double-colon punctuation">::</span><span class="token function">GetGameInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token generic-function"><span class="token function">GetSubsystem</span><span class="token generic class-name"><span class="token operator">&lt;</span>UUIManagerSubsystem<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>UIManagerSubsystem <span class="token operator">&amp;&amp;</span> <span class="token function">IsLocallyControlled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
		UIManagerSubsystem<span class="token operator">-&gt;</span><span class="token function">InitAsc</span><span class="token punctuation">(</span>AbilitySystemComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
		UIManagerSubsystem<span class="token operator">-&gt;</span><span class="token function">BindAttributeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    UIManagerSubsystem<span class="token operator">-&gt;</span><span class="token function">NotifyUIShowAttributeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">UUIManagerSubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">InitAsc</span><span class="token punctuation">(</span>
	UAbilitySystemComponent<span class="token operator">*</span> TargetASC<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TargetASC<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
	AbilitySystemComponent <span class="token operator">=</span> TargetASC<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">UUIManagerSubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">BindAttributeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>AbilitySystemComponent<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">GetAllAttributes</span><span class="token punctuation">(</span>OutAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>OutAttributes<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token keyword">const</span> Attribute <span class="token operator">:</span> OutAttributes<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			GEngine<span class="token operator">-&gt;</span><span class="token function">AddOnScreenDebugMessage</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.f</span><span class="token punctuation">,</span> FColor<span class="token double-colon punctuation">::</span>Red<span class="token punctuation">,</span> Attribute<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">GetGameplayAttributeValueChangeDelegate</span><span class="token punctuation">(</span>Attribute<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddLambda</span><span class="token punctuation">(</span>
				<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> FOnAttributeChangeData<span class="token operator">&amp;</span> OnAttributeChangeData<span class="token punctuation">)</span>
				<span class="token punctuation">{</span>
					OnAttributeChanged<span class="token punctuation">.</span><span class="token function">Broadcast</span><span class="token punctuation">(</span>OnAttributeChangeData<span class="token punctuation">.</span>Attribute<span class="token punctuation">,</span> OnAttributeChangeData<span class="token punctuation">.</span>NewValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">UUIManagerSubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">NotifyUIShowAttributeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>OutAttributes<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> AbilitySystemComponent<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> Attribute <span class="token operator">:</span> OutAttributes<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			OnAttributeChanged<span class="token punctuation">.</span><span class="token function">Broadcast</span><span class="token punctuation">(</span>Attribute<span class="token punctuation">,</span> AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">GetNumericAttributeBase</span><span class="token punctuation">(</span>Attribute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ui过滤" tabindex="-1"><a class="header-anchor" href="#ui过滤" aria-hidden="true">#</a> UI过滤</h2><h3 id="islocallycontrolled" tabindex="-1"><a class="header-anchor" href="#islocallycontrolled" aria-hidden="true">#</a> IsLocallyControlled</h3>`,3),pn=n("figure",null,[n("img",{src:I,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function on(cn,ln){const e=c("chatmessage"),o=c("gifwithbutton"),i=c("RouterLink");return d(),k("div",null,[x,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 前文已经实践了RPC的调用、Actor的复制、变量的复制等。 ")]),_:1}),C,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 实际开发中，往往不可避免的使用UI显示一些数据，我偷懒用了子系统，却发现扣血后所有端都扣血了！ ")]),_:1}),a(o,{src:"../../assets/unrealgif/hpup08.gif"}),U,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 这与子系统本身无关，子系统和普通UObject一样并不是什么潘多拉。看来咱们对网络权威必须做一次强化认知 ")]),_:1}),E,R,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" Lyra中使用UI子系统维护UI，其大致框架是这样的，具体的讨论在Lyra篇中再做讨论。 ")]),_:1}),B,L,q,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" Character继承自Pawn，Pawn继承自Actor,玩家控制器获取某个Pawn的控制权时，会调用PossessedBy。 ")]),_:1}),W,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 通过源码追溯，PossessedBy接口最早出现在Pawn类中。记住这里的注释 Only called on the server，意味着这个函数 只会在服务器上执行。 ")]),_:1}),j,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 换句话说，这意味着所有能有效调用PossessedBy的都会在服务器上执行。 ")]),_:1}),G,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 可是为什么我在场景中放入Pawn也会打印PossessedBy？ ")]),_:1}),O,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[M,n("p",null,[a(i,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/1-Gameplay.html"},{default:t(()=>[s("Gameplay框架导言")]),_:1})])]),_:1}),N,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 通过禁用控制器也可以验证这一点。 ")]),_:1}),D,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 如果不出意外，运行后只会打印一次。 ")]),_:1}),T,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 现在我们在场景中丢个Pawn进去（非玩家角色），AI控制器会自动接管一个，所以会打印两次。 ")]),_:1}),z,H,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 所以PossessedBy处理获取玩家PlayerState的时要额外小心，因为AI是没有PlayerState的，会导致内存异常。 ")]),_:1}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 现在我们考虑客户端加入的情况。 ")]),_:1}),V,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 可以看到主机和客户端各自都会执行一次自己的PossessBy ")]),_:1}),F,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 有意思的来了，OnRep_PlayerState被执行了多少次？ ")]),_:1}),J,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 看到我头皮发麻，所以到底执行了几次？ ")]),_:1}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 公开计数变量，看看各自的Character中都执行了几次。 ")]),_:1}),Y,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 无论是客户端还是服务器，各自拥有的Character都执行了一次OnRep_PlayerState(); ")]),_:1}),a(o,{src:"../../assets/unrealgif/hpup06.gif"}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[n("p",null,[s("在"),a(i,{to:"/unreal/network%5B%E7%BD%91%E7%BB%9C%5D/2.1.-GamePlayNetWork.html"},{default:t(()=>[s("网路同步02")]),_:1}),s("就提过， 变量的回调RepNotify|OnRepC++中会在变量本身改变时触发。 每次有新的PlayerJoin都会执行一次OnRep_PlayerState。")])]),_:1}),a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 问题来了，我在子系统中写了一些UI委托转发逻辑，一个客户端触发了所有客户端都跟着触发了怎么解决？ ")]),_:1}),a(o,{src:"../../assets/unrealgif/hpup08.gif"}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 还是先看看你的子系统中函数被调用了几次再说吧！ ")]),_:1}),a(o,{src:"../../assets/unrealgif/hpup09.gif"}),a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 好家伙！重复调用了！ ")]),_:1}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 而且你咋总是不认真听课呢！都说了OnRep_PlayerState变化通知回调函数，一旦有变化就会执行，一旦有新PlayerJoin就会执行。 ")]),_:1}),X,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 我明白了！这不就是咱之前打印的流程嘛！ ")]),_:1}),K,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 借助UE引擎调试，可以看到服务器上UIManagerSubsystem执行了2次，cout++后变成2. ")]),_:1}),Q,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 注意这里指的是服务器上的UIManagerSubsystem被执行了2次！ ")]),_:1}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" UIManagerSubsystem本身不能复制，所以其他端口上调试可以看到count变量依然是0. ")]),_:1}),Z,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 咱们还可以康康服务器上是不是真的将对应的APlayerController加入进去了 ")]),_:1}),$,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 现在咱们手动测试一下服务端是不是真的拥有生杀大权——让客户端解除控制。 ")]),_:1}),nn,a(o,{src:"../../assets/unrealgif/hpup20.gif"}),a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 可以可以！我好像明白了一切！ ")]),_:1}),sn,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 目前服务器上对每个玩家初始化了对应的GAS组件，可是这些组件对于服务器来说毫无价值。所以，应该放权复制到对应的 客户端上。一个很好的媒介就是每个玩家加入时PlayerState会刷新。 ")]),_:1}),an,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 是的，通过OnRep_PlayerState可以将每个玩家对应的GAS组件进行初始化。大致流程如下： ")]),_:1}),tn,a(e,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[s(" 妙啊！这样对应端口的UI都绑定了对应的数据。 ")]),_:1}),a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 绑定函数就好写多了 ")]),_:1}),en,a(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[s(" 有了上面的强化认知后，本期的问题已经解决，核心思路就是IsLocallyControlled 过滤非本地玩家的指针 ")]),_:1}),pn])}const rn=r(w,[["render",on],["__file","2.2.-GamePlayNetWork.html.vue"]]);export{rn as default};
