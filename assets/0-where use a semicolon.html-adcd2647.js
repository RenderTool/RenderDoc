const n=JSON.parse('{"key":"v-2111666e","path":"/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/0-where%20use%20a%20semicolon.html","title":"c++0.什么地方用\\";\\"","lang":"zh-CN","frontmatter":{"title":"c++0.什么地方用\\";\\"","order":1,"category":["c++"],"description":"表达式结束： 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如： int a = 5; // 赋值语句 cout &lt;&lt; \\"Hello, World!\\" &lt;&lt; endl; // 函数调用语句 x = y + z; // 算术表达式 控制结构： 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如： if (x &gt; 0) { // 代码块 cout &lt;&lt; \\"x是正数\\" &lt;&lt; endl; } else { // 代码块 cout &lt;&lt; \\"x不是正数\\" &lt;&lt; endl; } for (int i = 0; i &lt; 5; ++i) { // 循环体 cout &lt;&lt; i &lt;&lt; \\" \\"; } 类定义： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： class MyClass { public: void myFunction() { // 函数体 cout &lt;&lt; \\"Hello from MyClass!\\" &lt;&lt; endl; } int myVariable; }; // 注意类定义结束时有分号 结构体： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： struct MyClass { int myVariable{}; void myFunction() { // 函数体 cout &lt;&lt; \\"Hello from MyClass!\\" &lt;&lt; endl; } }; // 注意结构体定义结束时有分号","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/0-where%20use%20a%20semicolon.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++0.什么地方用\\";\\""}],["meta",{"property":"og:description","content":"表达式结束： 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如： int a = 5; // 赋值语句 cout &lt;&lt; \\"Hello, World!\\" &lt;&lt; endl; // 函数调用语句 x = y + z; // 算术表达式 控制结构： 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如： if (x &gt; 0) { // 代码块 cout &lt;&lt; \\"x是正数\\" &lt;&lt; endl; } else { // 代码块 cout &lt;&lt; \\"x不是正数\\" &lt;&lt; endl; } for (int i = 0; i &lt; 5; ++i) { // 循环体 cout &lt;&lt; i &lt;&lt; \\" \\"; } 类定义： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： class MyClass { public: void myFunction() { // 函数体 cout &lt;&lt; \\"Hello from MyClass!\\" &lt;&lt; endl; } int myVariable; }; // 注意类定义结束时有分号 结构体： 在类的定义中，每个成员函数的实现都需要用分号结束。例如： struct MyClass { int myVariable{}; void myFunction() { // 函数体 cout &lt;&lt; \\"Hello from MyClass!\\" &lt;&lt; endl; } }; // 注意结构体定义结束时有分号"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T22:07:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-02T22:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++0.什么地方用\\\\\\";\\\\\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-02T22:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"扩展链接","slug":"扩展链接","link":"#扩展链接","children":[]}],"git":{"createdTime":1700738130000,"updatedTime":1704233233000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":3},{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.17,"words":351},"filePathRelative":"language/cpp/BaseGuide[基础概念]/0-where use a semicolon.md","localizedDate":"2023年11月23日","excerpt":"\\n\\n<ol>\\n<li>\\n<p><strong>表达式结束：</strong> 在赋值、函数调用、算术运算等表达式结束时，需要使用分号。例如：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 赋值语句</span>\\ncout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello, World!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 函数调用语句</span>\\nx <span class=\\"token operator\\">=</span> y <span class=\\"token operator\\">+</span> z<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 算术表达式</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>控制结构：</strong> 在条件语句（if、else等）、循环语句（for、while等）以及其他控制结构的主体部分结束时，需要使用分号。例如：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 代码块</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"x是正数\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 代码块</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"x不是正数\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 循环体</span>\\n    cout <span class=\\"token operator\\">&lt;&lt;</span> i <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>类定义：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyClass</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">myFunction</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 函数体</span>\\n        cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello from MyClass!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">int</span> myVariable<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 注意类定义结束时有分号</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>结构体：</strong> 在类的定义中，每个成员函数的实现都需要用分号结束。例如：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">MyClass</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token keyword\\">int</span> myVariable<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">myFunction</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 函数体</span>\\n        cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello from MyClass!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 注意结构体定义结束时有分号</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{n as data};
