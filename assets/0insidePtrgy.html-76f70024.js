import{_ as i,o as l,c as e,e as t}from"./app-e8589a95.js";const s={},o=t('<h2 id="inside指针" tabindex="-1"><a class="header-anchor" href="#inside指针" aria-hidden="true">#</a> inside指针</h2><h3 id="纲要" tabindex="-1"><a class="header-anchor" href="#纲要" aria-hidden="true">#</a> 纲要</h3><ol><li><p><strong>指针基础：</strong></p><ul><li>指针和数组</li><li>指针和结构体</li><li>指针和函数</li><li>指针和枚举</li><li>指针和类 <ul><li>this指针</li></ul></li></ul></li><li><p><strong>智能指针：</strong></p><ul><li><code>std::shared_ptr</code>、<code>std::unique_ptr</code> 和 <code>std::weak_ptr</code> 的概念和使用。</li><li>智能指针的底层实现和引用计数机制。</li><li>智能指针的优势和使用场景。</li></ul></li><li><p><strong>内存管理和RAII：</strong></p><ul><li>资源获取即初始化（Resource Acquisition Is Initialization，RAII）的概念。</li><li>使用智能指针进行资源管理。</li><li>自定义智能指针。</li></ul></li><li><p><strong>指针和多线程：</strong></p><ul><li>多线程环境下的指针操作。</li><li>指针和线程安全的数据结构。</li></ul></li><li><p><strong>指针和性能：</strong></p><ul><li>指针操作对性能的影响。</li><li>避免指针操作的常见技巧。</li></ul></li><li><p><strong>深入理解内存模型：</strong></p><ul><li>栈内存和堆内存的概念。</li><li>内存布局和对齐。</li><li>内存模型和内存屏障。</li></ul></li></ol>',3),r=[o];function n(d,a){return l(),e("div",null,r)}const u=i(s,[["render",n],["__file","0insidePtrgy.html.vue"]]);export{u as default};
