const n=JSON.parse('{"key":"v-6d26eac0","path":"/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/3-vector.html","title":"c++3.vector容器","lang":"zh-CN","frontmatter":{"title":"c++3.vector容器","order":3,"category":["c++"],"description":"vector 实例化vector 基本方法 这是vector成员函数参考 #include &lt;iostream&gt; #include &lt;vector&gt; int main() { std::vector&lt;int&gt; v; // 添加元素 v.push_back(10); // 将 10 添加到 v 中 v.push_back(20); // 打印元素 std::cout &lt;&lt; \\"打印元素: \\"; for (const auto&amp; element : v) { std::cout &lt;&lt; element &lt;&lt; \\" \\"; } std::cout &lt;&lt; \\"\\\\n\\"; // 修改元素 v[1] = 25; // 将索引为 1 的元素修改为 25 // 删除元素 v.pop_back(); // 删除最后一个元素 // 插入元素 v.insert(v.begin() + 1, 15); // 在索引为 1 的位置插入元素 15 // 输出修改后的向量元素 std::cout &lt;&lt; \\"修改后: \\"; for (const auto&amp; element : v) { std::cout &lt;&lt; element &lt;&lt; \\" \\"; } std::cout &lt;&lt; \\"\\\\n\\"; // 查找元素 int target = 15; auto it = std::find(v.begin(), v.end(), target); if (it != v.end()) { std::cout &lt;&lt; \\"元素 \\" &lt;&lt; target &lt;&lt; \\"找到的索引 \\" &lt;&lt; std::distance(v.begin(), it) &lt;&lt; \\"\\\\n\\"; } else { std::cout &lt;&lt; \\"元素 \\" &lt;&lt; target &lt;&lt; \\" 没有找到元素\\\\n\\"; } return 0; }","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/stl_%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF_/3-vector.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++3.vector容器"}],["meta",{"property":"og:description","content":"vector 实例化vector 基本方法 这是vector成员函数参考 #include &lt;iostream&gt; #include &lt;vector&gt; int main() { std::vector&lt;int&gt; v; // 添加元素 v.push_back(10); // 将 10 添加到 v 中 v.push_back(20); // 打印元素 std::cout &lt;&lt; \\"打印元素: \\"; for (const auto&amp; element : v) { std::cout &lt;&lt; element &lt;&lt; \\" \\"; } std::cout &lt;&lt; \\"\\\\n\\"; // 修改元素 v[1] = 25; // 将索引为 1 的元素修改为 25 // 删除元素 v.pop_back(); // 删除最后一个元素 // 插入元素 v.insert(v.begin() + 1, 15); // 在索引为 1 的位置插入元素 15 // 输出修改后的向量元素 std::cout &lt;&lt; \\"修改后: \\"; for (const auto&amp; element : v) { std::cout &lt;&lt; element &lt;&lt; \\" \\"; } std::cout &lt;&lt; \\"\\\\n\\"; // 查找元素 int target = 15; auto it = std::find(v.begin(), v.end(), target); if (it != v.end()) { std::cout &lt;&lt; \\"元素 \\" &lt;&lt; target &lt;&lt; \\"找到的索引 \\" &lt;&lt; std::distance(v.begin(), it) &lt;&lt; \\"\\\\n\\"; } else { std::cout &lt;&lt; \\"元素 \\" &lt;&lt; target &lt;&lt; \\" 没有找到元素\\\\n\\"; } return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-06T20:17:16.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-12-06T20:17:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++3.vector容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-06T20:17:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"vector","slug":"vector","link":"#vector","children":[]},{"level":3,"title":"实例化vector","slug":"实例化vector","link":"#实例化vector","children":[]},{"level":3,"title":"基本方法","slug":"基本方法","link":"#基本方法","children":[]},{"level":3,"title":"迭代器","slug":"迭代器","link":"#迭代器","children":[]},{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]}],"git":{"createdTime":1701893836000,"updatedTime":1701893836000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"language/cpp/stl[标准模板]/3-vector.md","localizedDate":"2023年12月6日","excerpt":"<h3> vector</h3>\\n\\n\\n\\n<h3> 实例化vector</h3>\\n\\n\\n<h3> 基本方法</h3>\\n\\n\\n<blockquote>\\n<p>这是vector<a href=\\"https://en.cppreference.com/w/cpp/container/vector\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">成员函数参考</a></p>\\n</blockquote>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;vector&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>vector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span> v<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 添加元素</span>\\n    v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 将 10 添加到 v 中</span>\\n    v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 打印元素</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"打印元素: \\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">auto</span><span class=\\"token operator\\">&amp;</span> element <span class=\\"token operator\\">:</span> v<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> element <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 修改元素</span>\\n    v<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 将索引为 1 的元素修改为 25</span>\\n\\n    <span class=\\"token comment\\">// 删除元素</span>\\n    v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pop_back</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 删除最后一个元素</span>\\n\\n    <span class=\\"token comment\\">// 插入元素</span>\\n    v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 在索引为 1 的位置插入元素 15</span>\\n\\n    <span class=\\"token comment\\">// 输出修改后的向量元素</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"修改后: \\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">auto</span><span class=\\"token operator\\">&amp;</span> element <span class=\\"token operator\\">:</span> v<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> element <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 查找元素</span>\\n    <span class=\\"token keyword\\">int</span> target <span class=\\"token operator\\">=</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">auto</span> it <span class=\\"token operator\\">=</span> std<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token operator\\">!=</span> v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"元素 \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> target <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"找到的索引 \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">distance</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> it<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"元素 \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> target <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" 没有找到元素\\\\n\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
