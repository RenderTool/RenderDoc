import{_ as g,r as l,o as h,c as f,d as n,w as s,a,b as t,e as o}from"./app-a94ef497.js";const _="/RenderDoc/assets/inv004-0e92804e.png",v="/RenderDoc/assets/inv005-a7e5bac8.png",m="/RenderDoc/assets/inv006-78953538.jpg",b="/RenderDoc/assets/inv007-b0add5ca.png",k="/RenderDoc/assets/inv008-3f5ffba4.png",W="/RenderDoc/assets/inv009-f19d493c.png",j="/RenderDoc/assets/inv014-eafb9915.png",q="/RenderDoc/assets/inv003-39718d26.png",p="/RenderDoc/assets/inv032-35238759.png",x="/RenderDoc/assets/inv015-cf50bd4c.png",y="/RenderDoc/assets/inv034-b035f135.jpg",R="/RenderDoc/assets/inv033-5188105e.jpg",D="/RenderDoc/assets/inv016-29a813d1.png",c="/RenderDoc/assets/inv030-c689582c.png",L="/RenderDoc/assets/inv001-497abbe9.png",U="/RenderDoc/assets/inv002-fd9b585a.png",z="/RenderDoc/assets/inv018-4b3d7c67.png",E="/RenderDoc/assets/inv017-d3244461.png",d="/RenderDoc/assets/inv021-2a025a59.png",I="/RenderDoc/assets/inv022-e69b8a13.png",w="/RenderDoc/assets/inv012-00f565d6.png",A="/RenderDoc/assets/inv013-0a51bc4c.png",P="/RenderDoc/assets/inv019-e1b35273.png",T="/RenderDoc/assets/inv020-20c7859f.png",B="/RenderDoc/assets/inv024-3653714c.png",S="/RenderDoc/assets/inv025-17eb5136.png",N="/RenderDoc/assets/inv026-f2d03d9a.png",O="/RenderDoc/assets/inv028-8b1fc9aa.png",G="/RenderDoc/assets/inv029-891bf281.png",C="/RenderDoc/assets/inv031-040212b2.jpg",Y="/RenderDoc/assets/inv035-71cdecb1.png",F="/RenderDoc/assets/inv036-26718149.jpg",V="/RenderDoc/assets/inv037-d20f388d.png",M="/RenderDoc/assets/inv038-2e7a7bf3.png",K="/RenderDoc/assets/inv039-ecd32243.png",Q="/RenderDoc/assets/inv040-08804179.jpg",H="/RenderDoc/assets/inv010-8f5d4a5b.png",J={},X=a("h2",{id:"导言",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#导言","aria-hidden":"true"},"#"),t(" 导言")],-1),Z=a("hr",null,null,-1),$=a("blockquote",null,[a("p",null,"《永劫无间》是一款以斗罗大陆为背景的动作角色扮演游戏，拥有多种武器、技能、时装和战斗模式，让玩家体验不同的英雄故事和风格。")],-1),aa=a("figure",null,[a("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ta=a("h2",{id:"初体验",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#初体验","aria-hidden":"true"},"#"),t(" 初体验")],-1),na=a("blockquote",null,[a("p",null,[t("进入下个环节前，需了解一个概念："),a("br"),t(" 1.玩家(Player)指的是用户，视野（Camera|View）指的是用户操作的相机视角，后面说玩家二者默认一起考虑。"),a("br"),t(" 2.而角色（Pawn|Character）指的是玩家操作的角色,或者模型本身。")])],-1),sa=a("figure",null,[a("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ea=a("h3",{id:"机制猜测",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#机制猜测","aria-hidden":"true"},"#"),t(" 机制猜测")],-1),ia=a("figure",null,[a("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),oa=a("blockquote",null,[a("p",null,"真实情况咱们不得而知，也没必要得知。方法也有很多，咱们只是抛砖引玉，先让自己进入状态。")],-1),la=a("h3",{id:"widgetswitcher",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#widgetswitcher","aria-hidden":"true"},"#"),t(" WidgetSwitcher")],-1),ra={href:"https://docs.unrealengine.com/5.0/en-US/API/Runtime/UMG/Components/UWidgetSwitcher/",target:"_blank",rel:"noopener noreferrer"},pa=o('<blockquote><p>基本使用流程,后续不会使用此方法。</p></blockquote><ol><li>创建一个UWidgetSwitcher</li></ol><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>加入一些要切换显示的数据比如图片</li></ol><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>用节点切换到对应的图层Index</li></ol><figure><img src="'+W+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="道具信息" tabindex="-1"><a class="header-anchor" href="#道具信息" aria-hidden="true">#</a> 道具信息</h2><h3 id="道具ui" tabindex="-1"><a class="header-anchor" href="#道具ui" aria-hidden="true">#</a> 道具UI</h3>',9),ca=a("figure",null,[a("img",{src:j,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),da=a("h3",{id:"机制思考",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#机制思考","aria-hidden":"true"},"#"),t(" 机制思考")],-1),ua=a("figure",null,[a("img",{src:q,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ga=o('<figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="附近列表" tabindex="-1"><a class="header-anchor" href="#附近列表" aria-hidden="true">#</a> 附近列表</h2><h3 id="显示数量" tabindex="-1"><a class="header-anchor" href="#显示数量" aria-hidden="true">#</a> 显示数量</h3>',3),ha=a("figure",null,[a("img",{src:x,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),fa=a("figure",null,[a("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),_a=a("figure",null,[a("img",{src:R,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),va=a("h3",{id:"显示细节",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#显示细节","aria-hidden":"true"},"#"),t(" 显示细节")],-1),ma=a("figure",null,[a("img",{src:D,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ba=a("figure",null,[a("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ka=a("blockquote",null,[a("p",null,"至于为什么有这个替换，这里卖个关子，可以先阅读下去。")],-1),Wa=a("h3",{id:"添加移除",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#添加移除","aria-hidden":"true"},"#"),t(" 添加移除")],-1),ja=a("p",null,[t("至此，脑海中这个"),a("code",null,"附近列表"),t("的入栈有了个基本构想")],-1),qa=a("h3",{id:"构想1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#构想1","aria-hidden":"true"},"#"),t(" 构想①")],-1),xa=a("figure",null,[a("img",{src:L,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ya=a("h3",{id:"构想2",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#构想2","aria-hidden":"true"},"#"),t(" 构想②")],-1),Ra=a("figure",null,[a("img",{src:U,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Da=a("h3",{id:"碰撞范围",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#碰撞范围","aria-hidden":"true"},"#"),t(" 碰撞范围")],-1),La=a("figure",null,[a("img",{src:z,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ua=a("figure",null,[a("img",{src:E,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),za=a("h3",{id:"小实验1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#小实验1","aria-hidden":"true"},"#"),t(" 小实验1")],-1),Ea=o('<blockquote><p>实验版本，为了快速实现最小Demo,后续咱们再回头来考虑优化问题。</p></blockquote><ol><li>一个背包组件/子系统 + 一个背包交互的接口 +物体本身</li></ol><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>测试阶段用的是组件，但我推荐你用子系统，因为还要考虑大厅显示UI数据问题。</p></blockquote><ol start="2"><li>背包内需要一个临时数组,保存附近列表的物体</li></ol><figure><img src="'+I+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;Items&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	TArray<span class="token operator">&lt;</span>TObjectPtr<span class="token operator">&lt;</span>AActor<span class="token operator">&gt;&gt;</span> CurrentItems<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>配套的UI</li></ol><p>①. 道具显示页面</p><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">USTRUCT</span><span class="token punctuation">(</span>BlueprintType<span class="token punctuation">)</span>
<span class="token keyword">struct</span>  <span class="token class-name">FBaseStruct</span> 
<span class="token punctuation">{</span>
	<span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	FText Name<span class="token punctuation">;</span>

	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;Description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	FText Description<span class="token punctuation">;</span>
	
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;Icon&quot;</span><span class="token punctuation">,</span> MakeStructureDefaultValue<span class="token operator">=</span><span class="token string">&quot;None&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	TObjectPtr<span class="token operator">&lt;</span>UTexture2D<span class="token operator">&gt;</span> Icon<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">USTRUCT</span><span class="token punctuation">(</span>BlueprintType<span class="token punctuation">)</span>
<span class="token keyword">struct</span> <span class="token class-name">FPickUpInfoStruct</span>
<span class="token punctuation">{</span>
	<span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	
	<span class="token comment">//基本信息|名称_描述_Icon</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;PickUpItemUIInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	FBaseStruct ItemInfo<span class="token punctuation">;</span>

	<span class="token comment">//品质</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;PickUpItemQuantity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	int32 Quantity<span class="token punctuation">;</span>

	<span class="token comment">//按键信息</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;PickUpKey&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	TMap<span class="token operator">&lt;</span>FName<span class="token punctuation">,</span>FName<span class="token operator">&gt;</span> Keys<span class="token punctuation">;</span>
	
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②. 背包骨架</p><figure><img src="`+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',13),Ia=a("figure",null,[a("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),wa=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadWrite<span class="token punctuation">,</span> EditAnywhere<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">(</span>DisplayName<span class="token operator">=</span><span class="token string">&quot;GameplayEffect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	TArray<span class="token operator">&lt;</span>TSubclassOf<span class="token operator">&lt;</span>UGameplayEffect<span class="token operator">&gt;&gt;</span> Effect<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>一个ItemBaseActor</li></ol>`,2),Aa=a("figure",null,[a("img",{src:P,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Pa=a("blockquote",null,[a("p",null,"对应蓝图")],-1),Ta=a("figure",null,[a("img",{src:T,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ba=a("p",null,"咱们平时看到的附近列表，都会临时缓存在背包的附近列表数组中。List的子项都是一个物体本身的指针。",-1),Sa=a("figure",null,[a("img",{src:B,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Na=a("p",null,[t("通过碰撞体和接口加入物体或者移除物体，这没毛病。但永劫里还有一个变数——"),a("code",null,"物品信息UI")],-1),Oa=a("figure",null,[a("img",{src:S,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ga=a("h3",{id:"堆叠问题",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#堆叠问题","aria-hidden":"true"},"#"),t(" 堆叠问题")],-1),Ca=a("figure",null,[a("img",{src:N,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ya=a("figure",null,[a("img",{src:O,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Fa=a("h3",{id:"拾取细节",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#拾取细节","aria-hidden":"true"},"#"),t(" 拾取细节")],-1),Va=a("figure",null,[a("img",{src:G,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ma=a("figure",null,[a("img",{src:c,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ka=a("figure",null,[a("img",{src:C,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Qa=a("figure",null,[a("img",{src:Y,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ha=a("figure",null,[a("img",{src:F,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ja=a("figure",null,[a("img",{src:V,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Xa=o('<blockquote><p>背包组件对应蓝图,后面要进行C++重构，而且其实有更好的办法。</p></blockquote><figure><img src="'+M+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+K+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="背包部分" tabindex="-1"><a class="header-anchor" href="#背包部分" aria-hidden="true">#</a> 背包部分</h2><blockquote><p>永劫里面，道具还分可暂存道具比如钩锁、武备、药品、护甲粉和直接使用道具，比如果实这种。为此我们需要设计一个合理的使用 机制，这也是我们接下来讨论背包部分的重点。</p></blockquote><h3 id="使用时机" tabindex="-1"><a class="header-anchor" href="#使用时机" aria-hidden="true">#</a> 使用时机</h3>',6),Za=a("p",null,[t("但你发现没，这些直接使用的道具往往不是我们口中的掉落"),a("code",null,"道具"),t("，他们更像是功能性道具，比如果实、萤火虫。")],-1),$a=a("h3",{id:"小实验2",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#小实验2","aria-hidden":"true"},"#"),t(" 小实验2")],-1),at=a("figure",null,[a("img",{src:Q,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),tt=a("ol",null,[a("li",null,"信息交互的媒介为碰撞体、组件、角色Pawn"),a("li",null,"信息内容是配置好的道具内容，本质上其实是数据的增删改查。")],-1),nt=a("figure",null,[a("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),st=a("h3",{id:"背包边界",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#背包边界","aria-hidden":"true"},"#"),t(" 背包边界")],-1),et=a("figure",null,[a("img",{src:H,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),it=a("p",null,[t("如果说"),a("code",null,"附近列表"),t("属于背包的一部分，那么可以认为打开货郎这个操作就是打开背包，并且Push进货郎的UI。")],-1),ot=a("h2",{id:"货郎",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#货郎","aria-hidden":"true"},"#"),t(" 货郎")],-1),lt=a("h3",{id:"移动模式",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#移动模式","aria-hidden":"true"},"#"),t(" 移动模式")],-1);function rt(pt,ct){const e=l("chatmessage"),i=l("gifwithbutton"),u=l("ExternalLinkIcon"),r=l("RouterLink");return h(),f("div",null,[X,n(e,{avatar:"../../assets/emoji/bqb (6).png",avatarWidth:40},{default:s(()=>[t(" 恭喜你，发现了本站秘宝。此乃鄙人入魔篇。 ")]),_:1}),Z,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 我想实现一个类似永劫那样的背包系统！ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 安排！ ")]),_:1}),$,aa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 永劫无间基于U3D引擎，并不妨碍我们思考问题，咱们先进入游戏体验一波。 ")]),_:1}),ta,na,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 按Tab打开背包可以看到以下界面： ")]),_:1}),sa,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 两边有暗角，应该是防止一些过亮环境看不清背包内容。并且我发现平时这个附近是看不到的。 ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup24.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 上图可知，打开背包前只会显示具体的物品信息UI，打开背包后会被加载到附近列表中。 ")]),_:1}),ea,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 我觉得物体显示的图层和背包的图层应该是根据索引切换置顶的。 ")]),_:1}),ia,oa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" UE中对应的组件——WidgetSwitcher。 ")]),_:1}),la,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[a("p",null,[a("a",ra,[t("Widget Switcher是一种UI控件，它允许在多个子控件之间进行切换显示。它类似于选项卡控件，但不限于显示选项卡式的UI。"),n(u)])])]),_:1}),pa,n(i,{src:"../../assets/unrealgif/hpup21.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 上图中可以得知，玩家无论面向物体还是背向物体，进入某个范围都能显示对应的物品UI。 ")]),_:1}),ca,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 也可能是角色朝向方向发射射线和物体相交检测。无论如何都要先获取物体的指针。货郎的购买也是这样，固定位置显示一个购买按钮。 ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup23.gif"}),da,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 至少现在咱能确认一个信息，即UI始终固定在屏幕某个位置，避免绑定在物体上过度绘制。 ")]),_:1}),ua,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 经验和直觉告诉我们还得配合委托，广播刷新显示对应数据。 ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup21.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 说干就干，在UE中准备对应的UI ")]),_:1}),ga,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 数量大概12个 ")]),_:1}),ha,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 安排，并且把暗角也安排上，注意这里咱用的是ListView ")]),_:1}),fa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 对应的附近列表子项ItemUI，咱就不先考虑耐久了。 ")]),_:1}),_a,va,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 鼠标Hover图标会出现更详细的道具详细。 ")]),_:1}),ma,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这个咱们也先不考虑。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 我观察到道具和武器好像显示不太一样！武器中多了一个替换！ ")]),_:1}),ba,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这个简单，根据当前类型显示|隐藏这个选项就行了。 ")]),_:1}),ka,Wa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 随着角色推进，物体被依次推入列表。反只则反 ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup25.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[ja]),_:1}),qa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 道具上绑定碰撞体，碰撞开始推入背包栈，碰撞结束弹出背包栈。 ")]),_:1}),xa,ya,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 角色身上绑定碰撞体 ")]),_:1}),Ra,Da,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 考虑性能问题，构想①的思路好像比较靠谱。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 可以先用构想①尝试一波，不过很快你会发现问题的。 ")]),_:1}),La,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 注意一个细节——测试中准星并没有对准物体。 ")]),_:1}),Ua,za,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 纸上得来终觉浅，咱还是开始动手做个实验Demo吧。 ")]),_:1}),Ea,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 咱暂时不考虑魂玉，可以把这栏修改成武器背包，然后把原本武器背包替换成材料背包。 ")]),_:1}),Ia,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a("p",null,[t("如果你会GAS，也可以加上配套的GE，关于GAS"),n(r,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/8-GAS.html"},{default:s(()=>[t("传送门")]),_:1})])]),_:1}),wa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 不管三七二十一，先加个碰撞体 ")]),_:1}),Aa,Pa,Ta,n(i,{src:"../../assets/unrealgif/hpup27.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[Ba]),_:1}),Sa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[Na]),_:1}),Oa,Ga,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 如果道具摆放的非常分散，这个思路不会出错。 ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup28.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 一旦大量道具堆叠，就会出大毛病！ ")]),_:1}),Ca,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 一旦大量道具堆叠，则只会显示最后加入的物体详细。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 那么永劫中是怎么解决这个问题的？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 附近物体列表有物体的情况下（注意看这里的道具顺序），关闭背包后连续按E会依次从第一个切换到最后一个。 ")]),_:1}),Ya,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 可是按E不是拾取嘛？为什么会切换？ ")]),_:1}),Fa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这里有个前置条件——背包中道具已满，并且无法替换更高品质的道具。 ")]),_:1}),Va,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这也是他的武器为什么要设计一个单独替换按键的原因。 ")]),_:1}),Ma,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 那我想捡东西岂不是每次都要点满才行？这也太不方便了！ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 永劫的设计师当然考虑到了这个问题，当你的准星朝向不同的物体，会立即显示对应的物体。 ")]),_:1}),Ka,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 你这准星也没完全对齐啊？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 因为检测的并不是道具本身的碰撞，而是道具外的碰撞体。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 我不理解，你已经在碰撞体内部了，发射射线不对准道具怎么检测? ")]),_:1}),Qa,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这个倒好解决，可以用两碰撞体，一个负责检测Pawn,一个负责接收射线。 ")]),_:1}),Ha,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 但是，我要说但是。随之而来的BUG就出现了，先画个图。 ")]),_:1}),Ja,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 你只碰到了第一个Actor,附近列表中也只显示一个，但你的射线却能碰到更远的物体，导致显示BUG ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 如果我手动把这个物体加到数组中呢？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 手动加入意味着你不去触发道具的EndOver函数会永远留在附近列表中。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 也就是说，射线距离应该和道具检测距离匹配是吗？这么看来只能用构思②的思路了！ ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup30.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 从上可知，构思①和构思②都存在这个问题，只能想办法过滤掉不在背包的内容，即对射线命中的物体进行一次是否在列表中查询操作。 ")]),_:1}),Xa,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 物品被分成了道具背包、魂玉背包、武器背包。其实吧，加个配置字段就行了，生成的物体可以直接用还是缓存到附近列表（后续称做临时背包）、背包中。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[Za]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 也就是说他们可能被另外一个Actor携带和配置，永劫里小怪（AI Pawn）死后也会有掉落道具的行为。 ")]),_:1}),$a,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 我们整理一下物体从看到到使用的简单过程吧。 ")]),_:1}),at,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 简单分析一下： ")]),_:1}),tt,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 回头看一下我们的小实验1内容，我们仅仅考虑了交互媒介。却没考虑信息内容的存取。 ")]),_:1}),nt,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 你的组件不就在负责数据存取嘛？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 那么请问，这个数据是哪里来的？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 道具啊！ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 道具上的数据是哪里来的？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 场景生成的呗 ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 场景凭空生成嘛？ ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (4).png",avatarWidth:40},{default:s(()=>[t(" 。。。。。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 当然不是凭空生成，而是放在数据库中根据规则生成。在网络篇已经充分讨论了客户端不可信。 即所有关键操作必须由服务器完成。但我们得放权给某些类去执行这些操作。 ")]),_:1}),st,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 另外，我注意到一个细节，打开货郎和打开背包似乎是同个页面的不同接口调用 ")]),_:1}),et,n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[it]),_:1}),ot,lt,n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 无论是打开背包还是打开货郎，角色除了不能动视角以外仍然可以移动。 ")]),_:1}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[a("p",null,[t("这个我们在Lyra-"),n(r,{to:"/unreal/lyra%5B%E5%A4%A9%E7%A7%A4%E5%BA%A7%5D/2-ImproveCommonUI.html"},{default:s(()=>[t("Inputmode的封装")]),_:1}),t(" 已经讨论过了，游戏的3种状态。")])]),_:1}),n(e,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:s(()=>[t(" 离开货郎后背包就会关闭，重新进入后只会显示购买UI. ")]),_:1}),n(i,{src:"../../assets/unrealgif/hpup26.gif"}),n(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 这个也很好理解，碰撞体的EndOver事件触发后，广播了一条关闭背包的委托。重新进入触发StartOver，则广播一条打开背包的委托，并且加载 货郎UI。 ")]),_:1})])}const ut=g(J,[["render",rt],["__file","1-InventorySystem.html.vue"]]);export{ut as default};
