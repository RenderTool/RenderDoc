const n=JSON.parse('{"key":"v-103999a8","path":"/algorithm/01Swap.html","title":"Swap|交换函数","lang":"zh-CN","frontmatter":{"title":"Swap|交换函数","order":1,"category":["algorithm"],"description":"交换函数 swap 是一个用于交换两个变量值的常见算法。在 C++ 中，可以通过以下两种方式实现 swap 函数： 传统的交换方式： #include &lt;iostream&gt; template &lt;typename T&gt; void swap(T&amp; a, T&amp; b) { T temp = a; a = b; b = temp; } int main() { int x = 5, y = 10; std::cout &lt;&lt; \\"Before swap: x = \\" &lt;&lt; x &lt;&lt; \\", y = \\" &lt;&lt; y &lt;&lt; std::endl; swap(x, y); std::cout &lt;&lt; \\"After swap: x = \\" &lt;&lt; x &lt;&lt; \\", y = \\" &lt;&lt; y &lt;&lt; std::endl; return 0; }","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/algorithm/01Swap.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"Swap|交换函数"}],["meta",{"property":"og:description","content":"交换函数 swap 是一个用于交换两个变量值的常见算法。在 C++ 中，可以通过以下两种方式实现 swap 函数： 传统的交换方式： #include &lt;iostream&gt; template &lt;typename T&gt; void swap(T&amp; a, T&amp; b) { T temp = a; a = b; b = temp; } int main() { int x = 5, y = 10; std::cout &lt;&lt; \\"Before swap: x = \\" &lt;&lt; x &lt;&lt; \\", y = \\" &lt;&lt; y &lt;&lt; std::endl; swap(x, y); std::cout &lt;&lt; \\"After swap: x = \\" &lt;&lt; x &lt;&lt; \\", y = \\" &lt;&lt; y &lt;&lt; std::endl; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-23T11:15:30.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-11-23T11:15:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Swap|交换函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-23T11:15:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"交换函数","slug":"交换函数","link":"#交换函数","children":[]}],"git":{"createdTime":1699973702000,"updatedTime":1700738130000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"algorithm/01Swap.md","localizedDate":"2023年11月14日","excerpt":"<h3> 交换函数</h3>\\n<p><code>swap</code> 是一个用于交换两个变量值的常见算法。在 C++ 中，可以通过以下两种方式实现 <code>swap</code> 函数：</p>\\n<ol>\\n<li>\\n<p><strong>传统的交换方式：</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">template</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">typename</span> <span class=\\"token class-name\\">T</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span>T<span class=\\"token operator\\">&amp;</span> a<span class=\\"token punctuation\\">,</span> T<span class=\\"token operator\\">&amp;</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    T temp <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">;</span>\\n    a <span class=\\"token operator\\">=</span> b<span class=\\"token punctuation\\">;</span>\\n    b <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Before swap: x = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> x <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\", y = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> y <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"After swap: x = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> x <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\", y = \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> y <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{n as data};
