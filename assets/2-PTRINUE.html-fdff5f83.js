const e=JSON.parse('{"key":"v-b86c2cb2","path":"/unreal/template_%E6%A8%A1%E6%9D%BF_/2-PTRINUE.html","title":"TP2.智能指针TODO","lang":"zh-CN","frontmatter":{"title":"TP2.智能指针TODO","order":2,"category":["u++"],"tag":["Specifiers"],"description":"TSharedPtr： 代表共享所有权的智能指针。多个 TSharedPtr 实例可以共享相同的对象，当最后一个引用超出范围时，对象会被销毁。 TSharedPtr&lt;MyClass&gt; SharedObject = MakeShared&lt;MyClass&gt;(); TWeakPtr： 代表弱引用智能指针，通常与 TSharedPtr 一起使用，用于避免循环引用。 TSharedPtr&lt;MyClass&gt; SharedObject = MakeShared&lt;MyClass&gt;(); TWeakPtr&lt;MyClass&gt; WeakObject = SharedObject; TUniquePtr： 代表独占所有权的智能指针。每个 TUniquePtr 实例拥有对对象的唯一所有权，用于确保资源的独占性。 TUniquePtr&lt;MyClass&gt; UniqueObject = MakeUnique&lt;MyClass&gt;(); UPROPERTY 和 UPROPERTY_POINTER： 在UE4的中，UPROPERTY 用于声明成员变量，并可以与 TWeakObjectPtr 一起使用，以创建弱引用指针。 UPROPERTY() TWeakObjectPtr&lt;AActor&gt; WeakActor; FObjectPtr： 代表一个智能指针，可以包含 UObject 类型的对象。用于管理UE的对象生命周期。 FObjectPtr&lt;UClass&gt; MyObject = NewObject&lt;UClass&gt;();","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/template_%E6%A8%A1%E6%9D%BF_/2-PTRINUE.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"TP2.智能指针TODO"}],["meta",{"property":"og:description","content":"TSharedPtr： 代表共享所有权的智能指针。多个 TSharedPtr 实例可以共享相同的对象，当最后一个引用超出范围时，对象会被销毁。 TSharedPtr&lt;MyClass&gt; SharedObject = MakeShared&lt;MyClass&gt;(); TWeakPtr： 代表弱引用智能指针，通常与 TSharedPtr 一起使用，用于避免循环引用。 TSharedPtr&lt;MyClass&gt; SharedObject = MakeShared&lt;MyClass&gt;(); TWeakPtr&lt;MyClass&gt; WeakObject = SharedObject; TUniquePtr： 代表独占所有权的智能指针。每个 TUniquePtr 实例拥有对对象的唯一所有权，用于确保资源的独占性。 TUniquePtr&lt;MyClass&gt; UniqueObject = MakeUnique&lt;MyClass&gt;(); UPROPERTY 和 UPROPERTY_POINTER： 在UE4的中，UPROPERTY 用于声明成员变量，并可以与 TWeakObjectPtr 一起使用，以创建弱引用指针。 UPROPERTY() TWeakObjectPtr&lt;AActor&gt; WeakActor; FObjectPtr： 代表一个智能指针，可以包含 UObject 类型的对象。用于管理UE的对象生命周期。 FObjectPtr&lt;UClass&gt; MyObject = NewObject&lt;UClass&gt;();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-04T21:06:49.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:tag","content":"Specifiers"}],["meta",{"property":"article:modified_time","content":"2023-12-04T21:06:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TP2.智能指针TODO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-04T21:06:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[],"git":{"createdTime":1701724009000,"updatedTime":1701724009000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"unreal/template[模板]/2-PTRINUE.md","localizedDate":"2023年12月4日","excerpt":"\\n<ol>\\n<li>\\n<p><strong>TSharedPtr：</strong> 代表共享所有权的智能指针。多个 <code>TSharedPtr</code> 实例可以共享相同的对象，当最后一个引用超出范围时，对象会被销毁。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TSharedPtr<span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span> SharedObject <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">MakeShared</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>TWeakPtr：</strong> 代表弱引用智能指针，通常与 <code>TSharedPtr</code> 一起使用，用于避免循环引用。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TSharedPtr<span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span> SharedObject <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">MakeShared</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nTWeakPtr<span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span> WeakObject <span class=\\"token operator\\">=</span> SharedObject<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>TUniquePtr：</strong> 代表独占所有权的智能指针。每个 <code>TUniquePtr</code> 实例拥有对对象的唯一所有权，用于确保资源的独占性。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TUniquePtr<span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span> UniqueObject <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">MakeUnique</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>MyClass<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>UPROPERTY 和 UPROPERTY_POINTER：</strong> 在UE4的中，<code>UPROPERTY</code> 用于声明成员变量，并可以与 <code>TWeakObjectPtr</code> 一起使用，以创建弱引用指针。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token function\\">UPROPERTY</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nTWeakObjectPtr<span class=\\"token operator\\">&lt;</span>AActor<span class=\\"token operator\\">&gt;</span> WeakActor<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>FObjectPtr：</strong> 代表一个智能指针，可以包含 <code>UObject</code> 类型的对象。用于管理UE的对象生命周期。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>FObjectPtr<span class=\\"token operator\\">&lt;</span>UClass<span class=\\"token operator\\">&gt;</span> MyObject <span class=\\"token operator\\">=</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">NewObject</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span>UClass<span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{e as data};
