const e=JSON.parse('{"key":"v-65974895","path":"/unreal/gameplay_%E6%B8%B8%E6%88%8F%E6%A1%86%E6%9E%B6_/4-Subsystem.html","title":"GP4.Subsystem|子系统TODO","lang":"zh-CN","frontmatter":{"title":"GP4.Subsystem|子系统TODO","order":4,"category":["u++"],"description":"/** Subsystems are auto instanced classes that share the lifetime of certain engine constructs * *\\tCurrently supported Subsystem lifetimes are: *\\t\\tEngine\\t\\t -&gt; inherit UEngineSubsystem *\\t\\tEditor\\t\\t -&gt; inherit UEditorSubsystem *\\t\\tGameInstance -&gt; inherit UGameInstanceSubsystem *\\t\\tWorld\\t\\t -&gt; inherit UWorldSubsystem *\\t\\tLocalPlayer\\t -&gt; inherit ULocalPlayerSubsystem * * *\\tNormal Example: *\\t\\tclass UMySystem : public UGameInstanceSubsystem *\\tWhich can be accessed by: *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tUMySystem* MySystem = GameInstance-&gt;GetSubsystem&lt;UMySystem&gt;(); * *\\tor the following if you need protection from a null GameInstance *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tUMyGameSubsystem* MySubsystem = UGameInstance::GetSubsystem&lt;MyGameSubsystem&gt;(GameInstance); * * *\\tYou can get also define interfaces that can have multiple implementations. *\\tInterface Example : * MySystemInterface * With 2 concrete derivative classes: * MyA : public MySystemInterface * MyB : public MySystemInterface * *\\tWhich can be accessed by: *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tconst TArray&lt;UMyGameSubsystem*&gt;&amp; MySubsystems = GameInstance-&gt;GetSubsystemArray&lt;MyGameSubsystem&gt;(); * */","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/gameplay_%E6%B8%B8%E6%88%8F%E6%A1%86%E6%9E%B6_/4-Subsystem.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"GP4.Subsystem|子系统TODO"}],["meta",{"property":"og:description","content":"/** Subsystems are auto instanced classes that share the lifetime of certain engine constructs * *\\tCurrently supported Subsystem lifetimes are: *\\t\\tEngine\\t\\t -&gt; inherit UEngineSubsystem *\\t\\tEditor\\t\\t -&gt; inherit UEditorSubsystem *\\t\\tGameInstance -&gt; inherit UGameInstanceSubsystem *\\t\\tWorld\\t\\t -&gt; inherit UWorldSubsystem *\\t\\tLocalPlayer\\t -&gt; inherit ULocalPlayerSubsystem * * *\\tNormal Example: *\\t\\tclass UMySystem : public UGameInstanceSubsystem *\\tWhich can be accessed by: *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tUMySystem* MySystem = GameInstance-&gt;GetSubsystem&lt;UMySystem&gt;(); * *\\tor the following if you need protection from a null GameInstance *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tUMyGameSubsystem* MySubsystem = UGameInstance::GetSubsystem&lt;MyGameSubsystem&gt;(GameInstance); * * *\\tYou can get also define interfaces that can have multiple implementations. *\\tInterface Example : * MySystemInterface * With 2 concrete derivative classes: * MyA : public MySystemInterface * MyB : public MySystemInterface * *\\tWhich can be accessed by: *\\t\\tUGameInstance* GameInstance = ...; *\\t\\tconst TArray&lt;UMyGameSubsystem*&gt;&amp; MySubsystems = GameInstance-&gt;GetSubsystemArray&lt;MyGameSubsystem&gt;(); * */"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-31T13:48:08.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-12-31T13:48:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GP4.Subsystem|子系统TODO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-31T13:48:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"文档翻译","slug":"文档翻译","link":"#文档翻译","children":[]},{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[{"level":3,"title":"常函数&常量指针","slug":"常函数-常量指针","link":"#常函数-常量指针","children":[]},{"level":3,"title":"#defineFORCEINLINE__forceinline","slug":"defineforceinline-forceinline","link":"#defineforceinline-forceinline","children":[]},{"level":3,"title":"继承特性","slug":"继承特性","link":"#继承特性","children":[]},{"level":3,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]}]}],"git":{"createdTime":1701893836000,"updatedTime":1704030488000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":2},{"name":"sigaohe","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":9.05,"words":2715},"filePathRelative":"unreal/gameplay[游戏框架]/4-Subsystem.md","localizedDate":"2023年12月6日","excerpt":"\\n\\n<figure><figcaption></figcaption></figure>\\n\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">/** Subsystems are auto instanced classes that share the lifetime of certain engine constructs\\n * \\n *\\tCurrently supported Subsystem lifetimes are:\\n *\\t\\tEngine\\t\\t -&gt; inherit UEngineSubsystem\\n *\\t\\tEditor\\t\\t -&gt; inherit UEditorSubsystem\\n *\\t\\tGameInstance -&gt; inherit UGameInstanceSubsystem\\n *\\t\\tWorld\\t\\t -&gt; inherit UWorldSubsystem\\n *\\t\\tLocalPlayer\\t -&gt; inherit ULocalPlayerSubsystem\\n *\\n *\\n *\\tNormal Example:\\n *\\t\\tclass UMySystem : public UGameInstanceSubsystem\\n *\\tWhich can be accessed by:\\n *\\t\\tUGameInstance* GameInstance = ...;\\n *\\t\\tUMySystem* MySystem = GameInstance-&gt;GetSubsystem&lt;UMySystem&gt;();\\n *\\n *\\tor the following if you need protection from a null GameInstance\\n *\\t\\tUGameInstance* GameInstance = ...;\\n *\\t\\tUMyGameSubsystem* MySubsystem = UGameInstance::GetSubsystem&lt;MyGameSubsystem&gt;(GameInstance);\\n *\\n *\\n *\\tYou can get also define interfaces that can have multiple implementations.\\n *\\tInterface Example :\\n *      MySystemInterface\\n *    With 2 concrete derivative classes:\\n *      MyA : public MySystemInterface\\n *      MyB : public MySystemInterface\\n *\\n *\\tWhich can be accessed by:\\n *\\t\\tUGameInstance* GameInstance = ...;\\n *\\t\\tconst TArray&lt;UMyGameSubsystem*&gt;&amp; MySubsystems = GameInstance-&gt;GetSubsystemArray&lt;MyGameSubsystem&gt;();\\n *\\n */</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
