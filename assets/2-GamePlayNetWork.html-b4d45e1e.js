import{_ as u}from"./spwanActor-aee20b67.js";import{_ as g}from"./replicate011-149a4561.js";import{_ as h,r,o as m,c as _,d as e,w as n,a,b as t,e as i}from"./app-1da6783c.js";const b="/RenderDoc/assets/clientreplicate-bb522964.png",f="/RenderDoc/assets/serverreplicate-ec4181cb.png",v="/RenderDoc/assets/replicate-ef5442ed.png",k="/RenderDoc/assets/variables--8cab992a.png",y="/RenderDoc/assets/actorfz001-25ed0972.png",x="/RenderDoc/assets/replicate001-58f44ef4.png",R="/RenderDoc/assets/replicate002-727f8050.png",L="/RenderDoc/assets/replicate004-fbf8cf4a.png",j="/RenderDoc/assets/replicate003-0d24cb2b.png",W="/RenderDoc/assets/replicate005-ef89a4f3.png",A="/RenderDoc/assets/replicate006-363dfc79.png",q="/RenderDoc/assets/authority-fc5ce4e4.png",P="/RenderDoc/assets/hasauthority-553d1019.png",w="/RenderDoc/assets/hasauthoritynode-b2d5a2ff.png",D="/RenderDoc/assets/network001-2911ae57.png",z="/RenderDoc/assets/network002-8a10c262.png",S="/RenderDoc/assets/csnode-d9847eaf.png",C="/RenderDoc/assets/replicate008-7be1ce93.png",E="/RenderDoc/assets/replicate009-fd57ad68.png",N="/RenderDoc/assets/replicate010-c1a6e065.png",I="/RenderDoc/assets/onlinemode-b48bb7b8.png",O="/RenderDoc/assets/Framework_Network-c8861046.svg",U="/RenderDoc/assets/Framework_Network_Two--f96202d5.svg",B="/RenderDoc/assets/simple-3e9c7950.svg",T="/RenderDoc/assets/errorpc-4170dc9d.svg",G="/RenderDoc/assets/replicate007-0ab41c85.png",M="/RenderDoc/assets/gh-52feb941.jpg",F={},H=a("h2",{id:"导读",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#导读","aria-hidden":"true"},"#"),t(" 导读")],-1),V=a("blockquote",null,[a("p",null,"按数字1可以Spawn生成Actor")],-1),X=a("figure",null,[a("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),$=a("figure",null,[a("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),J=a("figure",null,[a("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),K=i('<h2 id="replication-复制" tabindex="-1"><a class="header-anchor" href="#replication-复制" aria-hidden="true">#</a> Replication|复制</h2><blockquote><p>复制是服务器将信息/数据传递给客户端的行为。</p></blockquote><figure><img src="'+v+'" alt="中文" tabindex="0" loading="lazy"><figcaption>中文</figcaption></figure><figure><img src="'+k+`" alt="英文" tabindex="0" loading="lazy"><figcaption>英文</figcaption></figure><blockquote><p>对应的CPP</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token class-name">AMyCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">ATestCharacter</span><span class="token punctuation">(</span><span class="token keyword">const</span> FObjectInitializer<span class="token operator">&amp;</span> ObjectInitializer<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">Super</span><span class="token punctuation">(</span>ObjectInitializer<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    bReplicates <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',7),Q=a("figure",null,[a("img",{src:x,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Y=a("figure",null,[a("img",{src:R,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Z=a("figure",null,[a("img",{src:L,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),aa=a("figure",null,[a("img",{src:j,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ta=a("p",null,[t("并不是，咱们虽然在客户端和服务端都看到了这个Actor,他们都只是独立的副本，并且是因为咱们启用了"),a("code",null,"客户端上的网络加载")],-1),ea=a("figure",null,[a("img",{src:W,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),na=a("figure",null,[a("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),sa=i('<h2 id="网络权威" tabindex="-1"><a class="header-anchor" href="#网络权威" aria-hidden="true">#</a> 网络权威</h2><h3 id="authority-remote" tabindex="-1"><a class="header-anchor" href="#authority-remote" aria-hidden="true">#</a> Authority|Remote</h3><div class="hint-container note"><p class="hint-container-title">注</p><p>罗马音读音为 /əˈθɔːrəti/（英式发音）或 /əˈθɒrəti/（美式发音）。</p></div>',3),ia=a("figure",null,[a("img",{src:q,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),oa=a("p",null,[t("在UE，可以通过调用 "),a("code",null,"HasAuthority()"),t(' 来检查当前代码是否在具有 "Authority" 的实体上执行。例如：')],-1),la=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">HasAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 在具有Authority的实体上执行的代码</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+P+'" alt="BP宏" tabindex="0" loading="lazy"><figcaption>BP宏</figcaption></figure><figure><img src="'+w+'" alt="展开" tabindex="0" loading="lazy"><figcaption>展开</figcaption></figure>',3),ra=a("figure",null,[a("img",{src:D,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ca=a("h3",{id:"enetrole-remote",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#enetrole-remote","aria-hidden":"true"},"#"),t(" ENetRole|Remote")],-1),da=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">GetLocalRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ROLE_Authority
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',2),pa={href:"https://docs.unrealengine.com/4.27/zh-CN/InteractiveExperiences/Networking/Actors/Roles/",target:"_blank",rel:"noopener noreferrer"},ua=a("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[a("pre",{class:"language-cpp"},[a("code",null,[a("span",{class:"token comment"},"/** The network role of an actor on a local/remote network context */"),t(`
`),a("span",{class:"token function"},"UENUM"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(`
`),a("span",{class:"token keyword"},"enum"),t(),a("span",{class:"token class-name"},"ENetRole"),t(),a("span",{class:"token operator"},":"),t(),a("span",{class:"token keyword"},"int"),t(`
`),a("span",{class:"token punctuation"},"{"),t(`
	`),a("span",{class:"token comment"},"/** No role at all. */"),t(`
	ROLE_None`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** Locally simulated proxy of this actor. */"),t(`
	ROLE_SimulatedProxy`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** Locally autonomous proxy of this actor. */"),t(`
	ROLE_AutonomousProxy`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** Authoritative control over the actor. */"),t(`
	ROLE_Authority`),a("span",{class:"token punctuation"},","),t(`
	ROLE_MAX`),a("span",{class:"token punctuation"},","),t(`
`),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),ga=a("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[a("pre",{class:"language-cpp"},[a("code",null,[a("span",{class:"token comment"},"/** 在本地/远程网络环境中，演员的网络角色 */"),t(`
`),a("span",{class:"token function"},"UENUM"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),t(`
`),a("span",{class:"token keyword"},"enum"),t(),a("span",{class:"token class-name"},"ENetRole"),t(),a("span",{class:"token operator"},":"),t(),a("span",{class:"token keyword"},"int"),t(`
`),a("span",{class:"token punctuation"},"{"),t(`
	`),a("span",{class:"token comment"},"/** 没有角色。 */"),t(`
	ROLE_None`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** 该演员的本地模拟代理。 */"),t(`
	ROLE_SimulatedProxy`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** 该演员的本地自治代理。 */"),t(`
	ROLE_AutonomousProxy`),a("span",{class:"token punctuation"},","),t(`
	`),a("span",{class:"token comment"},"/** 对该演员的权威控制。 */"),t(`
	ROLE_Authority`),a("span",{class:"token punctuation"},","),t(`
	ROLE_MAX`),a("span",{class:"token punctuation"},","),t(`
`),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),t(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),ha=a("figure",null,[a("img",{src:S,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ma=a("blockquote",null,[a("p",null,"Character继承Pawn，Pawn继承Actor，本质还是Actor所以可以调到。")],-1),_a=a("figure",null,[a("img",{src:C,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ba=a("figure",null,[a("img",{src:E,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),fa=a("p",null,[t("将复制关闭后，即便是服务端也只能在本地生成，因为这个Actor的复制并没有启用。即便是咱们启用了所谓的"),a("code",null,"客户端上的网络加载"),t(".")],-1),va=a("figure",null,[a("img",{src:N,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),ka=a("p",null,[t("我可以理解成一开始这个level中压根就没有这个对象是吧，也就不存在"),a("code",null,"客户端上的网络加载"),t("行为了。")],-1),ya=a("h2",{id:"网络模型",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#网络模型","aria-hidden":"true"},"#"),t(" 网络模型")],-1),xa=i('<figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="基本网络模式" tabindex="-1"><a class="header-anchor" href="#基本网络模式" aria-hidden="true">#</a> 基本网络模式</h3><table><thead><tr><th>网络模式</th><th>说明</th></tr></thead><tbody><tr><td>独立 (Standalone)</td><td>游戏作为服务器运行，不接受远程客户端连接。参与游戏的玩家必须为本地玩家。此模式用于单人游戏和本地多人游戏。其将运行本地玩家适用的服务器逻辑和客户端逻辑。</td></tr><tr><td>客户端 (Client)</td><td>游戏作为网络多人游戏会话中与服务器连接的客户端运行。其不会运行服务器逻辑。</td></tr><tr><td>聆听服务器 (Listen Server)</td><td>游戏作为主持网络多人游戏会话的服务器运行。其接受远程客户端中的连接，且直接在服务器上拥有本地玩家。此模式通常用于临时合作和竞技多人游戏。</td></tr><tr><td>专属服务器 (Dedicated Server)</td><td>游戏作为主持网络多人游戏会话的服务器运行。其接受远程客户端中的连接，但无本地玩家，因此为了高效运行，其将废弃图形、音效、输入和其他面向玩家的功能。此模式常用于需要更固定、安全和大型多人功能的游戏。</td></tr></tbody></table><h3 id="ds和ls区别" tabindex="-1"><a class="header-anchor" href="#ds和ls区别" aria-hidden="true">#</a> DS和LS区别</h3><blockquote><p>（Dedicated Server）和监听服务器（Listen Server）</p></blockquote><table><thead><tr><th>方面</th><th>独立服务器（Dedicated Server）</th><th>监听服务器（Listen Server）</th></tr></thead><tbody><tr><td>主机</td><td>独立服务器，不需要玩家主机</td><td>服务器和客户端合并在一起</td></tr><tr><td>与玩家的依赖</td><td>独立于玩家；不受玩家加入或退出的影响</td><td>需要托管玩家在线</td></tr><tr><td>操作系统</td><td>可编译为Windows和Linux</td><td>客户端的操作系统</td></tr><tr><td>可视化表示</td><td>没有可视部分，没有UI，PlayerController或Character</td><td>需要UI，PlayerController和Character</td></tr><tr><td>连接性</td><td>可在具有固定IP地址的云服务器上运行</td><td>玩家连接到客户端的IP地址</td></tr><tr><td>IP地址问题</td><td>玩家连接到固定IP，没有动态IP问题</td><td>由于客户端的IP更改，玩家可能面临动态IP问题</td></tr><tr><td>OnlineSubsystem的使用</td><td>可以使用OnlineSubsystem解决IP问题</td><td>也可以使用OnlineSubsystem解决动态IP问题</td></tr></tbody></table><h3 id="gameplay网络职责" tabindex="-1"><a class="header-anchor" href="#gameplay网络职责" aria-hidden="true">#</a> GamePlay网络职责</h3>',7),Ra=a("figure",null,[a("img",{src:O,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),La=a("h3",{id:"ds-dedicated-server-服务器网络模型",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ds-dedicated-server-服务器网络模型","aria-hidden":"true"},"#"),t(" DS(Dedicated Server)服务器网络模型")],-1),ja=a("figure",null,[a("img",{src:U,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Wa=a("h3",{id:"rpc-remote-procedure-calls",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#rpc-remote-procedure-calls","aria-hidden":"true"},"#"),t(" RPC|Remote Procedure Calls")],-1),Aa=a("p",null,'"RPC" 是 "Remote Procedure Call"（远程过程调用）的缩写。它是一种通信协议和编程模型，用于在不同的计算机或进程之间调用远程服务或函数，就像调用本地函数一样。',-1),qa=a("p",null,"在软件开发中，特别是在分布式系统中，RPC允许一个程序调用另一个地址空间（通常在远程机器上）的过程或服务，而开发人员不必担心底层网络通信的细节。",-1),Pa=a("p",null,"基本思想是，通过RPC，你可以调用远程机器上的函数，就好像调用本地函数一样，而不必手动处理底层网络通信和数据传输。这样的抽象使得分布式系统的开发更加方便。",-1),wa=a("p",null,"在RPC中，通常有两个角色：",-1),Da=a("ol",null,[a("li",null,[a("strong",null,"客户端(Client):"),t(" 发起RPC调用的一方。")]),a("li",null,[a("strong",null,"服务器(Server):"),t(" 响应RPC调用的一方。")])],-1),za=a("p",null,[t("理解还是有误！客户端没有权限生成Actor让"),a("strong",null,"服务器"),t("去同步（客户端不可靠）,我给你画个简单的流程请求图吧！")],-1),Sa=a("blockquote",null,[a("p",null,"注意这里的服务器描述可能不准确，LS确实是生成球体，而DS模式可能只是生成球体的代理。")],-1),Ca=a("figure",null,[a("img",{src:B,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ea=a("figure",null,[a("img",{src:T,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Na=a("h2",{id:"实践",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#实践","aria-hidden":"true"},"#"),t(" 实践")],-1),Ia=a("h3",{id:"bp",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#bp","aria-hidden":"true"},"#"),t(" BP")],-1),Oa=a("figure",null,[a("img",{src:G,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ua=a("figure",null,[a("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),Ba=a("h3",{id:"c",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#c","aria-hidden":"true"},"#"),t(" C++")],-1),Ta=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>   <span class="token comment">// .h</span>
   <span class="token function">UFUNCTION</span><span class="token punctuation">(</span>Server<span class="token punctuation">,</span> Reliable<span class="token punctuation">)</span>
   <span class="token keyword">void</span> <span class="token function">ServerSetHealth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// .cpp</span>
   <span class="token keyword">void</span> <span class="token class-name">AMyActor</span><span class="token double-colon punctuation">::</span><span class="token function">ServerSetHealth_Implementation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
     <span class="token comment">//spawn的代码</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ga=a("h2",{id:"扩展阅读",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#扩展阅读","aria-hidden":"true"},"#"),t(" 扩展阅读")],-1),Ma=a("figure",null,[a("img",{src:M,alt:"光环网络同步",tabindex:"0",loading:"lazy"}),a("figcaption",null,"光环网络同步")],-1),Fa={href:"https://www.gdcvault.com/play/1024041/Networking-Scripted-Weapons-and-Abilities",target:"_blank",rel:"noopener noreferrer"},Ha={href:"https://cedric-neukirchen.net/docs/multiplayer-compendium/additional-resources",target:"_blank",rel:"noopener noreferrer"},Va={href:"https://forums.unrealengine.com/t/who-has-authority-server-or-client-and-when/247708/7",target:"_blank",rel:"noopener noreferrer"};function Xa($a,Ja){const s=r("chatmessage"),o=r("gifwithbutton"),l=r("ExternalLinkIcon"),p=r("CodeTabs");return m(),_("div",null,[H,e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" Baba，我遇到问题了！ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (1).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 说！ ")]),_:1}),e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 我在我的角色类中添加了如下函数： ")]),_:1}),V,X,e(s,{avatar:" ../../assets/emoji/new7.png",avatarWidth:40},{default:n(()=>[t(" 接着，我进行了简单网络同步测试。同时运行了客户端和服务端后，发现在客户端按1生成Actor，服务端并没有同步生成！ ")]),_:1}),$,e(s,{avatar:" ../../assets/emoji/new7.png",avatarWidth:40},{default:n(()=>[t(" 然而，神奇的是在服务端按1时，客户端却同步了！ ")]),_:1}),J,e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 我明明已经启用了网络复制！为什么客户端中按1，服务端没有同步生成？ ")]),_:1}),K,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 在UE中只有Actor拥有的Replication，一切继承自Actor的派生都有这个能力，当然也包括组件。 ")]),_:1}),Q,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 现在，咱先不讨论SpawnActor的情况，直接将一个Actor丢入场景。并且没有启用复制。 ")]),_:1}),Y,Z,e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 没有复制也能显示？这个复制可有可无？ ")]),_:1}),aa,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[ta]),_:1}),ea,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 咱们关闭它就原形毕露了。 ")]),_:1}),na,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 虽然没有这个物体，此次依然会有球体的碰撞。 ")]),_:1}),e(o,{src:"../../assets/unrealgif/hpup10.gif"}),e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 啊？我怎么越听越迷糊了？为什么关闭了网络加载依然会有碰撞？ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 别急，咱们先来补几个概念 ")]),_:1}),sa,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 客户端确实生成了Actor，但最终解释权在服务端，即服务器拥有绝对权限(Authority)。 ")]),_:1}),ia,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[oa]),_:1}),la,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 为了更进一步，我们翻看翻看源码。 ")]),_:1}),ra,ca,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 可以看到实际它调用了GetLocalRole() ")]),_:1}),da,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[a("p",null,[t("参考"),a("a",pa,[t("文档"),e(l)])])]),_:1}),e(p,{id:"122",data:[{id:"原文"},{id:"翻译"}],"tab-id":"language"},{title0:n(({value:c,isActive:d})=>[t("原文")]),title1:n(({value:c,isActive:d})=>[t("翻译")]),tab0:n(({value:c,isActive:d})=>[ua]),tab1:n(({value:c,isActive:d})=>[ga]),_:1}),ha,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 可以看到客户端的角色只有Remote权限没有Authority。 ")]),_:1}),ma,e(o,{src:"../../assets/unrealgif/hpimpove5.gif"}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 为了测试，咱们把代码写在Actor的tick中，然后Debug每个场景中的的网络权限。 ")]),_:1}),e(o,{src:"../../assets/unrealgif/hpup11.gif"}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 很显然，客户端并没有网络权限，因为它只是个无情的模拟机器。 ")]),_:1}),e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 既然用不用Replication都能正确显示，那么这个Replication到底有什么用？ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 场景默认生成的Actor确实看不出太多区别，但你提到的SpawnActor就看出大区别了。 ")]),_:1}),_a,ba,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[fa]),_:1}),va,e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[ka]),_:1}),ya,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 在多人在线游戏中，客户端通常是模仿服务器行为的，因为服务器负责游戏世界的状态和逻辑。这种架构被称为客户端-服务器模型。 ")]),_:1}),e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 突然官腔！ ")]),_:1}),xa,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" GamePlay框架中各自对应的网络职责划分（大佬的图） ")]),_:1}),Ra,La,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 专用服务器的下的网络模型 ")]),_:1}),ja,Wa,e(s,{avatar:" ../../assets/emoji/hx.png",avatarWidth:40},{default:n(()=>[t(" 你说客户端没有什么权限。可是！客户端总得发送我的按键消息吧！ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 是的，客户端总得通过一个方法去告诉服务器自己的行为，我们把这个过程称为RPC. ")]),_:1}),Aa,qa,Pa,wa,Da,e(s,{avatar:" ../../assets/emoji/bqb (6).png",avatarWidth:40},{default:n(()=>[t(" 6!所以我该怎么改才能让客户端生成的Actor能同步到服务器呢？ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[za]),_:1}),Sa,Ca,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 现在康康你原本的思路。 ")]),_:1}),Ea,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" So现在问题就变成怎么让咱的客户端调用RPC让服务器Spawn这个Actor,然后同步给其他人。 ")]),_:1}),Na,Ia,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" UE的BP中，可以在自定义事件中标记RPC状态，默认是不复制的。 ")]),_:1}),Oa,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 现在咱们搞一个在服务器上调用的事件，并确保Actor本身可以复制。 ")]),_:1}),Ua,e(s,{avatar:" ../../assets/emoji/bqb (6).png",avatarWidth:40},{default:n(()=>[t(" 妙啊！这样相当于客户端申请让服务器生成这个Actor ")]),_:1}),e(o,{src:"../../assets/unrealgif/hpup12.gif"}),Ba,e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 无论它咱们变，始终逃不开对象、类、函数调用这个框架，UE中有只需要在函数名中加入对应的宏标记即可 ")]),_:1}),Ta,e(s,{avatar:" ../../assets/emoji/bqb (6).png",avatarWidth:40},{default:n(()=>[t(" 很显然，这种情况只适用于生成启用复制的Actor,可是有时候我想同步一些变量该怎么办？ ")]),_:1}),e(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:n(()=>[t(" 这个就看下一章吧！ ")]),_:1}),Ga,Ma,a("p",null,[a("a",Fa,[t("《守望先锋》中的网络脚本武器和能力"),e(l)])]),a("p",null,[a("a",Ha,[t("大佬博客"),e(l)])]),a("p",null,[a("a",Va,[t("官方论坛"),e(l)])])])}const Za=h(F,[["render",Xa],["__file","2-GamePlayNetWork.html.vue"]]);export{Za as default};
