import{_ as p,r as o,o as l,c as d,d as s,w as e,a as n,b as a,e as c}from"./app-3dcb82b3.js";const r={},u=c(`<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><blockquote><p>在C++中，变量声明和定义：</p></blockquote><p><strong>变量声明（Variable Declaration）：</strong> 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">extern</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>  <span class="token comment">//这是一个变量声明：（通过使用extern关键字，可以声明变量名而不定义它）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>需要注意的是extern 不能在main函数中，且需要在外部赋值才能在main函数中修改。</p></blockquote><p><strong>变量定义（Variable Definition）：</strong> 变量定义是指在程序中为变量分配实际的内存空间，同时也可以对其进行初始化。变量定义包含了变量的声明。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>  <span class="token comment">// 这是一个变量定义</span>
<span class="token keyword">int</span> y<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//变量定义，{}默认是0</span>
<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">42</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//也是一个变量定义</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码中：</p>`,8),k=n("li",null,[n("code",null,"int x"),a(" 是变量声明和定义的组合，它告诉编译器分配一个整数类型的内存空间给变量 "),n("code",null,"x"),a("，并将其初始化为 42。")],-1),m=n("code",null,"int y",-1),h=n("code",null,"y",-1),_=n("li",null,[n("code",null,"int c"),a(" 也使了{}初始化，并且赋值42。")],-1),b=c(`<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>为变量分配地址和存储空间的称为定义，不分配地址的称为声明。</p><h3 id="易混淆" tabindex="-1"><a class="header-anchor" href="#易混淆" aria-hidden="true">#</a> 易混淆</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">b</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p><code>int a = 1;</code>: 这是一个整数变量声明，将变量a初始化为1。</p></li><li><p><code>int a();</code>: 这是一个函数声明，而不是变量声明。它声明了一个返回整数的函数a，但没有提供函数体。这被称为函数原型。</p></li><li><p><code>int b(a);</code>: 这是一个函数声明，其中参数b是一个整数，而参数a是一个函数。这是因为在C++中，函数名可以被视为指向函数的指针。因此，这里的b函数的参数是一个函数。</p></li></ol>`,5);function v(g,f){const t=o("chatmessage"),i=o("RouterLink");return l(),d("div",null,[s(t,{avatar:"../../../assets/emoji/blzt.png",avatarWidth:40},{default:e(()=>[a(" 变量声明和定义 ")]),_:1}),u,n("ol",null,[k,n("li",null,[m,a(" 使用了{}初始化了 "),h,a("，默认不赋值是0，是现代C++的写法，"),s(i,{to:"/language/cpp/BaseGuide%5B%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%5D/3-function%20brace%20initialization.html"},{default:e(()=>[a("后续章节")]),_:1}),a("中就有描述。")]),_]),s(t,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" 需要注意的是，变量声明和定义可以分开进行，但通常在实际编程中，它们往往是同时进行的。 ")]),_:1}),b,s(t,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" b函数的参数并不是a这个函数的返回值（即a=1），而是a函数本身。实际上，在这个声明中，a函数的原型被传递给了b函数。 ")]),_:1})])}const y=p(r,[["render",v],["__file","2-Variable Declaration_ Definition.html.vue"]]);export{y as default};
