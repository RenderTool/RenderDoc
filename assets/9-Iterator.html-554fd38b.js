import{_ as a,r as s,o as t,c as e,d as p,w as o,e as c,b as l}from"./app-56fc971d.js";const r={},i=c(`<ol><li><p><strong>TArray 迭代器：</strong></p><ul><li><code>TArray</code> 是UE4中用于动态数组的模板类。它提供了多种迭代器，如 <code>TArray&lt;T&gt;::Iterator</code>，<code>TArray&lt;T&gt;::ConstIterator</code> 等。使用迭代器可以循环遍历数组中的元素。</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TArray<span class="token operator">&lt;</span>int32<span class="token operator">&gt;</span> MyArray<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> It <span class="token operator">=</span> MyArray<span class="token punctuation">.</span><span class="token function">CreateIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> It<span class="token punctuation">;</span> <span class="token operator">++</span>It<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    int32<span class="token operator">&amp;</span> Element <span class="token operator">=</span> <span class="token operator">*</span>It<span class="token punctuation">;</span>
    <span class="token comment">// 对 Element 进行操作</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>TMap 迭代器：</strong></p><ul><li><code>TMap</code> 是UE4中用于映射的模板类。它提供了多种迭代器，如 <code>TMap&lt;KeyType, ValueType&gt;::TIterator</code>，<code>TMap&lt;KeyType, ValueType&gt;::TConstIterator</code> 等。</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TMap<span class="token operator">&lt;</span>FString<span class="token punctuation">,</span> int32<span class="token operator">&gt;</span> MyMap<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> It <span class="token operator">=</span> MyMap<span class="token punctuation">.</span><span class="token function">CreateIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> It<span class="token punctuation">;</span> <span class="token operator">++</span>It<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> FString<span class="token operator">&amp;</span> Key <span class="token operator">=</span> It<span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    int32<span class="token operator">&amp;</span> Value <span class="token operator">=</span> It<span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 对 Key 和 Value 进行操作</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>TSet 迭代器：</strong></p><ul><li><code>TSet</code> 是UE4中用于集合的模板类。它提供了多种迭代器，如 <code>TSet&lt;T&gt;::TIterator</code>，<code>TSet&lt;T&gt;::TConstIterator</code> 等。</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TSet<span class="token operator">&lt;</span>int32<span class="token operator">&gt;</span> MySet<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> It <span class="token operator">=</span> MySet<span class="token punctuation">.</span><span class="token function">CreateIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> It<span class="token punctuation">;</span> <span class="token operator">++</span>It<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    int32<span class="token operator">&amp;</span> Element <span class="token operator">=</span> <span class="token operator">*</span>It<span class="token punctuation">;</span>
    <span class="token comment">// 对 Element 进行操作</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>TActorIterator：</strong></p><ul><li><code>TActorIterator</code> 是用于迭代关卡中的Actor的迭代器。</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>TActorIterator<span class="token operator">&lt;</span>AMyActor<span class="token operator">&gt;</span> <span class="token function">It</span><span class="token punctuation">(</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> It<span class="token punctuation">;</span> <span class="token operator">++</span>It<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    AMyActor<span class="token operator">*</span> Actor <span class="token operator">=</span> <span class="token operator">*</span>It<span class="token punctuation">;</span>
    <span class="token comment">// 对 Actor 进行操作</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1);function u(d,k){const n=s("ChatMessage");return t(),e("div",null,[p(n,{avatar:"../../assets/emoji/hh.png",avatarWidth:40},{default:o(()=>[l(" 迭代器通常是用于循环访问集合（例如数组、映射、集合等）中的元素的工具。UE4提供了多种类型的迭代器，其中一些常见的包括： ")]),_:1}),i])}const m=a(r,[["render",u],["__file","9-Iterator.html.vue"]]);export{m as default};
