const e=JSON.parse('{"key":"v-2bd582c7","path":"/language/cpp/keywords_%E5%85%B3%E9%94%AE%E5%AD%97_/Keywords%20new_%20delete.html","title":"c++new和delete","lang":"zh-CN","frontmatter":{"title":"c++new和delete","category":["c++"],"tag":["new","delete","内存四区","关键字"],"description":"手动new和delete 堆（Heap）操作： 使用new关键字来动态分配内存，创建对象，并返回指向该对象的指针。在堆上分配的内存需要手动释放，以避免内存泄漏。当您使用new创建对象时，对象的生命周期可以长于当前作用域。 int* ptr = new int; // 在堆上分配一个整数的内存空间 delete ptr; // 释放内存，避免内存泄漏","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/keywords_%E5%85%B3%E9%94%AE%E5%AD%97_/Keywords%20new_%20delete.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++new和delete"}],["meta",{"property":"og:description","content":"手动new和delete 堆（Heap）操作： 使用new关键字来动态分配内存，创建对象，并返回指向该对象的指针。在堆上分配的内存需要手动释放，以避免内存泄漏。当您使用new创建对象时，对象的生命周期可以长于当前作用域。 int* ptr = new int; // 在堆上分配一个整数的内存空间 delete ptr; // 释放内存，避免内存泄漏"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-15T05:59:15.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:tag","content":"new"}],["meta",{"property":"article:tag","content":"delete"}],["meta",{"property":"article:tag","content":"内存四区"}],["meta",{"property":"article:tag","content":"关键字"}],["meta",{"property":"article:modified_time","content":"2023-11-15T05:59:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++new和delete\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-15T05:59:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"手动new和delete","slug":"手动new和delete","link":"#手动new和delete","children":[]},{"level":2,"title":"隐藏式new和delete","slug":"隐藏式new和delete","link":"#隐藏式new和delete","children":[]}],"git":{"createdTime":1699887822000,"updatedTime":1700027955000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":4}]},"readingTime":{"minutes":1.08,"words":324},"filePathRelative":"language/cpp/keywords[关键字]/Keywords new& delete.md","localizedDate":"2023年11月13日","excerpt":"\\n<h2> 手动new和delete</h2>\\n\\n<p>堆（Heap）操作： 使用new关键字来动态分配内存，创建对象，并返回指向该对象的指针。在堆上分配的内存需要手动释放，以避免内存泄漏。当您使用new创建对象时，对象的生命周期可以长于当前作用域。</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">*</span> ptr <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 在堆上分配一个整数的内存空间</span>\\n<span class=\\"token keyword\\">delete</span> ptr<span class=\\"token punctuation\\">;</span>         <span class=\\"token comment\\">// 释放内存，避免内存泄漏</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
