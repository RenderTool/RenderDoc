import{_ as s,r as n,o as i,c as d,a as l,b as e,d as o,w as t,e as c}from"./app-56fc971d.js";const r="/RenderDoc/assets/SSHKEY-9e47306a.png",u="/RenderDoc/assets/sshkeynew-de0fad15.png",h="/RenderDoc/assets/sshurl-95610b9f.png",p={},b=c(`<h2 id="问题详情" tabindex="-1"><a class="header-anchor" href="#问题详情" aria-hidden="true">#</a> 问题详情</h2><p>有时候要对多个 github 账号进行切换。</p><h2 id="解决思路" tabindex="-1"><a class="header-anchor" href="#解决思路" aria-hidden="true">#</a> 解决思路</h2><h3 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备" aria-hidden="true">#</a> 前置准备</h3><table><thead><tr><th>账户名</th><th>邮箱</th></tr></thead><tbody><tr><td>username-1</td><td>your_email_a@example.com</td></tr><tr><td>username-n</td><td>your_email_n@example.com</td></tr></tbody></table><div id="section1"></div><h3 id="_1-生成其中一个账户密钥" tabindex="-1"><a class="header-anchor" href="#_1-生成其中一个账户密钥" aria-hidden="true">#</a> 1. 生成其中一个账户密钥</h3><blockquote><ul><li>GitBash或者IDE中输入</li></ul></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name 账户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><ul><li>无错误后继续输入</li></ul></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name 你的邮箱
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>别傻到直接拷贝，替换中文内容成你对应的账户名、邮箱</p></blockquote><h3 id="_2-创建-ssh-key" tabindex="-1"><a class="header-anchor" href="#_2-创建-ssh-key" aria-hidden="true">#</a> 2. 创建 ssh key</h3><blockquote><ul><li>打开CMD输入以下内容</li></ul></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token string">&quot;ssh-keygen -t rsa -C &quot;</span>你的邮箱&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>默认在你的<code>C：\\Users\\root/.ssh/</code>生成id_rsa和id_rsa.pub两个文件，用记事本打开id_rsa.pub</p></blockquote><figure><img src="`+r+'" alt="SSH-KEY.png" tabindex="0" loading="lazy"><figcaption>SSH-KEY.png</figcaption></figure><h3 id="_3-拷贝上传至服务器-名字随意即可" tabindex="-1"><a class="header-anchor" href="#_3-拷贝上传至服务器-名字随意即可" aria-hidden="true">#</a> 3. 拷贝上传至服务器(名字随意即可)</h3><figure><img src="'+u+`" alt="uploadSSH-KEY2Github.png" tabindex="0" loading="lazy"><figcaption>uploadSSH-KEY2Github.png</figcaption></figure><h3 id="_4-其他账号重复1-3在-ssh-目录下创建-config-文件" tabindex="-1"><a class="header-anchor" href="#_4-其他账号重复1-3在-ssh-目录下创建-config-文件" aria-hidden="true">#</a> 4. 其他账号重复<a href="#section1">1-3</a>在 <code>~/.ssh/</code> 目录下创建 config 文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> ～/.ssh/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-修改config-内容-config文件的规则很简单——在每个host寻找对应的秘钥。" tabindex="-1"><a class="header-anchor" href="#_5-修改config-内容-config文件的规则很简单——在每个host寻找对应的秘钥。" aria-hidden="true">#</a> 5. 修改config 内容(config文件的规则很简单——在每个Host寻找对应的秘钥。)</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 正常使用的 rsa</span>
Host github.com
HostName github.com
IdentityFile ~/.ssh/id_rsa
 
<span class="token comment"># new 新账号</span>
Host new
HostName github.com
IdentityFile ~/.ssh/id_rsa_new
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-测试" tabindex="-1"><a class="header-anchor" href="#_6-测试" aria-hidden="true">#</a> 6. 测试</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-T</span> aa.github.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>如果出现</p></blockquote><p><code>Permission denied (publickey).</code></p><blockquote><p>说明没有对应的秘钥</p></blockquote><blockquote><p>如果出现</p></blockquote><p><code>Hi git_xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><blockquote><p>表示配置成功</p></blockquote><h3 id="_7-切换账户" tabindex="-1"><a class="header-anchor" href="#_7-切换账户" aria-hidden="true">#</a> 7. 切换账户</h3><blockquote><p>假定我们A账户切换到N账号</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name n账户名
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email n账户的邮箱
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-clone-or-add" tabindex="-1"><a class="header-anchor" href="#_8-clone-or-add" aria-hidden="true">#</a> 8. clone or add</h3><blockquote><p>clone</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 原项目地址为</span>
<span class="token function">git</span> clone 你的远程仓库的ssh地址
<span class="token comment"># 修改为 </span>
<span class="token function">git</span> clone 你的新远程仓库的ssh地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>add</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin 你的远程仓库的ssh地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>如果出现错误</p></blockquote><p><code> fatal: remote origin already exists</code></p><blockquote><p>则按以下顺序输入</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">rm</span> origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin  你的远程仓库的ssh地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><span style="color:red;">什么？你不知道ssh地址怎么来？</span></p></blockquote><figure><img src="`+h+`" alt="sshurl.png" tabindex="0" loading="lazy"><figcaption>sshurl.png</figcaption></figure><blockquote><p><span style="color:red;">什么？你不知道add和clone是啥？</span> 我真的快疯掉了.....</p></blockquote><ul><li>git remote add 用于在已有的本地仓库中添加一个远程仓库的引用。</li><li>git clone 用于将远程仓库的内容完整地复制到本地，同时会自动创建一个默认的远程引用。</li></ul><h3 id="_9-push-项目" tabindex="-1"><a class="header-anchor" href="#_9-push-项目" aria-hidden="true">#</a> 9. push 项目</h3><blockquote><p>设置好远端后，直接push即可</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,52);function g(m,v){const a=n("RouterLink");return i(),d("div",null,[b,l("p",null,[e("如果你阅读本文有点吃力，或者对其中的git操作不太清楚，我强烈建议你看看我写的git基本操作篇。🤦‍♂️ "),o(a,{to:"/tools/git/"},{default:t(()=>[e("git基本操作")]),_:1})])])}const f=s(p,[["render",g],["__file","2-switch-multiple-github-accounts.html.vue"]]);export{f as default};
