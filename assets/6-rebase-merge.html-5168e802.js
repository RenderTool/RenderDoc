const e=JSON.parse('{"key":"v-ec184d2e","path":"/tools/git/6-rebase-merge.html","title":"Git-6.变基(rebase)和合并(merge)区别？","lang":"zh-CN","frontmatter":{"title":"Git-6.变基(rebase)和合并(merge)区别？","order":6,"category":["Git"],"tag":["踩坑记录"],"description":"问题详情 解析 合并（Merge）： 合并是将两个分支的历史记录合并在一起，创建一个新的合并提交来整合两者的修改。 合并会保留原分支的完整历史记录，因此可以清晰地看到哪些修改来自于哪个分支。 合并会创建一个新的合并提交，这个提交有多个父节点，指向被合并的分支的最新提交和合并分支的最新提交。 o---o---o---o---o---o (分支A) \\\\ / o---o---o (分支B) 合并后： o---o---o---o---o---o---o (合并提交) \\\\ / / o---o---o (分支A) (分支B)","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/tools/git/6-rebase-merge.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"Git-6.变基(rebase)和合并(merge)区别？"}],["meta",{"property":"og:description","content":"问题详情 解析 合并（Merge）： 合并是将两个分支的历史记录合并在一起，创建一个新的合并提交来整合两者的修改。 合并会保留原分支的完整历史记录，因此可以清晰地看到哪些修改来自于哪个分支。 合并会创建一个新的合并提交，这个提交有多个父节点，指向被合并的分支的最新提交和合并分支的最新提交。 o---o---o---o---o---o (分支A) \\\\ / o---o---o (分支B) 合并后： o---o---o---o---o---o---o (合并提交) \\\\ / / o---o---o (分支A) (分支B)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-23T11:15:30.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:tag","content":"踩坑记录"}],["meta",{"property":"article:modified_time","content":"2023-11-23T11:15:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git-6.变基(rebase)和合并(merge)区别？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-23T11:15:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"问题详情","slug":"问题详情","link":"#问题详情","children":[]},{"level":2,"title":"解析","slug":"解析","link":"#解析","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1699373749000,"updatedTime":1700738130000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":3}]},"readingTime":{"minutes":1.51,"words":454},"filePathRelative":"tools/git/6-rebase-merge.md","localizedDate":"2023年11月7日","excerpt":"<h2> 问题详情</h2>\\n\\n<h2> 解析</h2>\\n<ol>\\n<li>\\n<p><strong>合并（Merge）：</strong></p>\\n<ul>\\n<li>合并是将两个分支的历史记录合并在一起，创建一个新的合并提交来整合两者的修改。</li>\\n<li>合并会保留原分支的完整历史记录，因此可以清晰地看到哪些修改来自于哪个分支。</li>\\n<li>合并会创建一个新的合并提交，这个提交有多个父节点，指向被合并的分支的最新提交和合并分支的最新提交。</li>\\n</ul>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>o---o---o---o---o---o   (分支A)\\n \\\\         /\\n  o---o---o   (分支B)\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>合并后：</li>\\n</ul>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>o---o---o---o---o---o---o   (合并提交)\\n \\\\         /           /\\n  o---o---o   (分支A)   (分支B)\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{e as data};
