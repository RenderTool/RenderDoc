const e=JSON.parse('{"key":"v-0c9e0433","path":"/unreal/shader_%E7%9D%80%E8%89%B2%E5%99%A8_/4-%E5%A7%8B%E4%BA%8E%E7%81%AF%E5%85%89.html","title":"SD4.灯光","lang":"zh-CN","frontmatter":{"title":"SD4.灯光","order":4,"category":["unreal"],"description":"110-Vlado-full (1).jpg 从灯光开始 固定管线时代： 在早期的游戏引擎中，使用固定管线图形渲染流水线。灯光通常是基于简单的光照模型，如冯·肖定律（Phong Shading）等。这种方法的计算相对简单，但在细节和真实感方面表现一般。 可编程管线和着色器： 随着可编程图形管线的出现，引擎可以更灵活地处理灯光。开发者可以使用自定义的着色器编写更复杂的光照算法，如基于物理的渲染（Physically Based Rendering，PBR）。PBR模型更准确地模拟了真实世界中光的反射和折射。 实时光照技术： 引擎开始引入实时光照技术，如实时全局光照（Real-Time Global Illumination）和实时阴影技术。这些技术旨在模拟真实世界中的光照效果，提高场景的真实感。包括屏幕空间反射（Screen Space Reflection）和环境遮挡（Ambient Occlusion）等技术。 实时光追： 随着硬件性能的提升，一些引擎引入了实时光追技术，这种技术通过模拟光线在场景中的传播来实现更高质量的光照效果。实时光追通常需要更强大的计算资源，但可以提供更真实的光照和阴影。 深度学习和实时渲染： 最近，深度学习技术开始应用于游戏渲染，例如基于机器学习的超分辨率技术、反走样和实时光照估计等。这些技术旨在通过神经网络等方法改善实时渲染的质量和性能。","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/shader_%E7%9D%80%E8%89%B2%E5%99%A8_/4-%E5%A7%8B%E4%BA%8E%E7%81%AF%E5%85%89.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"SD4.灯光"}],["meta",{"property":"og:description","content":"110-Vlado-full (1).jpg 从灯光开始 固定管线时代： 在早期的游戏引擎中，使用固定管线图形渲染流水线。灯光通常是基于简单的光照模型，如冯·肖定律（Phong Shading）等。这种方法的计算相对简单，但在细节和真实感方面表现一般。 可编程管线和着色器： 随着可编程图形管线的出现，引擎可以更灵活地处理灯光。开发者可以使用自定义的着色器编写更复杂的光照算法，如基于物理的渲染（Physically Based Rendering，PBR）。PBR模型更准确地模拟了真实世界中光的反射和折射。 实时光照技术： 引擎开始引入实时光照技术，如实时全局光照（Real-Time Global Illumination）和实时阴影技术。这些技术旨在模拟真实世界中的光照效果，提高场景的真实感。包括屏幕空间反射（Screen Space Reflection）和环境遮挡（Ambient Occlusion）等技术。 实时光追： 随着硬件性能的提升，一些引擎引入了实时光追技术，这种技术通过模拟光线在场景中的传播来实现更高质量的光照效果。实时光追通常需要更强大的计算资源，但可以提供更真实的光照和阴影。 深度学习和实时渲染： 最近，深度学习技术开始应用于游戏渲染，例如基于机器学习的超分辨率技术、反走样和实时光照估计等。这些技术旨在通过神经网络等方法改善实时渲染的质量和性能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-03T17:33:45.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-02-03T17:33:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SD4.灯光\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-03T17:33:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"从灯光开始","slug":"从灯光开始","link":"#从灯光开始","children":[{"level":3,"title":"灯光烘培","slug":"灯光烘培","link":"#灯光烘培","children":[]},{"level":3,"title":"2UV","slug":"_2uv","link":"#_2uv","children":[]},{"level":3,"title":"光源色温","slug":"光源色温","link":"#光源色温","children":[]},{"level":3,"title":"光源大小","slug":"光源大小","link":"#光源大小","children":[]},{"level":3,"title":"物体影响","slug":"物体影响","link":"#物体影响","children":[]},{"level":3,"title":"构图","slug":"构图","link":"#构图","children":[]}]}],"git":{"createdTime":1706981625000,"updatedTime":1706981625000,"contributors":[{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":4.11,"words":1232},"filePathRelative":"unreal/shader[着色器]/4-始于灯光.md","localizedDate":"2024年2月3日","excerpt":"\\n\\n<figure><figcaption>110-Vlado-full (1).jpg</figcaption></figure>\\n<h2> 从灯光开始</h2>\\n\\n<figure><figcaption></figcaption></figure>\\n\\n\\n<ol>\\n<li>\\n<p><strong>固定管线时代：</strong>\\n在早期的游戏引擎中，使用固定管线图形渲染流水线。灯光通常是基于简单的光照模型，如冯·肖定律（Phong Shading）等。这种方法的计算相对简单，但在细节和真实感方面表现一般。</p>\\n</li>\\n<li>\\n<p><strong>可编程管线和着色器：</strong>\\n随着可编程图形管线的出现，引擎可以更灵活地处理灯光。开发者可以使用自定义的着色器编写更复杂的光照算法，如基于物理的渲染（Physically Based Rendering，PBR）。PBR模型更准确地模拟了真实世界中光的反射和折射。</p>\\n</li>\\n<li>\\n<p><strong>实时光照技术：</strong>\\n引擎开始引入实时光照技术，如实时全局光照（Real-Time Global Illumination）和实时阴影技术。这些技术旨在模拟真实世界中的光照效果，提高场景的真实感。包括屏幕空间反射（Screen Space Reflection）和环境遮挡（Ambient Occlusion）等技术。</p>\\n</li>\\n<li>\\n<p><strong>实时光追：</strong>\\n随着硬件性能的提升，一些引擎引入了实时光追技术，这种技术通过模拟光线在场景中的传播来实现更高质量的光照效果。实时光追通常需要更强大的计算资源，但可以提供更真实的光照和阴影。</p>\\n</li>\\n<li>\\n<p><strong>深度学习和实时渲染：</strong>\\n最近，深度学习技术开始应用于游戏渲染，例如基于机器学习的超分辨率技术、反走样和实时光照估计等。这些技术旨在通过神经网络等方法改善实时渲染的质量和性能。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
