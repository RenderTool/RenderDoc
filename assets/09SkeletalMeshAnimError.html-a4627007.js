import{_ as c,r as p,o as l,c as u,d as n,w as s,a as e,e as i,b as t}from"./app-94ffcd11.js";const d="/RenderDoc/assets/new animation02-5f7c3503.jpg",r="/RenderDoc/assets/new animation03-31bde76e.png",k="/RenderDoc/assets/new animation04-60da88b5.png",m={},v=e("figure",null,[e("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),g=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">UExorcistFunctionLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">SetSkeletalMeshAndAnimation</span><span class="token punctuation">(</span>USkeletalMesh<span class="token operator">*</span> NewMesh<span class="token punctuation">,</span> UAnimationAsset<span class="token operator">*</span> NewAnimation<span class="token punctuation">,</span>
                                                           <span class="token keyword">float</span> PlayRate<span class="token punctuation">,</span> <span class="token keyword">bool</span> bLooping<span class="token punctuation">,</span>
                                                           USkeletalMeshComponent<span class="token operator">*</span> TargetMeshComponent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>TargetMeshComponent<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 设置骨骼网格</span>
		TargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetSkeletalMesh</span><span class="token punctuation">(</span>NewMesh<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 播放动画</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>NewAnimation<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			TargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">PlayAnimation</span><span class="token punctuation">(</span>NewAnimation<span class="token punctuation">,</span> bLooping<span class="token punctuation">)</span><span class="token punctuation">;</span>
			TargetMeshComponent<span class="token operator">-&gt;</span><span class="token function">SetPlayRate</span><span class="token punctuation">(</span>PlayRate<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=e("figure",null,[e("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),f=e("figure",null,[e("img",{src:k,alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),h=e("p",null,"是的，我们应该搞清楚一个动画正确的播放流程正确的调用顺序应该是 SetAnimationMode -> SetAnimation -> Play",-1),_=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">PlayAnimation</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token class-name">UAnimationAsset</span><span class="token operator">*</span> NewAnimToPlay<span class="token punctuation">,</span> <span class="token keyword">bool</span> bLooping<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">SetAnimationMode</span><span class="token punctuation">(</span>EAnimationMode<span class="token double-colon punctuation">::</span>AnimationSingleNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">SetAnimation</span><span class="token punctuation">(</span>NewAnimToPlay<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">Play</span><span class="token punctuation">(</span>bLooping<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">USkeletalMeshComponent</span><span class="token double-colon punctuation">::</span><span class="token function">SetAnimation</span><span class="token punctuation">(</span>UAnimationAsset<span class="token operator">*</span> NewAnimToPlay<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	UAnimSingleNodeInstance<span class="token operator">*</span> SingleNodeInstance <span class="token operator">=</span> <span class="token function">GetSingleNodeInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>SingleNodeInstance<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		SingleNodeInstance<span class="token operator">-&gt;</span><span class="token function">SetAnimationAsset</span><span class="token punctuation">(</span>NewAnimToPlay<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		SingleNodeInstance<span class="token operator">-&gt;</span><span class="token function">SetPlaying</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span> AnimScriptInstance <span class="token operator">!=</span> <span class="token keyword">nullptr</span> <span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogAnimation<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Currently in Animation Blueprint mode. Please change AnimationMode to Use Animation Asset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=e("p",null,"PlayAnimation 可以理解成同个角色的播放不同动画，SetAnimation则是切换到不同角色后播放新的动画。 作为验证，你可以用之前的代码设置同个角色，播放不同的动画。",-1);function y(w,S){const a=p("chatmessage"),o=p("gifwithbutton");return l(),u("div",null,[n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 起因是这样得，我在做角色皮肤切换效果 ")]),_:1}),n(a,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 然后呢？ ")]),_:1}),n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 按正常人的思维来说，只要设置新的骨骼网格体+播放指定动画就行了！ ")]),_:1}),v,n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 一开始我只使用了前面的设置蒙皮资产和更新切换不同的角色，实现的非常完美！ ")]),_:1}),n(o,{src:"../../assets/unrealgif/hpimpove09.gif"}),n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 然后我把后面的节点也用上了 ")]),_:1}),g,n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 悲剧发生了！切换动画后角色的材质ID出现了错位，甚至蒙皮动画都出现了问题！ ")]),_:1}),n(o,{src:"../../assets/unrealgif/hpimpove10.gif"}),n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 各自百度后，发现好像只能通过生成新的组件和移除组件来实现！ ")]),_:1}),b,n(a,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 很显然，这不是一个好办法，重新生成组件和销毁组件的性能开销太大 ")]),_:1}),n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 最终我翻开了源码发现了这里两段函数！ ")]),_:1}),f,n(a,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:s(()=>[h]),_:1}),_,n(a,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:s(()=>[A]),_:1}),n(o,{src:"../../assets/unrealgif/hpimpove11.gif"}),n(a,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:s(()=>[t(" 卧槽！那么后面的同角色动画和不同角色动画切换岂不是要两个接口了？ ")]),_:1}),n(a,{avatar:"../../assets/emoji/dsyj.png",avatarWidth:40,alignLeft:""},{default:s(()=>[t(" 可以做成两个接口，也可以用枚举切换，这个都是根据实际开发自适应决定的。 ")]),_:1})])}const j=c(m,[["render",y],["__file","09SkeletalMeshAnimError.html.vue"]]);export{j as default};
