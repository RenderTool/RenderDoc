const e=JSON.parse('{"key":"v-18882f37","path":"/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/VariablePassbyValue%20_%20Reference.html","title":"c++-参数-值传递和引用","lang":"zh-CN","frontmatter":{"title":"c++-参数-值传递和引用","category":["c++"],"description":"概念 不想看代码可以看正片内容 正片 值传递（Pass by Value）和引用传递（Pass by Reference）是两种不同的参数传递方式。 值传递： 传递方式： 通过将实际参数的值复制给形式参数，函数得到的是实际数据的副本。 对实参的影响： 在函数内对形式参数的修改不会影响实际参数的值。 内存开销： 由于复制了实际参数的值，可能会产生额外的内存开销，尤其是对于大型对象或数据结构。 使用时机： 适用于简单的数据类型或对象，或者当函数不需要修改实际参数的值时。","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/VariablePassbyValue%20_%20Reference.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++-参数-值传递和引用"}],["meta",{"property":"og:description","content":"概念 不想看代码可以看正片内容 正片 值传递（Pass by Value）和引用传递（Pass by Reference）是两种不同的参数传递方式。 值传递： 传递方式： 通过将实际参数的值复制给形式参数，函数得到的是实际数据的副本。 对实参的影响： 在函数内对形式参数的修改不会影响实际参数的值。 内存开销： 由于复制了实际参数的值，可能会产生额外的内存开销，尤其是对于大型对象或数据结构。 使用时机： 适用于简单的数据类型或对象，或者当函数不需要修改实际参数的值时。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-15T05:59:15.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-11-15T05:59:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++-参数-值传递和引用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-15T05:59:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"值传递：","slug":"值传递","link":"#值传递","children":[]},{"level":3,"title":"引用传递：","slug":"引用传递","link":"#引用传递","children":[]},{"level":3,"title":"const引用传递：","slug":"const引用传递","link":"#const引用传递","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"正片","slug":"正片","link":"#正片","children":[{"level":3,"title":"1.创建","slug":"_1-创建","link":"#_1-创建","children":[]},{"level":3,"title":"2.运行","slug":"_2-运行","link":"#_2-运行","children":[]},{"level":3,"title":"3.注意","slug":"_3-注意","link":"#_3-注意","children":[]},{"level":3,"title":"4.debug","slug":"_4-debug","link":"#_4-debug","children":[]}]}],"git":{"createdTime":1699887822000,"updatedTime":1700027955000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":3}]},"readingTime":{"minutes":2.55,"words":766},"filePathRelative":"language/cpp/BaseGuide[基础概念]/VariablePassbyValue & Reference.md","localizedDate":"2023年11月13日","excerpt":"\\n<h2> 概念</h2>\\n<blockquote>\\n<p>不想看代码可以看正片内容 <a href=\\"#%E6%AD%A3%E7%89%87\\">正片</a></p>\\n</blockquote>\\n<p>值传递（Pass by Value）和引用传递（Pass by Reference）是两种不同的参数传递方式。</p>\\n<h3> 值传递：</h3>\\n<ol>\\n<li>\\n<p><strong>传递方式：</strong> 通过将实际参数的值复制给形式参数，函数得到的是实际数据的副本。</p>\\n</li>\\n<li>\\n<p><strong>对实参的影响：</strong> 在函数内对形式参数的修改不会影响实际参数的值。</p>\\n</li>\\n<li>\\n<p><strong>内存开销：</strong> 由于复制了实际参数的值，可能会产生额外的内存开销，尤其是对于大型对象或数据结构。</p>\\n</li>\\n<li>\\n<p><strong>使用时机：</strong> 适用于简单的数据类型或对象，或者当函数不需要修改实际参数的值时。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
