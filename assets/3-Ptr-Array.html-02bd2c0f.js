import{_ as r,r as o,o as l,c as u,d as s,w as t,a as n,b as a,e as c}from"./app-56fc971d.js";const d="/RenderDoc/assets/stringarray-780aca1f.png",k="/RenderDoc/assets/ptrarray-6e5d5f53.jpg",m="/RenderDoc/assets/intptrarrayfirest-02f99c19.png",v="/RenderDoc/assets/arrayptrall-3cdcea4d.png",b="/RenderDoc/assets/ggbl-014f817e.png",h={},g=n("h2",{id:"概念",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概念","aria-hidden":"true"},"#"),a(" 概念")],-1),_=n("h2",{id:"指针数组",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#指针数组","aria-hidden":"true"},"#"),a(" 指针数组")],-1),f=n("figure",null,[n("img",{src:d,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),y=n("span",{style:{color:"#c0392b"}},"数组",-1),x=c('<blockquote><p>UE中一堆<code>对象指针</code>组成的<code>数组</code>就是<code>指针数组</code>例如：TArray&lt;ACameraActor*&gt;Camera。（多直观易懂）</p></blockquote><figure><img src="'+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>语法：<code>typename* ArrayName[arraySize]</code>;</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 假设有三个整数</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个指针数组，其中每个元素都是指向整数的指针</span>
    <span class="token keyword">int</span><span class="token operator">*</span> ptrArray<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 将指针指向对应的整数</span>
    ptrArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
    ptrArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>b<span class="token punctuation">;</span>
    ptrArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>c<span class="token punctuation">;</span>

    <span class="token comment">// 使用指针数组中的指针访问对应的整数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Value at index &quot;</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>ptrArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，<code>ptrArray</code> 是一个包含三个元素的数组，每个元素都是一个指向整数的指针。通过将这些指针分别指向整数变量 <code>a</code>、<code>b</code> 和 <code>c</code>，我们形成了一个指针数组。在循环中，我们使用指针数组中的指针访问对应的整数值。</p><p>指针数组在某些情况下非常有用，例如在处理字符串数组、动态分配内存等情况下。</p><h2 id="i-与-i" tabindex="-1"><a class="header-anchor" href="#i-与-i" aria-hidden="true">#</a> i++与++i</h2>`,7),w=n("h2",{id:"数组指针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数组指针","aria-hidden":"true"},"#"),a(" 数组指针")],-1),q=c(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> array2<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p2 <span class="token operator">=</span> array2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),W=n("figure",null,[n("img",{src:m,alt:"普通指针，指向数组首元素",tabindex:"0",loading:"lazy"}),n("figcaption",null,"普通指针，指向数组首元素")],-1),j=c('<figure><img src="'+v+`" alt="保存的是整个数组的地址" tabindex="0" loading="lazy"><figcaption>保存的是整个数组的地址</figcaption></figure><h3 id="图中案例" tabindex="-1"><a class="header-anchor" href="#图中案例" aria-hidden="true">#</a> 图中案例</h3><blockquote><p>语法 typename( * p)[n];</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    <span class="token keyword">int</span> <span class="token operator">*</span> P1 <span class="token operator">=</span> array<span class="token punctuation">;</span><span class="token comment">//P指向array首元素，本质还是int指针。</span>

    <span class="token keyword">int</span> <span class="token operator">*</span> P2 <span class="token operator">=</span> <span class="token operator">&amp;</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//注意看地址和P1一致。</span>
    
    <span class="token keyword">int</span> <span class="token operator">*</span> P3 <span class="token operator">=</span> <span class="token operator">&amp;</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//注意看地址。</span>
    
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span> P4<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>array<span class="token punctuation">;</span><span class="token comment">//P2指向array整个内存空间.注意看IDEP4地址。</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="内存图" tabindex="0" loading="lazy"><figcaption>内存图</figcaption></figure>',5),A=n("h2",{id:"参考链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考链接","aria-hidden":"true"},"#"),a(" 参考链接")],-1),z={href:"https://zhuanlan.zhihu.com/p/391942337",target:"_blank",rel:"noopener noreferrer"},P={href:"https://blog.csdn.net/chenmozhe22/article/details/106420311",target:"_blank",rel:"noopener noreferrer"},L={href:"https://blog.csdn.net/chenmozhe22/article/details/106420311",target:"_blank",rel:"noopener noreferrer"};function C(B,D){const e=o("ChatMessage"),i=o("GifWithButton"),p=o("ExternalLinkIcon");return l(),u("div",null,[s(e,{avatar:"../../../../assets/emoji/bqb (1).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 有了先前知识点的铺垫，现在正是理解数组指针|指针数组最佳时机 ")]),_:1}),g,_,s(e,{avatar:"../../../../assets/emoji/hh.png",avatarWidth:40},{default:t(()=>[a(" 什么叫指针数组？ ")]),_:1}),s(e,{avatar:"../../../../assets/emoji/bqb (1).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 先别急着抠字眼，先看看这些：字符串数组、结构体数组,这些你能想到什么？ ")]),_:1}),s(e,{avatar:"../../../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[a(" 一堆字符串组成的数组和一堆结构体组成的数组呗 ")]),_:1}),f,s(e,{avatar:"../../../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 那么他换个马甲你就不认识？指针数组，不就是一堆指针组成的"),y,a("嘛？ ")]),_:1}),x,s(e,{avatar:"../../../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[a(" 我不理解！为什么这里用++i而不是i++，有什么区别嘛？ ")]),_:1}),s(e,{avatar:"../../../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 在这里i没有对其他变量赋值，所以没有区别。but我有一篇专门写i++和++i的文章 ")]),_:1}),w,s(e,{avatar:"../../../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[a(" Baba帮我康康我写的这个p2是不是就是数组指针？ ")]),_:1}),q,s(e,{avatar:"../../../../assets/emoji//blzt.png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 你说的这个不叫数组指针，是一个普通指针。 ")]),_:1}),s(e,{avatar:"../../../../assets/emoji/hx.png",avatarWidth:40},{default:t(()=>[a(" 数组指针不是直接可以用 指针指向数组首地址进行访问么? ")]),_:1}),s(e,{avatar:"../../../../assets/emoji//bqb (2).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 是的，实践证明确实首地址和整个数组地址一致，但你这个确实只是一个指向的是数组首元素的普通指针，看下面的程序调试图： ")]),_:1}),W,s(e,{avatar:"../../../../assets/emoji//bqb (3).png",avatarWidth:40,alignLeft:""},{default:t(()=>[a(" 真正的数组指针长这样： ")]),_:1}),j,s(i,{src:"../../../../assets/unrealgif/arrayptr.gif"}),A,n("p",null,[n("a",z,[a("i++/++i"),s(p)])]),n("p",null,[n("a",P,[a("数组指针/指针数组"),s(p)])]),n("p",null,[n("a",L,[a("C语言基础---14.指针数组 & 数组指针---图解篇"),s(p)])])])}const N=r(h,[["render",C],["__file","3-Ptr-Array.html.vue"]]);export{N as default};
