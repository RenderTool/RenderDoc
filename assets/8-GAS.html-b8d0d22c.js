import{_ as k,r as i,o as d,c as m,d as t,w as a,a as n,b as s,e as o}from"./app-4e4a785e.js";const v="/RenderDoc/assets/gas001-ea7350b8.png",b="/RenderDoc/assets/gas002-654cdf46.png",y="/RenderDoc/assets/gas003-33071318.png",f="/RenderDoc/assets/gas004-fd3e0585.png",g="/RenderDoc/assets/gas005-77ceb952.png",h="/RenderDoc/assets/gas006-92b9da95.png",A="/RenderDoc/assets/gas008-20b7c7c9.png",_="/RenderDoc/assets/gas009-f6d9b1a3.png",S="/RenderDoc/assets/gas010-4c54d919.png",E="/RenderDoc/assets/gas011-22f1a366.png",C="/RenderDoc/assets/gas012-d0f5135d.png",x="/RenderDoc/assets/gas016-5909ce01.png",w="/RenderDoc/assets/gas017-7521d7d1.png",T="/RenderDoc/assets/gas013-2c03fda4.png",P="/RenderDoc/assets/gas019-5f900cd3.png",G="/RenderDoc/assets/gas015-78b4dd71.png",R="/RenderDoc/assets/gas014-a2c8d65d.png",U="/RenderDoc/assets/gas007-474fcd2d.jpg",N={},L=o('<h2 id="gas概述" tabindex="-1"><a class="header-anchor" href="#gas概述" aria-hidden="true">#</a> GAS概述</h2><p>Gameplay技能系统（Gameplay Ability System） 是构建Actor可以拥有和触发的技能和交互的一种框架。</p><h2 id="基本流程" tabindex="-1"><a class="header-anchor" href="#基本流程" aria-hidden="true">#</a> 基本流程</h2><h3 id="插件引入" tabindex="-1"><a class="header-anchor" href="#插件引入" aria-hidden="true">#</a> 插件引入</h3><figure><img src="'+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="模块引入" tabindex="-1"><a class="header-anchor" href="#模块引入" aria-hidden="true">#</a> 模块引入</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>PublicDependencyModuleNames<span class="token punctuation">.</span><span class="token function">AddRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> 
<span class="token string">&quot;GameplayTags&quot;</span><span class="token punctuation">,</span>
<span class="token string">&quot;GameplayTasks&quot;</span><span class="token punctuation">,</span>
<span class="token string">&quot;GameplayAbilities&quot;</span><span class="token punctuation">,</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h3>`,8),I=n("h3",{id:"abilitysystemcomponent-asc-组件类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#abilitysystemcomponent-asc-组件类","aria-hidden":"true"},"#"),s(" AbilitySystemComponent(ASC)组件类")],-1),O=n("figure",null,[n("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),D=n("figure",null,[n("img",{src:y,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),B=n("h3",{id:"知识储备",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#知识储备","aria-hidden":"true"},"#"),s(" 知识储备")],-1),j=n("figure",null,[n("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),W=n("h2",{id:"as-attributeset-属性集",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#as-attributeset-属性集","aria-hidden":"true"},"#"),s(" AS(AttributeSet)属性集")],-1),q=n("figure",null,[n("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),V=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">USTRUCT</span><span class="token punctuation">(</span>BlueprintType<span class="token punctuation">)</span>
<span class="token keyword">struct</span> <span class="token class-name">GAMEPLAYABILITIES_API</span> FGameplayAttributeData
<span class="token punctuation">{</span>
	<span class="token function">GENERATED_BODY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">FGameplayAttributeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token operator">:</span> <span class="token function">BaseValue</span><span class="token punctuation">(</span><span class="token number">0.f</span><span class="token punctuation">)</span>
		<span class="token punctuation">,</span> <span class="token function">CurrentValue</span><span class="token punctuation">(</span><span class="token number">0.f</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token function">FGameplayAttributeData</span><span class="token punctuation">(</span><span class="token keyword">float</span> DefaultValue<span class="token punctuation">)</span>
		<span class="token operator">:</span> <span class="token function">BaseValue</span><span class="token punctuation">(</span>DefaultValue<span class="token punctuation">)</span>
		<span class="token punctuation">,</span> <span class="token function">CurrentValue</span><span class="token punctuation">(</span>DefaultValue<span class="token punctuation">)</span>
	<span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token keyword">virtual</span> <span class="token operator">~</span><span class="token function">FGameplayAttributeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token comment">/** Returns the current value, which includes temporary buffs */</span>
	<span class="token keyword">float</span> <span class="token function">GetCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

	<span class="token comment">/** Modifies current value, normally only called by ability system or during initialization */</span>
	<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">SetCurrentValue</span><span class="token punctuation">(</span><span class="token keyword">float</span> NewValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/** Returns the base value which only includes permanent changes */</span>
	<span class="token keyword">float</span> <span class="token function">GetBaseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

	<span class="token comment">/** Modifies the permanent base value, normally only called by ability system or during initialization */</span>
	<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">SetBaseValue</span><span class="token punctuation">(</span><span class="token keyword">float</span> NewValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">protected</span><span class="token operator">:</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadOnly<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;Attribute&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">float</span> BaseValue<span class="token punctuation">;</span>

	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintReadOnly<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;Attribute&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">float</span> CurrentValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Y=n("h3",{id:"basevalue-vs-currentvalue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basevalue-vs-currentvalue","aria-hidden":"true"},"#"),s(" BaseValue vs. CurrentValue")],-1),M=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"pragma"),s(),n("span",{class:"token expression"},"once")]),s(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"CoreMinimal.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"AttributeSet.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"AbilitySystemComponent.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"ExorcistAttributeSet.generated.h"')]),s(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name function"},"ATTRIBUTE_ACCESSORS"),n("span",{class:"token expression"},[n("span",{class:"token punctuation"},"("),s("ClassName"),n("span",{class:"token punctuation"},","),s(" PropertyName"),n("span",{class:"token punctuation"},")"),s()]),n("span",{class:"token punctuation"},"\\"),s(`
`),n("span",{class:"token expression"},[n("span",{class:"token function"},"GAMEPLAYATTRIBUTE_PROPERTY_GETTER"),n("span",{class:"token punctuation"},"("),s("ClassName"),n("span",{class:"token punctuation"},","),s(" PropertyName"),n("span",{class:"token punctuation"},")"),s()]),n("span",{class:"token punctuation"},"\\"),s(`
`),n("span",{class:"token expression"},[n("span",{class:"token function"},"GAMEPLAYATTRIBUTE_VALUE_GETTER"),n("span",{class:"token punctuation"},"("),s("PropertyName"),n("span",{class:"token punctuation"},")"),s()]),n("span",{class:"token punctuation"},"\\"),s(`
`),n("span",{class:"token expression"},[n("span",{class:"token function"},"GAMEPLAYATTRIBUTE_VALUE_SETTER"),n("span",{class:"token punctuation"},"("),s("PropertyName"),n("span",{class:"token punctuation"},")"),s()]),n("span",{class:"token punctuation"},"\\"),s(`
`),n("span",{class:"token expression"},[n("span",{class:"token function"},"GAMEPLAYATTRIBUTE_VALUE_INITTER"),n("span",{class:"token punctuation"},"("),s("PropertyName"),n("span",{class:"token punctuation"},")")])]),s(`

`),n("span",{class:"token function"},"UCLASS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"EXORCIST_API"),s(" UExorcistAttributeSet "),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"public"),s(` UAttributeSet
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token function"},"GENERATED_BODY"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
	`),n("span",{class:"token function"},"UExorcistAttributeSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token comment"},"//2.重写复制函数"),s(`
	`),n("span",{class:"token keyword"},"virtual"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"GetLifetimeReplicatedProps"),n("span",{class:"token punctuation"},"("),s("TArray"),n("span",{class:"token operator"},"<"),s("FLifetimeProperty"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"&"),s(" OutLifetimeProps"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token comment"},"//1.设置Health"),s(`
	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),s("BlueprintReadOnly"),n("span",{class:"token punctuation"},","),s(" Category "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Health"'),n("span",{class:"token punctuation"},","),s(" ReplicatedUsing "),n("span",{class:"token operator"},"="),s(" OnRep_Health"),n("span",{class:"token punctuation"},")"),s(`
	FGameplayAttributeData Health`),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token function"},"ATTRIBUTE_ACCESSORS"),n("span",{class:"token punctuation"},"("),s("UExorcistAttributeSet"),n("span",{class:"token punctuation"},","),s(" Health"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	
	`),n("span",{class:"token comment"},"//3.客户端上接收属性更改"),s(`
	`),n("span",{class:"token function"},"UFUNCTION"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"OnRep_Health"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" FGameplayAttributeData"),n("span",{class:"token operator"},"&"),s(" OldHealth"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"AbilitySystem/Attributes/ExorcistAttributeSet.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Net/UnrealNetwork.h"')]),s(`

`),n("span",{class:"token class-name"},"UExorcistAttributeSet"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"UExorcistAttributeSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token function"},"InitHealth"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"100.f"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAttributeSet"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetLifetimeReplicatedProps"),n("span",{class:"token punctuation"},"("),s("TArray"),n("span",{class:"token operator"},"<"),s("FLifetimeProperty"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"&"),s(" OutLifetimeProps"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token class-name"},"Super"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetLifetimeReplicatedProps"),n("span",{class:"token punctuation"},"("),s("OutLifetimeProps"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token function"},"DOREPLIFETIME_CONDITION_NOTIFY"),n("span",{class:"token punctuation"},"("),s("UExorcistAttributeSet"),n("span",{class:"token punctuation"},","),s(" Health"),n("span",{class:"token punctuation"},","),s(" COND_None"),n("span",{class:"token punctuation"},","),s(" REPNOTIFY_Always"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAttributeSet"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnRep_Health"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" FGameplayAttributeData"),n("span",{class:"token operator"},"&"),s(" OldHealth"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token function"},"GAMEPLAYATTRIBUTE_REPNOTIFY"),n("span",{class:"token punctuation"},"("),s("UExorcistAttributeSet"),n("span",{class:"token punctuation"},","),s(" Health"),n("span",{class:"token punctuation"},","),s(" OldHealth"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ATTRIBUTE_ACCESSORS</span><span class="token expression"><span class="token punctuation">(</span>ClassName<span class="token punctuation">,</span> PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
<span class="token expression"><span class="token function">GAMEPLAYATTRIBUTE_PROPERTY_GETTER</span><span class="token punctuation">(</span>ClassName<span class="token punctuation">,</span> PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
<span class="token expression"><span class="token function">GAMEPLAYATTRIBUTE_VALUE_GETTER</span><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
<span class="token expression"><span class="token function">GAMEPLAYATTRIBUTE_VALUE_SETTER</span><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
<span class="token expression"><span class="token function">GAMEPLAYATTRIBUTE_VALUE_INITTER</span><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),z=n("figure",null,[n("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),X=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">GAMEPLAYATTRIBUTE_PROPERTY_GETTER</span><span class="token expression"><span class="token punctuation">(</span>ClassName<span class="token punctuation">,</span> PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token keyword">static</span> FGameplayAttribute Get</span><span class="token punctuation">##</span><span class="token expression">PropertyName</span><span class="token punctuation">##</span><span class="token expression"><span class="token function">Attribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token keyword">static</span> FProperty<span class="token operator">*</span> Prop <span class="token operator">=</span> <span class="token generic-function"><span class="token function">FindFieldChecked</span><span class="token generic class-name"><span class="token operator">&lt;</span>FProperty<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">ClassName</span><span class="token double-colon punctuation">::</span><span class="token function">StaticClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">GET_MEMBER_NAME_CHECKED</span><span class="token punctuation">(</span>ClassName<span class="token punctuation">,</span> PropertyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token keyword">return</span> Prop<span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">}</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">GAMEPLAYATTRIBUTE_VALUE_GETTER</span><span class="token expression"><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression">FORCEINLINE <span class="token keyword">float</span> Get</span><span class="token punctuation">##</span><span class="token expression"><span class="token function">PropertyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token keyword">return</span> PropertyName<span class="token punctuation">.</span><span class="token function">GetCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">}</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">GAMEPLAYATTRIBUTE_VALUE_SETTER</span><span class="token expression"><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression">FORCEINLINE <span class="token keyword">void</span> Set</span><span class="token punctuation">##</span><span class="token expression"><span class="token function">PropertyName</span><span class="token punctuation">(</span><span class="token keyword">float</span> NewVal<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
		<span class="token expression">UAbilitySystemComponent<span class="token operator">*</span> AbilityComp <span class="token operator">=</span> <span class="token function">GetOwningAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ensure</span><span class="token punctuation">(</span>AbilityComp<span class="token punctuation">)</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
			<span class="token expression">AbilityComp<span class="token operator">-&gt;</span><span class="token function">SetNumericAttributeBase</span><span class="token punctuation">(</span>Get</span><span class="token punctuation">##</span><span class="token expression">PropertyName</span><span class="token punctuation">##</span><span class="token expression"><span class="token function">Attribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> NewVal<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token punctuation">}</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">}</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">GAMEPLAYATTRIBUTE_VALUE_INITTER</span><span class="token expression"><span class="token punctuation">(</span>PropertyName<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression">FORCEINLINE <span class="token keyword">void</span> Init</span><span class="token punctuation">##</span><span class="token expression"><span class="token function">PropertyName</span><span class="token punctuation">(</span><span class="token keyword">float</span> NewVal<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
		<span class="token expression">PropertyName<span class="token punctuation">.</span><span class="token function">SetBaseValue</span><span class="token punctuation">(</span>NewVal<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression">PropertyName<span class="token punctuation">.</span><span class="token function">SetCurrentValue</span><span class="token punctuation">(</span>NewVal<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">}</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),K=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//////////////////////////////////////////////////////////////////</span>
<span class="token comment">// 玩家选择的英雄数据</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	
	<span class="token function">UFUNCTION</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> TMap<span class="token operator">&lt;</span>FName<span class="token punctuation">,</span> int32<span class="token operator">&gt;</span><span class="token operator">&amp;</span> <span class="token function">GetHeroesSkinIDMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> HeroesSkinIDMap<span class="token punctuation">;</span> <span class="token punctuation">}</span>	
	
	<span class="token function">UFUNCTION</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">void</span> <span class="token function">SetHeroesSkinIDMap</span><span class="token punctuation">(</span>TMap<span class="token operator">&lt;</span>FName<span class="token punctuation">,</span> int32<span class="token operator">&gt;</span><span class="token operator">&amp;</span> InPlayerSelectedHero<span class="token punctuation">)</span> <span class="token punctuation">{</span> HeroesSkinIDMap <span class="token operator">=</span> InPlayerSelectedHero<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">private</span><span class="token operator">:</span>
	<span class="token comment">/** 玩家最终确定选择的英雄映射表. */</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>Config<span class="token punctuation">)</span>
	TMap<span class="token operator">&lt;</span>FName<span class="token punctuation">,</span> int32<span class="token operator">&gt;</span> HeroesSkinIDMap<span class="token punctuation">;</span>
<span class="token comment">//////////////////////////////////////////////////////////////////</span>
<span class="token comment">// end玩家选择的英雄数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),J=n("h2",{id:"gameplayeffect",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gameplayeffect","aria-hidden":"true"},"#"),s(" GameplayEffect")],-1),Q=o("<ol><li><p><strong>死物（Passive Entities）:</strong></p><ul><li><strong>效果生成器（Effect Generator）:</strong> 死物负责产生某种效果的实体，比如道具、装备、魂玉等。</li><li><strong>效果（Effect）:</strong> 由效果生成器产生的具体效果，例如打折、恢复血量等。</li></ul></li><li><p><strong>活物（Active Entities）:</strong></p><ul><li><strong>属性承担者（Attribute Bearer）:</strong> 活物是具有属性的实体，例如玩家和NPC。</li><li><strong>行为触发器（Action Trigger）:</strong> 活物通过行为触发器来影响自身的属性，例如装备魂玉、使用血包等。</li></ul></li></ol>",1),Z=n("figure",null,[n("img",{src:A,alt:"佬的图",tabindex:"0",loading:"lazy"}),n("figcaption",null,"佬的图")],-1),$=n("h3",{id:"modifiers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#modifiers","aria-hidden":"true"},"#"),s(" Modifiers")],-1),nn=n("figure",null,[n("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),sn=n("figure",null,[n("img",{src:S,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),an=n("figure",null,[n("img",{src:E,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),tn=n("p",null,[s("我们之前说过有死物和活物两个概念。先说"),n("code",null,"死物"),s("部分。")],-1),en=n("figure",null,[n("img",{src:C,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),on=n("h3",{id:"组件初始化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#组件初始化","aria-hidden":"true"},"#"),s(" 组件初始化")],-1),pn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
	`),n("span",{class:"token keyword"},"virtual"),s(" UYourAbilitySystemComponent"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"GetAbilitySystemComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`
	 UAttributeSet`),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"GetAttributeSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"return"),s(" AttributeSet"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
	 
`),n("span",{class:"token keyword"},"protected"),n("span",{class:"token operator"},":"),s(`

	`),n("span",{class:"token keyword"},"virtual"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"BeginPlay"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`
	
	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
	TObjectPtr`),n("span",{class:"token operator"},"<"),s("UAbilitySystemComponent"),n("span",{class:"token operator"},">"),s(" AbilitySystemComponent"),n("span",{class:"token punctuation"},";"),s(`
	
	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
	TObjectPtr`),n("span",{class:"token operator"},"<"),s("UAttributeSet"),n("span",{class:"token operator"},">"),s(" AttributeSet"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[s("UAbilitySystemComponent"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token class-name"},"AExorcistCharacterBase"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"GetAbilitySystemComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(" AbilitySystemComponent"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ln=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token class-name">ANPC</span><span class="token double-colon punctuation">::</span><span class="token function">ANPC</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	AbilitySystemComponent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateDefaultSubobject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UYourAbilitySystemComponent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;AbilitySystemComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">SetIsReplicated</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//复制能力</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">SetReplicationMode</span><span class="token punctuation">(</span>EGameplayEffectReplicationMode<span class="token double-colon punctuation">::</span>Minimal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//适用于多人联机的NPC</span>
	
	AttributeSet <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateDefaultSubobject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UYourAttributeSet<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;AttributeSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">ANPC</span><span class="token double-colon punctuation">::</span><span class="token function">BeginPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">BeginPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="复制模式-同步模式" tabindex="-1"><a class="header-anchor" href="#复制模式-同步模式" aria-hidden="true">#</a> 复制模式|同步模式</h3>`,2),un=o("<table><thead><tr><th>复制模式</th><th>使用场景</th><th>描述</th></tr></thead><tbody><tr><td>Full</td><td>单人游戏</td><td>每个 <code>GameplayEffect</code> 都会被复制到每个客户端。</td></tr><tr><td>Mixed</td><td>多人游戏，玩家控制的角色</td><td><code>GameplayEffects</code> 仅被复制到拥有它的客户端。仅 <code>GameplayTags</code> 和 <code>GameplayCues</code> 被复制给所有人。</td></tr><tr><td>Minimal</td><td>多人游戏，AI 控制的角色</td><td><code>GameplayEffects</code> 不会被复制给任何人。仅 <code>GameplayTags</code> 和 <code>GameplayCues</code> 被复制给所有人。</td></tr></tbody></table>",1),rn={href:"https://zhuanlan.zhihu.com/p/600034328",target:"_blank",rel:"noopener noreferrer"},kn=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token class-name">AYourPlayerState</span><span class="token double-colon punctuation">::</span><span class="token function">AYourPlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	NetUpdateFrequency <span class="token operator">=</span> <span class="token number">100.f</span><span class="token punctuation">;</span><span class="token comment">//网络更新速度</span>

	AbilitySystemComponent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateDefaultSubobject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UYourAbilitySystemComponent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;AbilitySystemComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">SetIsReplicated</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//复制能力</span>
	AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">SetReplicationMode</span><span class="token punctuation">(</span>EGameplayEffectReplicationMode<span class="token double-colon punctuation">::</span>Mixed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//适用于多人联机的玩家</span>
	AttributeSet <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateDefaultSubobject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UYourAttributeSet<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;AttributeSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
UAbilitySystemComponent<span class="token operator">*</span> <span class="token class-name">AYourPlayerState</span><span class="token double-colon punctuation">::</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span> AbilitySystemComponent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),dn=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>	
<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>
<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token class-name">AHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	AYourPlayerState<span class="token operator">*</span> YourPlayerState <span class="token operator">=</span><span class="token generic-function"><span class="token function">GetPlayerState</span><span class="token generic class-name"><span class="token operator">&lt;</span>AYourPlayerState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">check</span><span class="token punctuation">(</span>YourPlayerState<span class="token punctuation">)</span><span class="token punctuation">;</span>
	YourPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span>YourPlayerState<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AbilitySystemComponent <span class="token operator">=</span> YourPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	AttributeSet <span class="token operator">=</span> YourPlayerState<span class="token operator">-&gt;</span><span class="token function">GetAttributeSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">AHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>AController<span class="token operator">*</span> NewController<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">PossessedBy</span><span class="token punctuation">(</span>NewController<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//Server</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token class-name">AHeroCharacter</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">Super</span><span class="token double-colon punctuation">::</span><span class="token function">OnRep_PlayerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//Client</span>
	<span class="token function">InitAbilityActorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),mn=o(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//使用GE，传入拥有组件的Actor和目标Actor以及对应的GE。</span>
<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;AbilitySubsystem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">ApplyEffectToTarget</span><span class="token punctuation">(</span>AActor<span class="token operator">*</span> SourceActor<span class="token punctuation">,</span>AActor<span class="token operator">*</span> TargetActor<span class="token punctuation">,</span>TSubclassOf<span class="token operator">&lt;</span>UGameplayEffect<span class="token operator">&gt;</span> GameplayEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token class-name">UExorcistAbilitySubsystem</span><span class="token double-colon punctuation">::</span><span class="token function">ApplyEffectToTarget</span><span class="token punctuation">(</span>AActor<span class="token operator">*</span> SourceActor <span class="token punctuation">,</span>AActor<span class="token operator">*</span> TargetActor<span class="token punctuation">,</span> TSubclassOf<span class="token operator">&lt;</span>UGameplayEffect<span class="token operator">&gt;</span> GameplayEffect<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">//检查传入的对象</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>SourceActor <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token operator">||</span>TargetActor <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token operator">||</span>GameplayEffect <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//获取要使用的对象GAS组件</span>
	UAbilitySystemComponent<span class="token operator">*</span> TargetASC <span class="token operator">=</span> <span class="token class-name">UAbilitySystemBlueprintLibrary</span><span class="token double-colon punctuation">::</span><span class="token function">GetAbilitySystemComponent</span><span class="token punctuation">(</span>TargetActor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>TargetASC <span class="token operator">==</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	FGameplayEffectContextHandle Context <span class="token operator">=</span> TargetASC<span class="token operator">-&gt;</span><span class="token function">MakeEffectContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Context<span class="token punctuation">.</span><span class="token function">AddSourceObject</span><span class="token punctuation">(</span>SourceActor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	FGameplayEffectSpecHandle SpecHandle <span class="token operator">=</span> TargetASC<span class="token operator">-&gt;</span><span class="token function">MakeOutgoingSpec</span><span class="token punctuation">(</span>GameplayEffect<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	TargetASC<span class="token operator">-&gt;</span><span class="token function">ApplyGameplayEffectSpecToTarget</span><span class="token punctuation">(</span><span class="token operator">*</span>SpecHandle<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> TargetASC<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',3),vn=o(`<h3 id="监听attribute变化" tabindex="-1"><a class="header-anchor" href="#监听attribute变化" aria-hidden="true">#</a> 监听Attribute变化</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>AbilitySystemComponent<span class="token operator">-&gt;</span><span class="token function">GetGameplayAttributeValueChangeDelegate</span><span class="token punctuation">(</span>AttributeSetBase<span class="token operator">-&gt;</span><span class="token function">GetHealthAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddUObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>AGDPlayerState<span class="token double-colon punctuation">::</span>HealthChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">HealthChanged</span><span class="token punctuation">(</span><span class="token keyword">const</span> FOnAttributeChangeData<span class="token operator">&amp;</span> Data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),bn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"pragma"),s(),n("span",{class:"token expression"},"once")]),s(`

`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"CoreMinimal.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"GameplayEffectTypes.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Subsystems/GameInstanceSubsystem.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"ExorcistAbilitySubsystem.generated.h"')]),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UExorcistAttributeSet"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UAbilitySystemComponent"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam"),n("span",{class:"token punctuation"},"("),s("FOnHealthChangeDelegate"),n("span",{class:"token punctuation"},","),n("span",{class:"token keyword"},"float"),n("span",{class:"token punctuation"},","),s("NewHealth"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"UCLASS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"EXORCIST_API"),s(" UExorcistAbilitySubsystem "),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"public"),s(` UGameInstanceSubsystem
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token function"},"GENERATED_BODY"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
	`),n("span",{class:"token keyword"},"virtual"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token function"},"ShouldCreateSubsystem"),n("span",{class:"token punctuation"},"("),s("UObject"),n("span",{class:"token operator"},"*"),s(" Outer"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"virtual"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"Initialize"),n("span",{class:"token punctuation"},"("),s("FSubsystemCollectionBase"),n("span",{class:"token operator"},"&"),s(" Collection"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"virtual"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"Deinitialize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"override"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),s("BlueprintAssignable"),n("span",{class:"token punctuation"},","),s(" Category "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"AbilitySubsystem|Health"'),n("span",{class:"token punctuation"},")"),s(`
	FOnHealthChangeDelegate OnHealthChanged`),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token comment"},"//通过子系统转发AS属性更新"),s(`
	`),n("span",{class:"token function"},"UFUNCTION"),n("span",{class:"token punctuation"},"("),s("BlueprintCallable"),n("span",{class:"token punctuation"},","),s(" Category "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"AbilitySubsystem"'),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"BroadCastInitialValues"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),s("BlueprintReadOnly"),n("span",{class:"token punctuation"},","),s("Category "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"AbilitySubsystem"'),n("span",{class:"token punctuation"},")"),s(`
	TObjectPtr`),n("span",{class:"token operator"},"<"),s("UExorcistAttributeSet"),n("span",{class:"token operator"},">"),s(" ExorcistAttributeSet"),n("span",{class:"token punctuation"},";"),s(`
	
	`),n("span",{class:"token function"},"UPROPERTY"),n("span",{class:"token punctuation"},"("),s("BlueprintReadOnly"),n("span",{class:"token punctuation"},","),s("Category "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"AbilitySubsystem"'),n("span",{class:"token punctuation"},")"),s(`
    TObjectPtr`),n("span",{class:"token operator"},"<"),s("UAbilitySystemComponent"),n("span",{class:"token operator"},">"),s(" AbilitySystemComponent"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),s(`
	
	`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"OnHealthChange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" FOnAttributeChangeData"),n("span",{class:"token operator"},"&"),s(" OnAttributeChangeData"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),yn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Subsystem/ExorcistAbilitySubsystem.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"AbilitySystem/Attributes/ExorcistAttributeSet.h"')]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"FrameWork/ExorcistPlayerState.h"')]),s(`


`),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token class-name"},"UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"ShouldCreateSubsystem"),n("span",{class:"token punctuation"},"("),s("UObject"),n("span",{class:"token operator"},"*"),s(" Outer"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"const"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token class-name"},"Super"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"ShouldCreateSubsystem"),n("span",{class:"token punctuation"},"("),s("Outer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Initialize"),n("span",{class:"token punctuation"},"("),s("FSubsystemCollectionBase"),n("span",{class:"token operator"},"&"),s(" Collection"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token class-name"},"Super"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Initialize"),n("span",{class:"token punctuation"},"("),s("Collection"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Deinitialize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token class-name"},"Super"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Deinitialize"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"BroadCastInitialValues"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"// 获取本地玩家对应的 State"),s(`
	ULocalPlayer`),n("span",{class:"token operator"},"*"),s(" LocalPlayer "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"GetWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetFirstLocalPlayerFromController"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("LocalPlayer"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	AExorcistPlayerState`),n("span",{class:"token operator"},"*"),s(" PlayerState "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"Cast"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("AExorcistPlayerState"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("LocalPlayer"),n("span",{class:"token operator"},"->"),s("PlayerController"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("PlayerState"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"// 获取属性"),s(`
	ExorcistAttributeSet `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"CastChecked"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("UExorcistAttributeSet"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("PlayerState"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetAttributeSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("ExorcistAttributeSet"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"// 广播初始值"),s(`
	OnHealthChanged`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Broadcast"),n("span",{class:"token punctuation"},"("),s("ExorcistAttributeSet"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetHealth"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	AbilitySystemComponent `),n("span",{class:"token operator"},"="),s(" PlayerState"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetAbilitySystemComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("AbilitySystemComponent"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token comment"},"// 绑定委托给我们的 OnHealthChange"),s(`
		AbilitySystemComponent`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetGameplayAttributeValueChangeDelegate"),n("span",{class:"token punctuation"},"("),s("ExorcistAttributeSet"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"GetHealthAttribute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
		`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddUObject"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),s("OnHealthChange"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"//一旦属性被修改会执行这个函数，然后我们用我们的委托转发他。"),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"UExorcistAbilitySubsystem"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"OnHealthChange"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" FOnAttributeChangeData"),n("span",{class:"token operator"},"&"),s(" OnAttributeChangeData"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	OnHealthChanged`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Broadcast"),n("span",{class:"token punctuation"},"("),s("OnAttributeChangeData"),n("span",{class:"token punctuation"},"."),s("NewValue"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("figure",null,[n("img",{src:T,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),gn=n("figure",null,[n("img",{src:P,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),hn=n("h3",{id:"debug",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#debug","aria-hidden":"true"},"#"),s(" Debug")],-1),An=n("figure",null,[n("img",{src:G,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),_n=n("figure",null,[n("img",{src:R,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),Sn=n("h3",{id:"gameability",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gameability","aria-hidden":"true"},"#"),s(" GameAbility")],-1),En=n("p",null,[s("再谈"),n("code",null,"活物"),s("部分，玩过只狼的童鞋应该知道，习得某个技能能打出不同的效果。无论什么技能，打出的"),n("code",null,"GE效果"),s("其实是通用的，只不过被一个叫做十字斩的"),n("code",null,"技能"),s("触发(Apply)罢了。")],-1),Cn=n("figure",null,[n("img",{src:U,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),xn=n("h2",{id:"参考链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考链接","aria-hidden":"true"},"#"),s(" 参考链接")],-1),wn={href:"https://docs.unrealengine.com/5.0/zh-CN/getting-started-with-the-gameplay-ability-system-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/BillEliot/GASDocumentation_Chinese",target:"_blank",rel:"noopener noreferrer"};function Pn(Gn,Rn){const e=i("chatmessage"),l=i("CodeTabs"),r=i("RouterLink"),u=i("ExternalLinkIcon");return d(),m("div",null,[L,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 也就是我们基本的GameMode、PlayerState、Control等 ")]),_:1}),I,O,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 按照官方的注释，我们可以得知GAS组件作为一个构通平台(接口)，将我们的GA、GE、AS成功串联 ")]),_:1}),D,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 啥意思？突然飙这么多专业术语我也是醉了！ ")]),_:1}),B,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 很好，看来我们想要先对今天的学习目标有个大概的认知，我们先来谈谈GAS到底是干什么的吧！ ")]),_:1}),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 开头不是说了吗！是构建Actor可以拥有和触发的技能和交互的一种框架！ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 就拿永劫无间得PVE来说，我们需要努力肝BOSS获取一些特殊属性、特殊技能的魂玉来提升自己。 ")]),_:1}),j,W,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 也就是说，我们一开始就得设计好一个游戏对局需要影响双方的哪些属性对吧？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 按照以往，我们往往需要一个结构体来定义这些属性的基础值，但GAS中我们可以用AttributeSet类定义代替他。 ")]),_:1}),q,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 他和我们以前定义的结构体有什么不同吗？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 功能上，AS将某个属性的值，比如体力进一步的细化了他的状态,并将这些状态封装到了FGameplayAttributeData结构体中 ")]),_:1}),V,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 这么说他不仅仅是一个简单的结构体，还拥有一些方法帮我们维护管理这些数据？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 是的，比如网络状态同步、属性本身状态广播等。 ")]),_:1}),Y,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 这里为什么会有BaseValue和CurrentValue两个值？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 你可以这么理解，BaseValue是长期属性，CurrentValue是短期属性。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 比如原来的走路速度是600u/s,通过GE给了一个暴走Buff持续15s速度提升到800u/s,这时候CurrentValue会被设置成800u/s, 但BaseValue还是600u/s,15s后Buff结束，CurrentValue变回原来的600u/s。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 那么这个长期属性和短期属性各自通过什么方法修改呢？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 后面我们讨论GameplayEffect的时候会有介绍，现在我们只需要知道有对应的模式去修改对应的属性即可。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 那就直接康康怎么用，比如我们需要给我们的游戏角色设定一些基本的生命属性. ")]),_:1}),t(l,{id:"65",data:[{id:"ExorcistAttributeSet.h"},{id:"ExorcistAttributeSet.cpp"}],"tab-id":"language"},{title0:a(({value:p,isActive:c})=>[s("ExorcistAttributeSet.h")]),title1:a(({value:p,isActive:c})=>[s("ExorcistAttributeSet.cpp")]),tab0:a(({value:p,isActive:c})=>[M]),tab1:a(({value:p,isActive:c})=>[F]),_:1},8,["data"]),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 卧槽卧槽！打住打住我已经开始迷茫了！ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 说出你的疑惑。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 定义属性部分倒是好理解，无非就是用结构体代替原来的float，复制函数和以前一样。RPC那一套绑定通知函数和重写GetLifetimeReplicatedProps接口。 我的疑惑是开头你这一坨宏是闹哪样？ ")]),_:1}),H,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 这坨宏其实copyfrom官方的插件。 ")]),_:1}),z,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 宏的目的是：只需通过ATTRIBUTE_ACCESSORS(ClassName, PropertyName)，即可生成与属性访问相关的代码，包括获取、设置和初始化属性的功能。 ")]),_:1}),X,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 我明白了，按照封装思想，我们总是喜欢用一些get、set、init等函数来获取、设置、初始化某个变量，一直重复写这些函数会显得很呆，比如之前我们的设置类中，获取 某个游戏的属性设置，就写了许多胶水代码。 ")]),_:1}),K,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" ok，现在从本质上看，他还是属于一个数据类。现在我们不考虑MVC的设计思维，想想哪些Actor会用到他？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 按照永劫的设计来说，用到的可能是某个魂玉、某个玩家、某个道具、某个NPC。 ")]),_:1}),J,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(' 按照惯性思维，道具这种死物只负责产生某种效果，玩家、NPC这种"活物"才会拥有某个AS属性。会通过某个行为彼此影响自身的AS属性，比如说装备某个魂玉 可以给整队购买打折，亦或者是使用血包给自己恢复多少血量。 ')]),_:1}),Q,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 其实死物和活物来划分功能职责并不准确，但可以帮助我们学习理解后面的知识。在GAS中，有这么一个类，负责配置具体的一些效果，比如加多少血、比如扣多少血。 这个类叫GameplayEffect。GameplayEffect有三种持续类型: 即刻(Instant)持续(Duration)无限(Infinite) ")]),_:1}),Z,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 我大概理解你的意思了，按照GE的设计思路，只需要拥有GE的类，并且有效果生成的函数接口就能实现某种效果，比如5s内持续加血。可是有些效果是持续的、有些效果是瞬间的， 我们怎么去区分呢？ ")]),_:1}),$,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[n("p",null,[s("问的好，还记得我们讨论增强输入系统时的Modifiers嘛？"),t(r,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/4.2-EnhancedInput.html"},{default:a(()=>[s("传送门")]),_:1})])]),_:1}),nn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 这种优秀的设计机制当然GAS中也拥有，我们的GE也有自己的Modifiers去配置不同状态效果。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" UE中随便新建一个GE ")]),_:1}),sn,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 现在走还来得及吗？这东西是给人看的？ ")]),_:1}),an,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[n("p",null,[s("不要急，基于篇幅我把这些GE的各项详细给你提到专门的文章中。"),t(r,{to:"/unreal/core%5B%E6%A0%B8%E5%BF%83%5D/8.1-GASGE.html"},{default:a(()=>[s("传送门")]),_:1})])]),_:1}),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 最终这些配置的效果怎么使用？又怎么触发呢？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[tn]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 严格意义上死物不会拥有某个技能，他只携带某种效果生成器和效果，我们可以通过GAS组件提供的函数库直接触发。 比如LOL/王者荣耀中购买装备以提升的属性加成。 比如一些药品，通过某个球体触发器触发，给OVER的Actor直接作用对应的GE。 ")]),_:1}),en,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 又或者是一些库存物件，玩家主动使用。这其实已经涉及到某个能力了——使用消耗品的能力。当然这取决于咱怎么定义能力。 比如：有一个技能变态到你在多久时间内不能打开背包，那么这个背包使用也算一个能力。 ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 无论怎么样，我们都得写一个拥有GAS组件、AS的角色类或者角色基类。当然你也可以按照NPC和玩家去进一步细分。 NPC直接挂载ASC组件，玩家的ASC写在PlayerState中，通过管理类或者子系统维护. ")]),_:1}),on,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 无论是NPC还是角色，都需要拥有ASC组件和AS属性，我们可以定义一个基类并写一些接口给不同的派生类使用。 ")]),_:1}),t(l,{id:"173",data:[{id:"角色基类.h"},{id:"角色基类.cpp"}],"tab-id":"language"},{title0:a(({value:p,isActive:c})=>[s("角色基类.h")]),title1:a(({value:p,isActive:c})=>[s("角色基类.cpp")]),tab0:a(({value:p,isActive:c})=>[pn]),tab1:a(({value:p,isActive:c})=>[cn]),_:1},8,["data"]),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 上面我们的角色基类中已经定义了ASC组件和AS指针，我们希望NPC类可以直接配置. ")]),_:1}),ln,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 之前我们提到过ASC组件帮我们实现了基本的复制模式和复制预测，我看你NPC和玩家用了不同的复制模式，有什么区别嘛？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 区别： ")]),_:1}),un,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[n("p",null,[s("接着配置我们的玩家类，我们希望一些数据层的逻辑交给更专业的类去管理，玩家的数据交给PlayerState类处理再合适不过了，即便是断线重连，也可以完美同步。 "),n("a",rn,[s("参考"),t(u)])])]),_:1}),kn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 接着，我们去Hero类获取对应的State即可 ")]),_:1}),dn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 至于使用GE的函数，选择就多了，可以用蓝图函数库，也可以自己子系统代理执行。 ")]),_:1}),mn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 如果我们希望我们的物品类更加独立，可以按照之前的装备系统只传入tag,查表获取对应的GE。 ")]),_:1}),vn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 目前我们的AS变化是不会反馈到UI上面的，可以写个UI子系统\\管理类，或者写个技能子系统专门转发这些AS属性变化的委托。 ")]),_:1}),t(l,{id:"260",data:[{id:"你的子系统.h"},{id:"你的子系统.cpp"}],"tab-id":"language"},{title0:a(({value:p,isActive:c})=>[s("你的子系统.h")]),title1:a(({value:p,isActive:c})=>[s("你的子系统.cpp")]),tab0:a(({value:p,isActive:c})=>[bn]),tab1:a(({value:p,isActive:c})=>[yn]),_:1},8,["data"]),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 目前我们没写UI,可以在合适的地方使用我们的子系统打印这些数据。 ")]),_:1}),fn,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 文档则写了一个异步的监听函数去监听某个值的变化。 ")]),_:1}),gn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 方法有很多，按需使用就行了。 ")]),_:1}),hn,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 可以用Debug指令或者对应的GAS属性查看器 ")]),_:1}),An,_n,Sn,t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[En]),_:1}),Cn,t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 搜嘎!这么说我们要开始讨论技能部分了吧！ ")]),_:1}),t(e,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:a(()=>[s(" 别急，先来说说你理解的技能是什么？ ")]),_:1}),t(e,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:a(()=>[s(" 之前我们已经讨论过了，比如王者荣耀LOL中的英雄技能点，又比如守望先锋中的源氏大招。 ")]),_:1}),xn,n("p",null,[n("a",wn,[s("官网"),t(u)])]),n("p",null,[n("a",Tn,[s("GITHUB"),t(u)])])])}const Nn=k(N,[["render",Pn],["__file","8-GAS.html.vue"]]);export{Nn as default};
