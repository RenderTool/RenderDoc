import{_ as a,r as n,o as e,c as t,d as p,w as o,e as c,b as l}from"./app-24f0a0af.js";const r={},i=c(`<ol><li><p><strong>TSharedPtr：</strong> 代表共享所有权的智能指针。多个 <code>TSharedPtr</code> 实例可以共享相同的对象，当最后一个引用超出范围时，对象会被销毁。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TSharedPtr<span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span> SharedObject <span class="token operator">=</span> <span class="token generic-function"><span class="token function">MakeShared</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>TWeakPtr：</strong> 代表弱引用智能指针，通常与 <code>TSharedPtr</code> 一起使用，用于避免循环引用。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TSharedPtr<span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span> SharedObject <span class="token operator">=</span> <span class="token generic-function"><span class="token function">MakeShared</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
TWeakPtr<span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span> WeakObject <span class="token operator">=</span> SharedObject<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>TUniquePtr：</strong> 代表独占所有权的智能指针。每个 <code>TUniquePtr</code> 实例拥有对对象的唯一所有权，用于确保资源的独占性。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>TUniquePtr<span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span> UniqueObject <span class="token operator">=</span> <span class="token generic-function"><span class="token function">MakeUnique</span><span class="token generic class-name"><span class="token operator">&lt;</span>MyClass<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>UPROPERTY 和 UPROPERTY_POINTER：</strong> 在UE4的中，<code>UPROPERTY</code> 用于声明成员变量，并可以与 <code>TWeakObjectPtr</code> 一起使用，以创建弱引用指针。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token function">UPROPERTY</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
TWeakObjectPtr<span class="token operator">&lt;</span>AActor<span class="token operator">&gt;</span> WeakActor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>FObjectPtr：</strong> 代表一个智能指针，可以包含 <code>UObject</code> 类型的对象。用于管理UE的对象生命周期。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>FObjectPtr<span class="token operator">&lt;</span>UClass<span class="token operator">&gt;</span> MyObject <span class="token operator">=</span> <span class="token generic-function"><span class="token function">NewObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UClass<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,1);function d(u,k){const s=n("ChatMessage");return e(),t("div",null,[p(s,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:o(()=>[l(" C++的指针就已经谈虎色变了，UE中的智能指针会不会更难？ ")]),_:1}),i])}const v=a(r,[["render",d],["__file","2-PTRINUE.html.vue"]]);export{v as default};
