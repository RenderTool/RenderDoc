import{_ as o,r as i,o as c,c as l,d as t,w as e,a,b as n,e as p}from"./app-ba1c65b0.js";const r="/RenderDoc/assets/replicate025-c7c70a8f.png",u="/RenderDoc/assets/replicate026-83637805.jpg",d={},k=a("h2",{id:"导读",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#导读","aria-hidden":"true"},"#"),n(" 导读")],-1),h=a("h2",{id:"思考",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#思考","aria-hidden":"true"},"#"),n(" 思考")],-1),m=a("h3",{id:"子系统选择",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#子系统选择","aria-hidden":"true"},"#"),n(" 子系统选择")],-1),b=a("ol",null,[a("li",null,"GameInstanceSubsystem"),a("li",null,"LocalPlayerSubsystem")],-1),_=a("figure",null,[a("img",{src:r,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),v=a("h3",{id:"数据安全",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#数据安全","aria-hidden":"true"},"#"),n(" 数据安全")],-1),f=a("h3",{id:"原理",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#原理","aria-hidden":"true"},"#"),n(" 原理")],-1),g=a("figure",null,[a("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),y=a("h3",{id:"按功能划分",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#按功能划分","aria-hidden":"true"},"#"),n(" 按功能划分")],-1),I=p(`<p>端口类型+ Execute +具体事件名：ClientExecuteShowPickUpInfo</p><h3 id="用例" tabindex="-1"><a class="header-anchor" href="#用例" aria-hidden="true">#</a> 用例</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//道具拾取信息委托</span>
<span class="token function">DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams</span><span class="token punctuation">(</span>FOnPickUpInfoChanged<span class="token punctuation">,</span>ESlateVisibility <span class="token punctuation">,</span>InVisibility<span class="token punctuation">,</span>FBaseStruct<span class="token punctuation">,</span>PickUpInfos<span class="token punctuation">,</span>int32<span class="token punctuation">,</span>QualityID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	<span class="token function">UPROPERTY</span><span class="token punctuation">(</span>BlueprintAssignable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;UIManagerSubsystem&quot;</span><span class="token punctuation">)</span>
	FOnPickUpInfoChanged OnPickUpInfoChanged<span class="token punctuation">;</span>
	
	<span class="token comment">/**显示拾取的物品UI*/</span>
	<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span>Category <span class="token operator">=</span> <span class="token string">&quot;UIManagerSubsystem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">void</span> <span class="token function">ClientExecuteShowPickUpInfos</span><span class="token punctuation">(</span>APlayerController<span class="token operator">*</span> PlayerController<span class="token punctuation">,</span> int32 QualityID<span class="token punctuation">,</span> ESlateVisibility InVisibility<span class="token punctuation">,</span><span class="token keyword">const</span> FBaseStruct<span class="token operator">&amp;</span> PickUpInfos<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">/**获取本地玩家*/</span>
	<span class="token function">UFUNCTION</span><span class="token punctuation">(</span>BlueprintCallable<span class="token punctuation">,</span> Category <span class="token operator">=</span> <span class="token string">&quot;UIManagerSubsystem&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">const</span> ULocalPlayer<span class="token operator">*</span> <span class="token function">GetLocalPlayerController</span><span class="token punctuation">(</span>APlayerController<span class="token operator">*</span> PlayerController<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function U(C,P){const s=i("chatmessage");return c(),l("div",null,[k,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 书接上文，我们也可以将这种数据和UI关联的中间类，单独封装到一个UI控制管理类或者子系统中。比如：UIManagerSubsystem。 ")]),_:1}),h,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 虽然我希望将项目的UI管理类分散到各个对应的系统中，比如装备系统、计分系统、商店系统等。 细分颗粒度如何由你自己决定，基础哪个类型的子系统完全取决于你。 ")]),_:1}),m,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 第一个挑战，自然是子系统的父类选择，个人认为比较合适的两个父类子系统： ")]),_:1}),b,_,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 相较于GameInstanceSubsystem，LocalPlayerSubsystem仅仅是稍晚一些初始化，并且LocalPlayerSubsystem需传入对应的LocalPlayerController。 并且我们需要考虑有些UI不仅仅是显示在客户端的，也可能所有端口都能显示。 ")]),_:1}),v,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 我们还需要考虑我们的UI系统的数据安全性，一个想法是关键数据比如一些敏感的钱币、伤害通知等都来源于服务器验证产生。 本地的UI仍然只负责无情的显示数据。 ")]),_:1}),f,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 很显然，上一步的数据不是我们这个类应该考虑的，我们的UI管理类不负责数据验证，我们只负责关联数据、可视化数据。 通俗点来说，利用子系统这个跳板，原本需要通过Cast、GetClass、接口等任务可以通过委托直接实现。可以用下面的图简单表示我们的 UI子系统的职责。 ")]),_:1}),g,y,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 我希望用命名+一些约定规范我们的成员函数，哪些是所有端可见、哪些是客户端可见、甚至一些是仅服务端可见。 ")]),_:1}),I,t(s,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n(" 只需要在对应的UI绑定委托，并且在合适的地方传递数据即可。 ")]),_:1})])}const L=o(d,[["render",U],["__file","2.3.-GamePlayNetWork.html.vue"]]);export{L as default};
