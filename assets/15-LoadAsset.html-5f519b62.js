import{_ as p,r as c,o as r,c as d,d as s,w as e,a as n,b as a,e as i}from"./app-25627e0a.js";const u="/RenderDoc/assets/load001-e699c7e9.png",h="/RenderDoc/assets/loadassets-88d31cc8.png",m="/RenderDoc/assets/uobject-238b543d.png",g="/RenderDoc/assets/slih-87aa17b6.png",_="/RenderDoc/assets/pt-f285718a.png",f="/RenderDoc/assets/print5-b4365e15.png",k="/RenderDoc/assets/load002-1949574f.png",b={},v=n("h2",{id:"前置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前置","aria-hidden":"true"},"#"),a(" 前置")],-1),x=n("code",null,"类和对象",-1),j=n("h2",{id:"异步",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#异步","aria-hidden":"true"},"#"),a(" 异步")],-1),L=n("figure",null,[n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),S=i(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//定义句柄</span>
TSharedPtr<span class="token operator">&lt;</span>FStreamableHandle<span class="token operator">&gt;</span> Handle<span class="token punctuation">;</span>

TSoftObjectPtr<span class="token operator">&lt;</span>UInventorySubConfig<span class="token operator">&gt;</span> SubConfig<span class="token punctuation">;</span><span class="token comment">//如果是软引用，需要先ToSoftObjectPath()，使用需要先ToSoftObjectPath重载版本</span>

<span class="token keyword">const</span> UInventoryTotalConfig<span class="token operator">*</span> SubConfig<span class="token punctuation">;</span><span class="token comment">//如果是对象指针，可以直接放进去,会有对应的重载版本</span>

<span class="token comment">//委托</span>
FStreamableDelegate SubConfigLoadDelegate <span class="token operator">=</span> <span class="token class-name">FStreamableDelegate</span><span class="token double-colon punctuation">::</span><span class="token function">CreateUObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>你的类<span class="token double-colon punctuation">::</span>回调函数<span class="token punctuation">,</span> Index<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//异步加载</span>
Handle <span class="token operator">=</span> <span class="token class-name">UAssetManager</span><span class="token double-colon punctuation">::</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetStreamableManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RequestAsyncLoad</span><span class="token punctuation">(</span>SubConfig<span class="token punctuation">,</span> SubConfigLoadDelegate<span class="token punctuation">)</span><span class="token punctuation">;</span>

Handle<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否有效</span>
Handle<span class="token operator">-&gt;</span><span class="token function">HasLoadCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//进度 </span>
Handle<span class="token punctuation">.</span><span class="token function">GetLoadedAsset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取资源</span>
Handle<span class="token punctuation">.</span><span class="token function">ReleaseHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//释放句柄</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=n("figure",null,[n("img",{src:h,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),C=n("h3",{id:"问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),a(" 问题")],-1),D=n("p",null,[a("Handle->GetLoadedAsset() 返回加载完成的资产，已经是实例化的对象，它返回都是 "),n("code",null,"uobject"),a("。")],-1),w=n("figure",null,[n("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),R=n("figure",null,[n("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),U=n("figure",null,[n("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),z=n("figure",null,[n("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),A=i('<h2 id="同步" tabindex="-1"><a class="header-anchor" href="#同步" aria-hidden="true">#</a> 同步</h2><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',3),E={href:"https://www.cnblogs.com/shiroe/p/14710066.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://docs.unrealengine.com/5.3/zh-CN/asynchronous-asset-loading-in-unreal-engine/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.bilibili.com/video/BV1Mr4y1A7nZ/?t=1h03m33s&vd_source=fc61eb54bf3245afbff2be6b8c1ebfc2",target:"_blank",rel:"noopener noreferrer"},B={href:"https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc",target:"_blank",rel:"noopener noreferrer"},I={href:"https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html",target:"_blank",rel:"noopener noreferrer"};function T(N,O){const t=c("chatmessage"),l=c("RouterLink"),o=c("ExternalLinkIcon");return r(),d("div",null,[s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 资源加载的几种写法 ")]),_:1}),v,s(t,{avatar:"../../assets/emoji/bqb (2).png",avatarWidth:40,alignLeft:""},{default:e(()=>[n("p",null,[a("食用本文建议先了解"),x,a("的介绍！"),s(l,{to:"/unreal/function%5B%E5%87%BD%E6%95%B0%5D/10-PTRINUE.html"},{default:e(()=>[a("直通车")]),_:1})])]),_:1}),j,L,s(t,{avatar:"../../assets/emoji/ybk.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" 这里主要记录一下UAssetManager的异步加载，异步加载一定要检查指针！对于高频加载操作千万别自己释放句柄！因为异步玩玩不是实时的，容易出现线程安全问题！ ")]),_:1}),S,s(t,{avatar:"../../assets/emoji/ybk.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" 对应的蓝图节点 ")]),_:1}),y,C,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 为什么资产加载后不需要实例化？ ")]),_:1}),s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:e(()=>[D]),_:1}),w,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 可是有时候我们会在这种资产中配置对象，这个对象为什么也被实例化了？ ")]),_:1}),R,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" 你这个添加行为其实就是UE编辑器的实例化行为。比方说我们构造函数的ID是0，然后去蓝图中重写。 ")]),_:1}),U,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40,alignLeft:""},{default:e(()=>[a(" 如果说加载资产后才实例这个对象应该打印0，但实际是根据你蓝图中配置的5,这也验证了你加载资产是你蓝图派生的资产。 ")]),_:1}),z,s(t,{avatar:"../../assets/emoji/hx.png",avatarWidth:40},{default:e(()=>[a(" 难怪有时候我直接派生UObject的构造函数中打印会报错，因为引擎启动就加载所有UObject类，GEngine可能没实例化就调用导致指针悬挂问题。 ")]),_:1}),A,n("p",null,[n("a",E,[a("https://www.cnblogs.com/shiroe/p/14710066.html"),s(o)])]),n("p",null,[n("a",H,[a("官方文档"),s(o)])]),n("p",null,[n("a",W,[a("官方直播"),s(o)])]),n("p",null,[n("a",B,[a("https://qiita.com/Zi_su/items/81dc5b5e29a96ad2cecc"),s(o)])]),n("p",null,[n("a",I,[a("https://jdelezenne.github.io/Codex/UE4/Assets%20Streaming.html"),s(o)])])])}const G=p(b,[["render",T],["__file","15-LoadAsset.html.vue"]]);export{G as default};
