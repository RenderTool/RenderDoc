const n=JSON.parse('{"key":"v-6526b1c5","path":"/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/ptr_%E6%8C%87%E9%92%88_/6-Ptr-Function.html","title":"c++函数指针","lang":"zh-CN","frontmatter":{"title":"c++函数指针","order":6,"category":["c++"],"description":"C Primer Plus（第6版）中文版 函数指针的语法 声明函数指针： returnType (*pointerName)(parameterType1, parameterType2, ...); 这里： returnType 是函数返回类型。 pointerName 是函数指针的名称。 parameterType1, parameterType2, ... 是函数参数类型。 初始化函数指针： pointerName = &amp;functionName; // 或者简写为 pointerName = functionName; functionName 是一个已经声明的函数，其返回类型和参数类型要与函数指针声明中的类型匹配。 使用函数指针调用函数： returnType result = pointerName(argument1, argument2, ...); //或者 returnType result =(*pointerName)(argument1, argument2, ...); 这里的 argument1, argument2, ... 是传递给函数的实际参数。 函数地址： 函数指针地址很简单，就是函数名**去掉()** //获取函数地址 int add(int a, int b); std::cout &lt;&lt; \\"Address of add: \\" &lt;&lt; add &lt;&lt; std::endl; //Address of add: 00007FF65AC81474 函数指针地址：","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/language/cpp/BaseGuide_%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5_/ptr_%E6%8C%87%E9%92%88_/6-Ptr-Function.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"c++函数指针"}],["meta",{"property":"og:description","content":"C Primer Plus（第6版）中文版 函数指针的语法 声明函数指针： returnType (*pointerName)(parameterType1, parameterType2, ...); 这里： returnType 是函数返回类型。 pointerName 是函数指针的名称。 parameterType1, parameterType2, ... 是函数参数类型。 初始化函数指针： pointerName = &amp;functionName; // 或者简写为 pointerName = functionName; functionName 是一个已经声明的函数，其返回类型和参数类型要与函数指针声明中的类型匹配。 使用函数指针调用函数： returnType result = pointerName(argument1, argument2, ...); //或者 returnType result =(*pointerName)(argument1, argument2, ...); 这里的 argument1, argument2, ... 是传递给函数的实际参数。 函数地址： 函数指针地址很简单，就是函数名**去掉()** //获取函数地址 int add(int a, int b); std::cout &lt;&lt; \\"Address of add: \\" &lt;&lt; add &lt;&lt; std::endl; //Address of add: 00007FF65AC81474 函数指针地址："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T22:07:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2024-01-02T22:07:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++函数指针\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-02T22:07:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[{"level":3,"title":"函数指针的语法","slug":"函数指针的语法","link":"#函数指针的语法","children":[]},{"level":3,"title":"函数指针例子","slug":"函数指针例子","link":"#函数指针例子","children":[]}],"git":{"createdTime":1701724009000,"updatedTime":1704233233000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":1},{"name":"sigaohe","email":"750831855@qq.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"language/cpp/BaseGuide[基础概念]/ptr[指针]/6-Ptr-Function.md","localizedDate":"2023年12月4日","excerpt":"\\n\\n<figure><figcaption>C Primer Plus（第6版）中文版</figcaption></figure>\\n<h3> 函数指针的语法</h3>\\n<ol>\\n<li>\\n<p><strong>声明函数指针：</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token function\\">returnType</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>pointerName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>parameterType1<span class=\\"token punctuation\\">,</span> parameterType2<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p>这里：</p>\\n<ul>\\n<li><code>returnType</code> 是函数返回类型。</li>\\n<li><code>pointerName</code> 是函数指针的名称。</li>\\n<li><code>parameterType1, parameterType2, ...</code> 是函数参数类型。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>初始化函数指针：</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>pointerName <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">&amp;</span>functionName<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 或者简写为</span>\\npointerName <span class=\\"token operator\\">=</span> functionName<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><code>functionName</code> 是一个已经声明的函数，其返回类型和参数类型要与函数指针声明中的类型匹配。</p>\\n</li>\\n<li>\\n<p><strong>使用函数指针调用函数：</strong></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>returnType result <span class=\\"token operator\\">=</span> <span class=\\"token function\\">pointerName</span><span class=\\"token punctuation\\">(</span>argument1<span class=\\"token punctuation\\">,</span> argument2<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//或者</span>\\nreturnType result <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>pointerName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>argument1<span class=\\"token punctuation\\">,</span> argument2<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>这里的 <code>argument1, argument2, ...</code> 是传递给函数的实际参数。</p>\\n</li>\\n<li>\\n<p><strong>函数地址：</strong>\\n函数指针地址很简单，就是函数名<code>**去掉()**</code></p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">//获取函数地址</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nstd<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Address of add: \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> add <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">//Address of add: 00007FF65AC81474</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>函数指针地址：</strong></p>\\n</li>\\n</ol>","autoDesc":true}');export{n as data};
