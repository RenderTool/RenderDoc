const n=JSON.parse('{"key":"v-6635f88e","path":"/unreal/template_%E6%A8%A1%E6%9D%BF_/1-Iterator.html","title":"TP1.迭代器[Iterator]","lang":"zh-CN","frontmatter":{"title":"TP1.迭代器[Iterator]","order":1,"category":["u++"],"description":"TArray 迭代器： TArray 是UE中用于动态数组的模板类。它提供了多种迭代器，如 TArray&lt;T&gt;::Iterator，TArray&lt;T&gt;::ConstIterator 等。使用迭代器可以循环遍历数组中的元素。 TArray&lt;int32&gt; MyArray; for (auto It = MyArray.CreateIterator(); It; ++It) { int32&amp; Element = *It; // 对 Element 进行操作 } TMap 迭代器： TMap 是UE用于映射的模板类。它提供了多种迭代器，如 TMap&lt;KeyType, ValueType&gt;::TIterator，TMap&lt;KeyType, ValueType&gt;::TConstIterator 等。 TMap&lt;FString, int32&gt; MyMap; for (auto It = MyMap.CreateIterator(); It; ++It) { const FString&amp; Key = It.Key(); int32&amp; Value = It.Value(); // 对 Key 和 Value 进行操作 } //传统写法 TMap&lt;FString, int32&gt; MyMap; for TMap&lt;FString, int32&gt;::Iterator It(MyMap); It; ++It) { const FString&amp; Key = It.Key(); int32&amp; Value = It.Value(); } TSet 迭代器： TSet 是UE中用于集合的模板类。它提供了多种迭代器，如 TSet&lt;T&gt;::TIterator，TSet&lt;T&gt;::TConstIterator 等。 TSet&lt;int32&gt; MySet; for (auto It = MySet.CreateIterator(); It; ++It) { int32&amp; Element = *It; // 对 Element 进行操作 } TActorIterator： TActorIterator 是用于迭代关卡中的Actor的迭代器。","head":[["meta",{"property":"og:url","content":"https://rendertool.github.io/RenderDoc/RenderDoc/unreal/template_%E6%A8%A1%E6%9D%BF_/1-Iterator.html"}],["meta",{"property":"og:site_name","content":"RenderDoc"}],["meta",{"property":"og:title","content":"TP1.迭代器[Iterator]"}],["meta",{"property":"og:description","content":"TArray 迭代器： TArray 是UE中用于动态数组的模板类。它提供了多种迭代器，如 TArray&lt;T&gt;::Iterator，TArray&lt;T&gt;::ConstIterator 等。使用迭代器可以循环遍历数组中的元素。 TArray&lt;int32&gt; MyArray; for (auto It = MyArray.CreateIterator(); It; ++It) { int32&amp; Element = *It; // 对 Element 进行操作 } TMap 迭代器： TMap 是UE用于映射的模板类。它提供了多种迭代器，如 TMap&lt;KeyType, ValueType&gt;::TIterator，TMap&lt;KeyType, ValueType&gt;::TConstIterator 等。 TMap&lt;FString, int32&gt; MyMap; for (auto It = MyMap.CreateIterator(); It; ++It) { const FString&amp; Key = It.Key(); int32&amp; Value = It.Value(); // 对 Key 和 Value 进行操作 } //传统写法 TMap&lt;FString, int32&gt; MyMap; for TMap&lt;FString, int32&gt;::Iterator It(MyMap); It; ++It) { const FString&amp; Key = It.Key(); int32&amp; Value = It.Value(); } TSet 迭代器： TSet 是UE中用于集合的模板类。它提供了多种迭代器，如 TSet&lt;T&gt;::TIterator，TSet&lt;T&gt;::TConstIterator 等。 TSet&lt;int32&gt; MySet; for (auto It = MySet.CreateIterator(); It; ++It) { int32&amp; Element = *It; // 对 Element 进行操作 } TActorIterator： TActorIterator 是用于迭代关卡中的Actor的迭代器。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-20T12:08:07.000Z"}],["meta",{"property":"article:author","content":"Mr.Si"}],["meta",{"property":"article:modified_time","content":"2023-12-20T12:08:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TP1.迭代器[Iterator]\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-20T12:08:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Si\\",\\"url\\":\\"https://rendertool.github.io/RenderDoc/\\"}]}"]]},"headers":[],"git":{"createdTime":1701200797000,"updatedTime":1703074087000,"contributors":[{"name":"admin","email":"750831855@qq.com","commits":2}]},"readingTime":{"minutes":1.82,"words":547},"filePathRelative":"unreal/template[模板]/1-Iterator.md","localizedDate":"2023年11月28日","excerpt":"\\n<ol>\\n<li>\\n<p><strong>TArray 迭代器：</strong></p>\\n<ul>\\n<li><code>TArray</code> 是UE中用于动态数组的模板类。它提供了多种迭代器，如 <code>TArray&lt;T&gt;::Iterator</code>，<code>TArray&lt;T&gt;::ConstIterator</code> 等。使用迭代器可以循环遍历数组中的元素。</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TArray<span class=\\"token operator\\">&lt;</span>int32<span class=\\"token operator\\">&gt;</span> MyArray<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">auto</span> It <span class=\\"token operator\\">=</span> MyArray<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateIterator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> It<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>It<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    int32<span class=\\"token operator\\">&amp;</span> Element <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">*</span>It<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 对 Element 进行操作</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>TMap 迭代器：</strong></p>\\n<ul>\\n<li><code>TMap</code> 是UE用于映射的模板类。它提供了多种迭代器，如 <code>TMap&lt;KeyType, ValueType&gt;::TIterator</code>，<code>TMap&lt;KeyType, ValueType&gt;::TConstIterator</code> 等。</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TMap<span class=\\"token operator\\">&lt;</span>FString<span class=\\"token punctuation\\">,</span> int32<span class=\\"token operator\\">&gt;</span> MyMap<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">auto</span> It <span class=\\"token operator\\">=</span> MyMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateIterator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> It<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>It<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> FString<span class=\\"token operator\\">&amp;</span> Key <span class=\\"token operator\\">=</span> It<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Key</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    int32<span class=\\"token operator\\">&amp;</span> Value <span class=\\"token operator\\">=</span> It<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Value</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 对 Key 和 Value 进行操作</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//传统写法</span>\\nTMap<span class=\\"token operator\\">&lt;</span>FString<span class=\\"token punctuation\\">,</span> int32<span class=\\"token operator\\">&gt;</span> MyMap<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> TMap<span class=\\"token operator\\">&lt;</span>FString<span class=\\"token punctuation\\">,</span> int32<span class=\\"token operator\\">&gt;</span><span class=\\"token double-colon punctuation\\">::</span>Iterator <span class=\\"token function\\">It</span><span class=\\"token punctuation\\">(</span>MyMap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> It<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>It<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> FString<span class=\\"token operator\\">&amp;</span> Key <span class=\\"token operator\\">=</span> It<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Key</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    int32<span class=\\"token operator\\">&amp;</span> Value <span class=\\"token operator\\">=</span> It<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Value</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>TSet 迭代器：</strong></p>\\n<ul>\\n<li><code>TSet</code> 是UE中用于集合的模板类。它提供了多种迭代器，如 <code>TSet&lt;T&gt;::TIterator</code>，<code>TSet&lt;T&gt;::TConstIterator</code> 等。</li>\\n</ul>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code>TSet<span class=\\"token operator\\">&lt;</span>int32<span class=\\"token operator\\">&gt;</span> MySet<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">auto</span> It <span class=\\"token operator\\">=</span> MySet<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CreateIterator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> It<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>It<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    int32<span class=\\"token operator\\">&amp;</span> Element <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">*</span>It<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 对 Element 进行操作</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>TActorIterator：</strong></p>\\n<ul>\\n<li><code>TActorIterator</code> 是用于迭代关卡中的Actor的迭代器。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{n as data};
