import{_ as o,r as c,o as i,c as r,d as s,w as t,e as d,a as e,b as a}from"./app-1ceeaafe.js";const p={},l=d(`<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><blockquote><p>在C++中，变量声明和定义：</p></blockquote><p><strong>变量声明（Variable Declaration）：</strong> 变量声明是指通知编译器变量的存在，但不进行实际的分配。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">extern</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>  <span class="token comment">//这是一个变量声明：（通过使用extern关键字，可以声明变量名而不定义它）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>变量定义（Variable Definition）：</strong> 变量定义是指在程序中为变量分配实际的内存空间，同时也可以对其进行初始化。变量定义包含了变量的声明。例如：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>  <span class="token comment">// 这是一个变量定义</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在上述代码中，<code>int x</code> 是变量声明和定义的组合，它告诉编译器分配一个整数类型的内存空间给变量 <code>x</code>，并将其初始化为 42。</p>`,7),u=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),a(" 总结")],-1),_=e("p",null,"为变量分配地址和存储空间的称为定义，不分配地址的称为声明。",-1);function h(m,v){const n=c("ChatMessage");return i(),r("div",null,[s(n,{avatar:"../../../assets/emoji/blzt.png",avatarWidth:40},{default:t(()=>[a(" 变量声明和定义 ")]),_:1}),l,s(n,{avatar:"../../../assets/emoji/dsyj.png",avatarWidth:40},{default:t(()=>[a(" 需要注意的是，变量声明和定义可以分开进行，但通常在实际编程中，它们往往是同时进行的。 ")]),_:1}),u,_])}const g=o(p,[["render",h],["__file","Variable Declaration_ Definition.html.vue"]]);export{g as default};
